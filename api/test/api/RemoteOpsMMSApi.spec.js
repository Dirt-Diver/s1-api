/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.S1MgmtApi);
  }
}(this, function(expect, S1MgmtApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new S1MgmtApi.RemoteOpsMMSApi();
  });

  describe('(package)', function() {
    describe('RemoteOpsMMSApi', function() {
      describe('webApiRemoteOpsDataExporterDestinationProfilesDelete', function() {
        it('should call webApiRemoteOpsDataExporterDestinationProfilesDelete successfully', function(done) {
          // TODO: uncomment, update parameter values for webApiRemoteOpsDataExporterDestinationProfilesDelete call and complete the assertions
          /*
          var opts = {};
          opts.body = new S1MgmtApi.V21DataExporterSchemaDeleteDestinationProfilesRequestSchema();
          opts.body.data = ;
          opts.body.filter = new S1MgmtApi.V21DataExporterSchemaDeleteDestinationProfilesRequestSchemaFilter();
          opts.body.filter.ids = ["225494730938493804"];

          instance.webApiRemoteOpsDataExporterDestinationProfilesDelete(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(S1MgmtApi.V21DataExporterSchemaDeletedDestinationProfilesResponseSchema200);
            expect(data.data).to.be.a(S1MgmtApi.V21DataExporterSchemaDeletedDestinationProfilesResponseSchema200Data);
                  {
                let dataCtr = data.data.affected;
                expect(dataCtr).to.be.an(Array);
                expect(dataCtr).to.not.be.empty();
                for (let p in dataCtr) {
                  let data = dataCtr[p];
                  expect(data).to.be.a('string');
                  expect(data).to.be("225494730938493804");
                }
              }
            {
              let dataCtr = data.errors;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a(Object);
                expect(data).to.be();
              }
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('webApiRemoteOpsDataExporterDestinationProfilesGet', function() {
        it('should call webApiRemoteOpsDataExporterDestinationProfilesGet successfully', function(done) {
          // TODO: uncomment, update parameter values for webApiRemoteOpsDataExporterDestinationProfilesGet call and complete the assertions
          /*
          var opts = {};
          opts.scopeLevel = "scopeLevel_example";
          opts.scopeId = "scopeId_example";

          instance.webApiRemoteOpsDataExporterDestinationProfilesGet(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(S1MgmtApi.V21DataExporterSchemaGetDestinationProfileResultSchemaMany200);
            {
              let dataCtr = data.data;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a(S1MgmtApi.V21DataExporterSchemaGetDestinationProfileResultSchemaMany200Data);
                expect(data.name).to.be.a('string');
                expect(data.name).to.be("");
                expect(data.creatorId).to.be.a('string');
                expect(data.creatorId).to.be("225494730938493804");
                expect(data.destination).to.be.a('string');
                expect(data.destination).to.be("");
                expect(data.updater).to.be.a('string');
                expect(data.updater).to.be("");
                expect(data.apiUrl).to.be.a('string');
                expect(data.apiUrl).to.be("");
                expect(data.scopePath).to.be.a('string');
                expect(data.scopePath).to.be("");
                expect(data.isDefault).to.be.a('boolean');
                expect(data.isDefault).to.be(false);
                expect(data.creator).to.be.a('string');
                expect(data.creator).to.be("");
                expect(data.updaterId).to.be.a('string');
                expect(data.updaterId).to.be("225494730938493804");
                expect(data.apiKey).to.be.a('string');
                expect(data.apiKey).to.be("");
                expect(data.id).to.be.a('string');
                expect(data.id).to.be("225494730938493804");

                      }
            }
            {
              let dataCtr = data.errors;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a(Object);
                expect(data).to.be();
              }
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('webApiRemoteOpsDataExporterDestinationProfilesPost', function() {
        it('should call webApiRemoteOpsDataExporterDestinationProfilesPost successfully', function(done) {
          // TODO: uncomment, update parameter values for webApiRemoteOpsDataExporterDestinationProfilesPost call and complete the assertions
          /*
          var opts = {};
          opts.body = new S1MgmtApi.V21DataExporterSchemaPostDestinationProfileRequestSchema();
          opts.body.name = "";
          opts.body.scopeLevel = "tenant";
          opts.body.scopeId = "225494730938493804";
          opts.body.destination = "skylight";
          opts.body.apiUrl = "";
          opts.body.isDefault = false;
          opts.body.apiKey = "";

          instance.webApiRemoteOpsDataExporterDestinationProfilesPost(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(S1MgmtApi.V21DataExporterSchemaProfileIdResponseSchema200);
            expect(data.data).to.be.a(S1MgmtApi.V21DataExporterSchemaProfileIdResponseSchema200Data);
                  expect(data.data.profileId).to.be.a('string');
              expect(data.data.profileId).to.be("225494730938493804");
            {
              let dataCtr = data.errors;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a(Object);
                expect(data).to.be();
              }
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('webApiRemoteOpsDataExporterDestinationProfilesSetDefaultPost', function() {
        it('should call webApiRemoteOpsDataExporterDestinationProfilesSetDefaultPost successfully', function(done) {
          // TODO: uncomment, update parameter values for webApiRemoteOpsDataExporterDestinationProfilesSetDefaultPost call
          /*
          var opts = {};
          opts.body = new S1MgmtApi.V21DataExporterSchemaSetDefaultDestinationProfile();
          opts.body.data = new S1MgmtApi.V21DataExporterSchemaSetDefaultDestinationProfileData();
          opts.body.data.profileId = "225494730938493804";
          opts.body.data.scopeLevel = "tenant";
          opts.body.data.scopeId = "225494730938493804";

          instance.webApiRemoteOpsDataExporterDestinationProfilesSetDefaultPost(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('webApiRemoteOpsDataExporterDestinationProfilesprofileIdDelete', function() {
        it('should call webApiRemoteOpsDataExporterDestinationProfilesprofileIdDelete successfully', function(done) {
          // TODO: uncomment, update parameter values for webApiRemoteOpsDataExporterDestinationProfilesprofileIdDelete call
          /*
          var profileId = "profileId_example";

          instance.webApiRemoteOpsDataExporterDestinationProfilesprofileIdDelete(profileId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('webApiRemoteOpsDataExporterDestinationProfilesprofileIdGet', function() {
        it('should call webApiRemoteOpsDataExporterDestinationProfilesprofileIdGet successfully', function(done) {
          // TODO: uncomment, update parameter values for webApiRemoteOpsDataExporterDestinationProfilesprofileIdGet call and complete the assertions
          /*
          var profileId = "profileId_example";
          var opts = {};
          opts.scopeLevel = "scopeLevel_example";
          opts.scopeId = "scopeId_example";

          instance.webApiRemoteOpsDataExporterDestinationProfilesprofileIdGet(profileId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(S1MgmtApi.V21DataExporterSchemaGetDestinationProfileResultSchema200);
            expect(data.data).to.be.a(S1MgmtApi.V21DataExporterSchemaGetDestinationProfileResultSchema200Data);
                  expect(data.data.name).to.be.a('string');
              expect(data.data.name).to.be("");
              expect(data.data.creatorId).to.be.a('string');
              expect(data.data.creatorId).to.be("225494730938493804");
              expect(data.data.destination).to.be.a('string');
              expect(data.data.destination).to.be("");
              expect(data.data.updater).to.be.a('string');
              expect(data.data.updater).to.be("");
              expect(data.data.apiUrl).to.be.a('string');
              expect(data.data.apiUrl).to.be("");
              expect(data.data.scopePath).to.be.a('string');
              expect(data.data.scopePath).to.be("");
              expect(data.data.isDefault).to.be.a('boolean');
              expect(data.data.isDefault).to.be(false);
              expect(data.data.creator).to.be.a('string');
              expect(data.data.creator).to.be("");
              expect(data.data.updaterId).to.be.a('string');
              expect(data.data.updaterId).to.be("225494730938493804");
              expect(data.data.apiKey).to.be.a('string');
              expect(data.data.apiKey).to.be("");
              expect(data.data.id).to.be.a('string');
              expect(data.data.id).to.be("225494730938493804");
            {
              let dataCtr = data.errors;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a(Object);
                expect(data).to.be();
              }
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('webApiRemoteOpsDataExporterDestinationProfilesprofileIdPut', function() {
        it('should call webApiRemoteOpsDataExporterDestinationProfilesprofileIdPut successfully', function(done) {
          // TODO: uncomment, update parameter values for webApiRemoteOpsDataExporterDestinationProfilesprofileIdPut call and complete the assertions
          /*
          var profileId = "profileId_example";
          var opts = {};
          opts.body = new S1MgmtApi.V21DataExporterSchemaPutDestinationProfileRequestSchema();
          opts.body.data = new S1MgmtApi.V21DataExporterSchemaPutDestinationProfileRequestSchemaData();
          opts.body.data.name = "";
          opts.body.data.apiUrl = "";
          opts.body.data.apiKey = "";
          opts.body.data.isDefault = false;

          instance.webApiRemoteOpsDataExporterDestinationProfilesprofileIdPut(profileId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(S1MgmtApi.V21DataExporterSchemaProfileIdResponseSchema200);
            expect(data.data).to.be.a(S1MgmtApi.V21DataExporterSchemaProfileIdResponseSchema200Data);
                  expect(data.data.profileId).to.be.a('string');
              expect(data.data.profileId).to.be("225494730938493804");
            {
              let dataCtr = data.errors;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a(Object);
                expect(data).to.be();
              }
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('webApiRemoteOpsDataExporterResultsGet', function() {
        it('should call webApiRemoteOpsDataExporterResultsGet successfully', function(done) {
          // TODO: uncomment, update parameter values for webApiRemoteOpsDataExporterResultsGet call and complete the assertions
          /*
          var agentId = "agentId_example";
          var opts = {};
          opts.maliciousGroupId = "maliciousGroupId_example";
          opts.taskId = "taskId_example";

          instance.webApiRemoteOpsDataExporterResultsGet(agentId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(S1MgmtApi.V21DataExporterSchemaSkylightUploadResults200);
            expect(data.data).to.be.a(S1MgmtApi.V21DataExporterSchemaSkylightUploadResults200Data);
                  expect(data.data.agentResults).to.be.a(S1MgmtApi.V21DataExporterSchemaSkylightUploadResults200DataAgentResults);
                    expect(data.data.agentResults.isEmpty).to.be.a('boolean');
                expect(data.data.agentResults.isEmpty).to.be(false);
                expect(data.data.agentResults.url).to.be.a('string');
                expect(data.data.agentResults.url).to.be("");
                expect(data.data.agentResults.errorMessage).to.be.a('string');
                expect(data.data.agentResults.errorMessage).to.be("");
                expect(data.data.agentResults.hasFailures).to.be.a('boolean');
                expect(data.data.agentResults.hasFailures).to.be(false);
              expect(data.data.taskResults).to.be.a(S1MgmtApi.V21DataExporterSchemaSkylightUploadResults200DataTaskResults);
                    expect(data.data.taskResults.isEmpty).to.be.a('boolean');
                expect(data.data.taskResults.isEmpty).to.be(false);
                expect(data.data.taskResults.url).to.be.a('string');
                expect(data.data.taskResults.url).to.be("");
                expect(data.data.taskResults.errorMessage).to.be.a('string');
                expect(data.data.taskResults.errorMessage).to.be("");
                expect(data.data.taskResults.hasFailures).to.be.a('boolean');
                expect(data.data.taskResults.hasFailures).to.be(false);
              expect(data.data.threatResults).to.be.a(S1MgmtApi.V21DataExporterSchemaSkylightUploadResults200DataThreatResults);
                    expect(data.data.threatResults.isEmpty).to.be.a('boolean');
                expect(data.data.threatResults.isEmpty).to.be(false);
                expect(data.data.threatResults.url).to.be.a('string');
                expect(data.data.threatResults.url).to.be("");
                expect(data.data.threatResults.errorMessage).to.be.a('string');
                expect(data.data.threatResults.errorMessage).to.be("");
                expect(data.data.threatResults.hasFailures).to.be.a('boolean');
                expect(data.data.threatResults.hasFailures).to.be(false);
            {
              let dataCtr = data.errors;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a(Object);
                expect(data).to.be();
              }
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
