/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.S1MgmtApi);
  }
}(this, function(expect, S1MgmtApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new S1MgmtApi.PoliciesApi();
  });

  describe('(package)', function() {
    describe('PoliciesApi', function() {
      describe('webApiAccountsaccountIdPolicyGet', function() {
        it('should call webApiAccountsaccountIdPolicyGet successfully', function(done) {
          // TODO: uncomment, update parameter values for webApiAccountsaccountIdPolicyGet call and complete the assertions
          /*
          var accountId = "accountId_example";

          instance.webApiAccountsaccountIdPolicyGet(accountId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(S1MgmtApi.PoliciesSchemasEnrichedPolicySchema200);
            {
              let dataCtr = data.errors;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a(Object);
                expect(data).to.be();
              }
            }
            expect(data.data).to.be.a(S1MgmtApi.PoliciesSchemasEnrichedPolicySchema200Data);
                  expect(data.data.autoMitigationAction).to.be.a('string');
              expect(data.data.autoMitigationAction).to.be("");
              expect(data.data.mitigationMode).to.be.a('string');
              expect(data.data.mitigationMode).to.be("detect");
              expect(data.data.iocAttributes).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyIocAttributes);
                    expect(data.data.iocAttributes.smartFileMonitoring).to.be.a('boolean');
                expect(data.data.iocAttributes.smartFileMonitoring).to.be(false);
                expect(data.data.iocAttributes.windowsEventLogs).to.be.a('boolean');
                expect(data.data.iocAttributes.windowsEventLogs).to.be(false);
                expect(data.data.iocAttributes.autoInstallBrowserExtensions).to.be.a('boolean');
                expect(data.data.iocAttributes.autoInstallBrowserExtensions).to.be(false);
                expect(data.data.iocAttributes.dataMasking).to.be.a('boolean');
                expect(data.data.iocAttributes.dataMasking).to.be(false);
                expect(data.data.iocAttributes.dllModuleLoad).to.be.a('boolean');
                expect(data.data.iocAttributes.dllModuleLoad).to.be(false);
                expect(data.data.iocAttributes.dns).to.be.a('boolean');
                expect(data.data.iocAttributes.dns).to.be(false);
                expect(data.data.iocAttributes.crossProcess).to.be.a('boolean');
                expect(data.data.iocAttributes.crossProcess).to.be(false);
                expect(data.data.iocAttributes.registry).to.be.a('boolean');
                expect(data.data.iocAttributes.registry).to.be(false);
                expect(data.data.iocAttributes.driver).to.be.a('boolean');
                expect(data.data.iocAttributes.driver).to.be(false);
                expect(data.data.iocAttributes.fds).to.be.a('boolean');
                expect(data.data.iocAttributes.fds).to.be(false);
                expect(data.data.iocAttributes.windowsEventLogsExtended).to.be.a('boolean');
                expect(data.data.iocAttributes.windowsEventLogsExtended).to.be(false);
                expect(data.data.iocAttributes.file).to.be.a('boolean');
                expect(data.data.iocAttributes.file).to.be(false);
                expect(data.data.iocAttributes.namedPipeExtended).to.be.a('boolean');
                expect(data.data.iocAttributes.namedPipeExtended).to.be(false);
                expect(data.data.iocAttributes.url).to.be.a('boolean');
                expect(data.data.iocAttributes.url).to.be(false);
                expect(data.data.iocAttributes.behavioralIndicators).to.be.a('boolean');
                expect(data.data.iocAttributes.behavioralIndicators).to.be(false);
                expect(data.data.iocAttributes.process).to.be.a('boolean');
                expect(data.data.iocAttributes.process).to.be(false);
                expect(data.data.iocAttributes.commandScripts).to.be.a('boolean');
                expect(data.data.iocAttributes.commandScripts).to.be(false);
                expect(data.data.iocAttributes.namedPipe).to.be.a('boolean');
                expect(data.data.iocAttributes.namedPipe).to.be(false);
                expect(data.data.iocAttributes.ip).to.be.a('boolean');
                expect(data.data.iocAttributes.ip).to.be(false);
                expect(data.data.iocAttributes.login).to.be.a('boolean');
                expect(data.data.iocAttributes.login).to.be(false);
                expect(data.data.iocAttributes.scheduledTask).to.be.a('boolean');
                expect(data.data.iocAttributes.scheduledTask).to.be(false);
              expect(data.data.fwForNetworkQuarantineEnabled).to.be.a('boolean');
              expect(data.data.fwForNetworkQuarantineEnabled).to.be(false);
              expect(data.data.researchOn).to.be.a('boolean');
              expect(data.data.researchOn).to.be(false);
              expect(data.data.autoFileUpload).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyAutoFileUpload);
                    expect(data.data.autoFileUpload.maxDailyFileUploadLimit).to.be.a('number');
                expect(data.data.autoFileUpload.maxDailyFileUploadLimit).to.be(0);
                expect(data.data.autoFileUpload.includeBenignFiles).to.be.a('boolean');
                expect(data.data.autoFileUpload.includeBenignFiles).to.be(false);
                expect(data.data.autoFileUpload.maxLocalDiskUsageLimit).to.be.a('number');
                expect(data.data.autoFileUpload.maxLocalDiskUsageLimit).to.be(0);
                expect(data.data.autoFileUpload.maxLocalDiskUsage).to.be.a('number');
                expect(data.data.autoFileUpload.maxLocalDiskUsage).to.be(0);
                expect(data.data.autoFileUpload.enabled).to.be.a('boolean');
                expect(data.data.autoFileUpload.enabled).to.be(false);
                expect(data.data.autoFileUpload.maxFileSizeLimit).to.be.a('number');
                expect(data.data.autoFileUpload.maxFileSizeLimit).to.be(0);
                expect(data.data.autoFileUpload.maxFileSize).to.be.a('number');
                expect(data.data.autoFileUpload.maxFileSize).to.be(0);
                expect(data.data.autoFileUpload.maxDailyFileUpload).to.be.a('number');
                expect(data.data.autoFileUpload.maxDailyFileUpload).to.be(0);
              expect(data.data.mitigationModeSuspicious).to.be.a('string');
              expect(data.data.mitigationModeSuspicious).to.be("detect");
              expect(data.data.updatedAt).to.be.a(Date);
              expect(data.data.updatedAt).to.be(2018-02-27T04:49:26.257525Z);
              expect(data.data.antiTamperingOn).to.be.a('boolean');
              expect(data.data.antiTamperingOn).to.be(false);
              expect(data.data.identityReportInterval).to.be.a('number');
              expect(data.data.identityReportInterval).to.be(0);
              expect(data.data.monitorOnExecute).to.be.a('boolean');
              expect(data.data.monitorOnExecute).to.be(false);
              expect(data.data.userId).to.be.a('string');
              expect(data.data.userId).to.be("225494730938493804");
              expect(data.data.driverBlocking).to.be.a('boolean');
              expect(data.data.driverBlocking).to.be(false);
              expect(data.data.identityEndpointReporting).to.be.a('string');
              expect(data.data.identityEndpointReporting).to.be("disabled");
              expect(data.data.isDefault).to.be.a('boolean');
              expect(data.data.isDefault).to.be(false);
              expect(data.data.ioc).to.be.a('boolean');
              expect(data.data.ioc).to.be(false);
              expect(data.data.agentUiOn).to.be.a('boolean');
              expect(data.data.agentUiOn).to.be(false);
              expect(data.data.inheritedFrom).to.be.a('string');
              expect(data.data.inheritedFrom).to.be("site");
              expect(data.data.monitorOnWrite).to.be.a('boolean');
              expect(data.data.monitorOnWrite).to.be(false);
              expect(data.data.identityUpdateInterval).to.be.a('number');
              expect(data.data.identityUpdateInterval).to.be(0);
              expect(data.data.iocSupported).to.be.a('boolean');
              expect(data.data.iocSupported).to.be(false);
              expect(data.data.identityThrottlingInterval).to.be.a('number');
              expect(data.data.identityThrottlingInterval).to.be(0);
              expect(data.data.agentLoggingOn).to.be.a('boolean');
              expect(data.data.agentLoggingOn).to.be(false);
              expect(data.data.unsignedDriverBlockingOn).to.be.a('boolean');
              expect(data.data.unsignedDriverBlockingOn).to.be(false);
              expect(data.data.agentUi).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyAgentUi);
                    expect(data.data.agentUi.threatPopUpNotifications).to.be.a('boolean');
                expect(data.data.agentUi.threatPopUpNotifications).to.be(false);
                expect(data.data.agentUi.contactFreeText).to.be.a('string');
                expect(data.data.agentUi.contactFreeText).to.be("");
                expect(data.data.agentUi.contactEmail).to.be.a('string');
                expect(data.data.agentUi.contactEmail).to.be("");
                expect(data.data.agentUi.maxEventAgeDays).to.be.a('number');
                expect(data.data.agentUi.maxEventAgeDays).to.be(0);
                expect(data.data.agentUi.showAgentWarnings).to.be.a('boolean');
                expect(data.data.agentUi.showAgentWarnings).to.be(false);
                expect(data.data.agentUi.contactPhoneNumber).to.be.a('string');
                expect(data.data.agentUi.contactPhoneNumber).to.be("");
                expect(data.data.agentUi.showDeviceTab).to.be.a('boolean');
                expect(data.data.agentUi.showDeviceTab).to.be(false);
                expect(data.data.agentUi.devicePopUpNotifications).to.be.a('boolean');
                expect(data.data.agentUi.devicePopUpNotifications).to.be(false);
                expect(data.data.agentUi.showSupport).to.be.a('boolean');
                expect(data.data.agentUi.showSupport).to.be(false);
                expect(data.data.agentUi.showQuarantineTab).to.be.a('boolean');
                expect(data.data.agentUi.showQuarantineTab).to.be(false);
                expect(data.data.agentUi.contactCompany).to.be.a('string');
                expect(data.data.agentUi.contactCompany).to.be("");
                expect(data.data.agentUi.showSuspicious).to.be.a('boolean');
                expect(data.data.agentUi.showSuspicious).to.be(false);
                expect(data.data.agentUi.contactOther).to.be.a('string');
                expect(data.data.agentUi.contactOther).to.be("");
                expect(data.data.agentUi.contactDirectMessage).to.be.a('string');
                expect(data.data.agentUi.contactDirectMessage).to.be("");
                expect(data.data.agentUi.contactSupportWebsite).to.be.a('string');
                expect(data.data.agentUi.contactSupportWebsite).to.be("");
                expect(data.data.agentUi.agentUiOn).to.be.a('boolean');
                expect(data.data.agentUi.agentUiOn).to.be(false);
              expect(data.data.userFullName).to.be.a('string');
              expect(data.data.userFullName).to.be("");
              expect(data.data.signedDriverBlockingOn).to.be.a('boolean');
              expect(data.data.signedDriverBlockingOn).to.be(false);
              expect(data.data.allowRemoteShell).to.be.a('boolean');
              expect(data.data.allowRemoteShell).to.be(false);
              expect(data.data.isDvPolicyPerEventType).to.be.a('boolean');
              expect(data.data.isDvPolicyPerEventType).to.be(false);
              expect(data.data.removeMacros).to.be.a('boolean');
              expect(data.data.removeMacros).to.be(false);
              expect(data.data.scanNewAgents).to.be.a('boolean');
              expect(data.data.scanNewAgents).to.be(false);
              expect(data.data.snapshotsOn).to.be.a('boolean');
              expect(data.data.snapshotsOn).to.be(false);
              expect(data.data.engines).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyEngines);
                    expect(data.data.engines.lateralMovement).to.be.a('string');
                expect(data.data.engines.lateralMovement).to.be("on");
                expect(data.data.engines.preExecutionSuspicious).to.be.a('string');
                expect(data.data.engines.preExecutionSuspicious).to.be("on");
                expect(data.data.engines.preExecution).to.be.a('string');
                expect(data.data.engines.preExecution).to.be("on");
                expect(data.data.engines.dataFiles).to.be.a('string');
                expect(data.data.engines.dataFiles).to.be("on");
                expect(data.data.engines.pup).to.be.a('string');
                expect(data.data.engines.pup).to.be("on");
                expect(data.data.engines.executables).to.be.a('string');
                expect(data.data.engines.executables).to.be("on");
                expect(data.data.engines.penetration).to.be.a('string');
                expect(data.data.engines.penetration).to.be("on");
                expect(data.data.engines.applicationControl).to.be.a('string');
                expect(data.data.engines.applicationControl).to.be("on");
                expect(data.data.engines.reputation).to.be.a('string');
                expect(data.data.engines.reputation).to.be("on");
                expect(data.data.engines.exploits).to.be.a('string');
                expect(data.data.engines.exploits).to.be("on");
                expect(data.data.engines.remoteShell).to.be.a('string');
                expect(data.data.engines.remoteShell).to.be("on");
              expect(data.data.remoteOpsForensics).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyRemoteOpsForensics);
                    expect(data.data.remoteOpsForensics.parsedArtifactsDestination).to.be.a('string');
                expect(data.data.remoteOpsForensics.parsedArtifactsDestination).to.be("local");
                expect(data.data.remoteOpsForensics.maximumFileSizeUpload).to.be.a('number');
                expect(data.data.remoteOpsForensics.maximumFileSizeUpload).to.be("0");
                expect(data.data.remoteOpsForensics.maximumDailyUpload).to.be.a('number');
                expect(data.data.remoteOpsForensics.maximumDailyUpload).to.be("0");
                expect(data.data.remoteOpsForensics.maximumFileSizeUploadLimit).to.be.a('number');
                expect(data.data.remoteOpsForensics.maximumFileSizeUploadLimit).to.be("0");
                expect(data.data.remoteOpsForensics.enabled).to.be.a('boolean');
                expect(data.data.remoteOpsForensics.enabled).to.be(false);
                expect(data.data.remoteOpsForensics.cpuLimit).to.be.a('number');
                expect(data.data.remoteOpsForensics.cpuLimit).to.be(0);
                expect(data.data.remoteOpsForensics.maximumDailyUploadLimit).to.be.a('number');
                expect(data.data.remoteOpsForensics.maximumDailyUploadLimit).to.be("0");
              expect(data.data.forensicsAutoTriggering).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyForensicsAutoTriggering);
                    expect(data.data.forensicsAutoTriggering.windowsProfileId).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.windowsProfileId).to.be("");
                expect(data.data.forensicsAutoTriggering.linuxEnabled).to.be.a('boolean');
                expect(data.data.forensicsAutoTriggering.linuxEnabled).to.be(false);
                expect(data.data.forensicsAutoTriggering.macosProfileName).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.macosProfileName).to.be("");
                expect(data.data.forensicsAutoTriggering.macosProfileId).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.macosProfileId).to.be("");
                expect(data.data.forensicsAutoTriggering.windowsProfileName).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.windowsProfileName).to.be("");
                expect(data.data.forensicsAutoTriggering.linuxProfileName).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.linuxProfileName).to.be("");
                expect(data.data.forensicsAutoTriggering.windowsEnabled).to.be.a('boolean');
                expect(data.data.forensicsAutoTriggering.windowsEnabled).to.be(false);
                expect(data.data.forensicsAutoTriggering.linuxProfileId).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.linuxProfileId).to.be("");
                expect(data.data.forensicsAutoTriggering.macosEnabled).to.be.a('boolean');
                expect(data.data.forensicsAutoTriggering.macosEnabled).to.be(false);
              expect(data.data.identityOn).to.be.a('boolean');
              expect(data.data.identityOn).to.be(false);
              expect(data.data.cloudValidationOn).to.be.a(Object);
              expect(data.data.cloudValidationOn).to.be();
              expect(data.data.autoImmuneOn).to.be.a('boolean');
              expect(data.data.autoImmuneOn).to.be(false);
              expect(data.data.agentNotification).to.be.a('boolean');
              expect(data.data.agentNotification).to.be(false);
              expect(data.data.createdAt).to.be.a(Date);
              expect(data.data.createdAt).to.be(2018-02-27T04:49:26.257525Z);
              expect(data.data.networkQuarantineOn).to.be.a('boolean');
              expect(data.data.networkQuarantineOn).to.be(false);
              expect(data.data.autoDecommissionDays).to.be.a('number');
              expect(data.data.autoDecommissionDays).to.be(0);
              expect(data.data.remoteScriptOrchestration).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyRemoteScriptOrchestration);
                    expect(data.data.remoteScriptOrchestration.alwaysUploadStreamToCloud).to.be.a('boolean');
                expect(data.data.remoteScriptOrchestration.alwaysUploadStreamToCloud).to.be(false);
                expect(data.data.remoteScriptOrchestration.maxLocalPackageDiskUsageLimit).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxLocalPackageDiskUsageLimit).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxDailyFileUploadLimit).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxDailyFileUploadLimit).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxLocalPackageDiskUsage).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxLocalPackageDiskUsage).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxDailyFileDownloadLimit).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxDailyFileDownloadLimit).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxFileSizeLimit).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxFileSizeLimit).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxDailyFileDownload).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxDailyFileDownload).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxFileSize).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxFileSize).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxDailyFileUpload).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxDailyFileUpload).to.be("0");
              expect(data.data.autoDecommissionOn).to.be.a('boolean');
              expect(data.data.autoDecommissionOn).to.be(false);
              expect(data.data.dvAttributesPerEventType).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventType);
                    expect(data.data.dvAttributesPerEventType.smartFileMonitoring).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeSmartFileMonitoring);
                      expect(data.data.dvAttributesPerEventType.smartFileMonitoring.smartFileMonitoring).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.smartFileMonitoring.smartFileMonitoring).to.be(false);
                expect(data.data.dvAttributesPerEventType.windowsEventLogs).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeWindowsEventLogs);
                      expect(data.data.dvAttributesPerEventType.windowsEventLogs.dvEventTypeWindowsEventLogCreation).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.windowsEventLogs.dvEventTypeWindowsEventLogCreation).to.be(false);
                expect(data.data.dvAttributesPerEventType.autoInstallBrowserExtensions).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeAutoInstallBrowserExtensions);
                      expect(data.data.dvAttributesPerEventType.autoInstallBrowserExtensions.autoInstallBrowserExtensions).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.autoInstallBrowserExtensions.autoInstallBrowserExtensions).to.be(false);
                expect(data.data.dvAttributesPerEventType.dataMasking).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDataMasking);
                      expect(data.data.dvAttributesPerEventType.dataMasking.dataMasking).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.dataMasking.dataMasking).to.be(false);
                expect(data.data.dvAttributesPerEventType.dllModuleLoad).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDllModuleLoad);
                      expect(data.data.dvAttributesPerEventType.dllModuleLoad.dvEventTypeDllModuleLoad).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.dllModuleLoad.dvEventTypeDllModuleLoad).to.be(false);
                expect(data.data.dvAttributesPerEventType.dns).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDns);
                      expect(data.data.dvAttributesPerEventType.dns.dvEventTypeDns).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.dns.dvEventTypeDns).to.be(false);
                expect(data.data.dvAttributesPerEventType.crossProcess).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeCrossProcess);
                      expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessOpenProcess).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessOpenProcess).to.be(false);
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessRemoteThread).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessRemoteThread).to.be(false);
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateProcess).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateProcess).to.be(false);
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateThread).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateThread).to.be(false);
                expect(data.data.dvAttributesPerEventType.registry).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeRegistry);
                      expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeySecurityChanged).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeySecurityChanged).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueDeleted).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueDeleted).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueModified).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueModified).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyRename).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyRename).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyCreated).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyCreated).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueCreated).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueCreated).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyImport).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyImport).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyDelete).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyDelete).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyExport).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyExport).to.be(false);
                expect(data.data.dvAttributesPerEventType.driver).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDriver);
                      expect(data.data.dvAttributesPerEventType.driver.dvEventTypeDriverLoad).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.driver.dvEventTypeDriverLoad).to.be(false);
                expect(data.data.dvAttributesPerEventType.windowsEventLogsExtended).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeWindowsEventLogsExtended);
                      expect(data.data.dvAttributesPerEventType.windowsEventLogsExtended.windowsEventLogsExtended).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.windowsEventLogsExtended.windowsEventLogsExtended).to.be(false);
                expect(data.data.dvAttributesPerEventType.file).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeFile);
                      expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileModification).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileModification).to.be(false);
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileCreation).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileCreation).to.be(false);
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileRename).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileRename).to.be(false);
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileDeletion).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileDeletion).to.be(false);
                  expect(data.data.dvAttributesPerEventType.file.fullDiskScan).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.fullDiskScan).to.be(false);
                expect(data.data.dvAttributesPerEventType.namedPipeExtended).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeNamedPipeExtended);
                      expect(data.data.dvAttributesPerEventType.namedPipeExtended.namedPipeExtended).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.namedPipeExtended.namedPipeExtended).to.be(false);
                expect(data.data.dvAttributesPerEventType.url).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeUrl);
                      expect(data.data.dvAttributesPerEventType.url.dvEventTypeUrl).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.url.dvEventTypeUrl).to.be(false);
                expect(data.data.dvAttributesPerEventType.behavioralIndicators).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeBehavioralIndicators);
                      expect(data.data.dvAttributesPerEventType.behavioralIndicators.dvEventTypeBehavioralIndicators).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.behavioralIndicators.dvEventTypeBehavioralIndicators).to.be(false);
                expect(data.data.dvAttributesPerEventType.process).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeProcess);
                      expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessModification).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessModification).to.be(false);
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessExit).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessExit).to.be(false);
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessCreation).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessCreation).to.be(false);
                expect(data.data.dvAttributesPerEventType.commandScripts).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeCommandScripts);
                      expect(data.data.dvAttributesPerEventType.commandScripts.dvEventTypeCommandScripts).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.commandScripts.dvEventTypeCommandScripts).to.be(false);
                expect(data.data.dvAttributesPerEventType.namedPipe).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeNamedPipe);
                      expect(data.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeConnection).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeConnection).to.be(false);
                  expect(data.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeCreation).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeCreation).to.be(false);
                expect(data.data.dvAttributesPerEventType.ip).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeIp);
                      expect(data.data.dvAttributesPerEventType.ip.dvEventTypeIpConnect).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.ip.dvEventTypeIpConnect).to.be(false);
                  expect(data.data.dvAttributesPerEventType.ip.dvEventTypeIpListen).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.ip.dvEventTypeIpListen).to.be(false);
                expect(data.data.dvAttributesPerEventType.login).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeLogin);
                      expect(data.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedOut).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedOut).to.be(false);
                  expect(data.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedIn).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedIn).to.be(false);
                expect(data.data.dvAttributesPerEventType.scheduledTask).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeScheduledTask);
                      expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskDelete).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskDelete).to.be(false);
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskUpdate).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskUpdate).to.be(false);
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskRegister).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskRegister).to.be(false);
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskTrigger).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskTrigger).to.be(false);
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskStart).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskStart).to.be(false);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('webApiAccountsaccountIdPolicyPut', function() {
        it('should call webApiAccountsaccountIdPolicyPut successfully', function(done) {
          // TODO: uncomment, update parameter values for webApiAccountsaccountIdPolicyPut call and complete the assertions
          /*
          var accountId = "accountId_example";
          var opts = {};
          opts.body = new S1MgmtApi.PoliciesTenantPolicySchema();
          opts.body.data = new S1MgmtApi.PoliciesTenantPolicySchemaData();
          opts.body.data.autoMitigationAction = "";
          opts.body.data.mitigationMode = "detect";
          opts.body.data.iocAttributes = new S1MgmtApi.SitesSitePutSchemaDataPolicyIocAttributes();
          opts.body.data.iocAttributes.smartFileMonitoring = false;
          opts.body.data.iocAttributes.windowsEventLogs = false;
          opts.body.data.iocAttributes.autoInstallBrowserExtensions = false;
          opts.body.data.iocAttributes.dataMasking = false;
          opts.body.data.iocAttributes.dllModuleLoad = false;
          opts.body.data.iocAttributes.dns = false;
          opts.body.data.iocAttributes.crossProcess = false;
          opts.body.data.iocAttributes.registry = false;
          opts.body.data.iocAttributes.driver = false;
          opts.body.data.iocAttributes.fds = false;
          opts.body.data.iocAttributes.windowsEventLogsExtended = false;
          opts.body.data.iocAttributes.file = false;
          opts.body.data.iocAttributes.namedPipeExtended = false;
          opts.body.data.iocAttributes.url = false;
          opts.body.data.iocAttributes.behavioralIndicators = false;
          opts.body.data.iocAttributes.process = false;
          opts.body.data.iocAttributes.commandScripts = false;
          opts.body.data.iocAttributes.namedPipe = false;
          opts.body.data.iocAttributes.ip = false;
          opts.body.data.iocAttributes.login = false;
          opts.body.data.iocAttributes.scheduledTask = false;
          opts.body.data.researchOn = false;
          opts.body.data.autoFileUpload = new S1MgmtApi.SitesSitePutSchemaDataPolicyAutoFileUpload();
          opts.body.data.autoFileUpload.maxDailyFileUploadLimit = 0;
          opts.body.data.autoFileUpload.includeBenignFiles = false;
          opts.body.data.autoFileUpload.maxLocalDiskUsageLimit = 0;
          opts.body.data.autoFileUpload.maxLocalDiskUsage = 0;
          opts.body.data.autoFileUpload.enabled = false;
          opts.body.data.autoFileUpload.maxFileSizeLimit = 0;
          opts.body.data.autoFileUpload.maxFileSize = 0;
          opts.body.data.autoFileUpload.maxDailyFileUpload = 0;
          opts.body.data.mitigationModeSuspicious = "detect";
          opts.body.data.updatedAt = 2018-02-27T04:49:26.257525Z;
          opts.body.data.antiTamperingOn = false;
          opts.body.data.identityReportInterval = 0;
          opts.body.data.monitorOnExecute = false;
          opts.body.data.userId = "225494730938493804";
          opts.body.data.driverBlocking = false;
          opts.body.data.identityEndpointReporting = "disabled";
          opts.body.data.isDefault = false;
          opts.body.data.ioc = false;
          opts.body.data.agentUiOn = false;
          opts.body.data.monitorOnWrite = false;
          opts.body.data.identityUpdateInterval = 0;
          opts.body.data.iocSupported = false;
          opts.body.data.identityThrottlingInterval = 0;
          opts.body.data.agentLoggingOn = false;
          opts.body.data.unsignedDriverBlockingOn = false;
          opts.body.data.agentUi = new S1MgmtApi.SitesSitePutSchemaDataPolicyAgentUi();
          opts.body.data.agentUi.threatPopUpNotifications = false;
          opts.body.data.agentUi.contactFreeText = "";
          opts.body.data.agentUi.contactEmail = "";
          opts.body.data.agentUi.maxEventAgeDays = 0;
          opts.body.data.agentUi.showAgentWarnings = false;
          opts.body.data.agentUi.contactPhoneNumber = "";
          opts.body.data.agentUi.showDeviceTab = false;
          opts.body.data.agentUi.devicePopUpNotifications = false;
          opts.body.data.agentUi.showSupport = false;
          opts.body.data.agentUi.showQuarantineTab = false;
          opts.body.data.agentUi.contactCompany = "";
          opts.body.data.agentUi.showSuspicious = false;
          opts.body.data.agentUi.contactOther = "";
          opts.body.data.agentUi.contactDirectMessage = "";
          opts.body.data.agentUi.contactSupportWebsite = "";
          opts.body.data.agentUi.agentUiOn = false;
          opts.body.data.userFullName = "";
          opts.body.data.signedDriverBlockingOn = false;
          opts.body.data.allowRemoteShell = false;
          opts.body.data.isDvPolicyPerEventType = false;
          opts.body.data.removeMacros = false;
          opts.body.data.scanNewAgents = false;
          opts.body.data.snapshotsOn = false;
          opts.body.data.engines = new S1MgmtApi.SitesSitePutSchemaDataPolicyEngines();
          opts.body.data.engines.lateralMovement = "on";
          opts.body.data.engines.preExecutionSuspicious = "on";
          opts.body.data.engines.preExecution = "on";
          opts.body.data.engines.dataFiles = "on";
          opts.body.data.engines.pup = "on";
          opts.body.data.engines.executables = "on";
          opts.body.data.engines.penetration = "on";
          opts.body.data.engines.applicationControl = "on";
          opts.body.data.engines.reputation = "on";
          opts.body.data.engines.exploits = "on";
          opts.body.data.engines.remoteShell = "on";
          opts.body.data.remoteOpsForensics = new S1MgmtApi.SitesSitePutSchemaDataPolicyRemoteOpsForensics();
          opts.body.data.remoteOpsForensics.parsedArtifactsDestination = "local";
          opts.body.data.remoteOpsForensics.maximumFileSizeUpload = "0";
          opts.body.data.remoteOpsForensics.maximumDailyUpload = "0";
          opts.body.data.remoteOpsForensics.maximumFileSizeUploadLimit = "0";
          opts.body.data.remoteOpsForensics.enabled = false;
          opts.body.data.remoteOpsForensics.cpuLimit = 0;
          opts.body.data.remoteOpsForensics.maximumDailyUploadLimit = "0";
          opts.body.data.forensicsAutoTriggering = new S1MgmtApi.SitesSitePutSchemaDataPolicyForensicsAutoTriggering();
          opts.body.data.forensicsAutoTriggering.windowsProfileId = "";
          opts.body.data.forensicsAutoTriggering.linuxEnabled = false;
          opts.body.data.forensicsAutoTriggering.macosProfileName = "";
          opts.body.data.forensicsAutoTriggering.macosProfileId = "";
          opts.body.data.forensicsAutoTriggering.windowsProfileName = "";
          opts.body.data.forensicsAutoTriggering.linuxProfileName = "";
          opts.body.data.forensicsAutoTriggering.windowsEnabled = false;
          opts.body.data.forensicsAutoTriggering.linuxProfileId = "";
          opts.body.data.forensicsAutoTriggering.macosEnabled = false;
          opts.body.data.identityOn = false;
          opts.body.data.cloudValidationOn = ;
          opts.body.data.autoImmuneOn = false;
          opts.body.data.agentNotification = false;
          opts.body.data.createdAt = 2018-02-27T04:49:26.257525Z;
          opts.body.data.networkQuarantineOn = false;
          opts.body.data.autoDecommissionDays = 0;
          opts.body.data.remoteScriptOrchestration = new S1MgmtApi.SitesSitePutSchemaDataPolicyRemoteScriptOrchestration();
          opts.body.data.remoteScriptOrchestration.alwaysUploadStreamToCloud = false;
          opts.body.data.remoteScriptOrchestration.maxLocalPackageDiskUsageLimit = "0";
          opts.body.data.remoteScriptOrchestration.maxDailyFileUploadLimit = "0";
          opts.body.data.remoteScriptOrchestration.maxLocalPackageDiskUsage = "0";
          opts.body.data.remoteScriptOrchestration.maxDailyFileDownloadLimit = "0";
          opts.body.data.remoteScriptOrchestration.maxFileSizeLimit = "0";
          opts.body.data.remoteScriptOrchestration.maxDailyFileDownload = "0";
          opts.body.data.remoteScriptOrchestration.maxFileSize = "0";
          opts.body.data.remoteScriptOrchestration.maxDailyFileUpload = "0";
          opts.body.data.autoDecommissionOn = false;
          opts.body.data.dvAttributesPerEventType = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventType();
          opts.body.data.dvAttributesPerEventType.smartFileMonitoring = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeSmartFileMonitoring();
          opts.body.data.dvAttributesPerEventType.smartFileMonitoring.smartFileMonitoring = false;
          opts.body.data.dvAttributesPerEventType.windowsEventLogs = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeWindowsEventLogs();
          opts.body.data.dvAttributesPerEventType.windowsEventLogs.dvEventTypeWindowsEventLogCreation = false;
          opts.body.data.dvAttributesPerEventType.autoInstallBrowserExtensions = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeAutoInstallBrowserExtensions();
          opts.body.data.dvAttributesPerEventType.autoInstallBrowserExtensions.autoInstallBrowserExtensions = false;
          opts.body.data.dvAttributesPerEventType.dataMasking = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDataMasking();
          opts.body.data.dvAttributesPerEventType.dataMasking.dataMasking = false;
          opts.body.data.dvAttributesPerEventType.dllModuleLoad = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDllModuleLoad();
          opts.body.data.dvAttributesPerEventType.dllModuleLoad.dvEventTypeDllModuleLoad = false;
          opts.body.data.dvAttributesPerEventType.dns = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDns();
          opts.body.data.dvAttributesPerEventType.dns.dvEventTypeDns = false;
          opts.body.data.dvAttributesPerEventType.crossProcess = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeCrossProcess();
          opts.body.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessOpenProcess = false;
          opts.body.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessRemoteThread = false;
          opts.body.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateProcess = false;
          opts.body.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateThread = false;
          opts.body.data.dvAttributesPerEventType.registry = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeRegistry();
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeySecurityChanged = false;
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueDeleted = false;
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueModified = false;
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyRename = false;
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyCreated = false;
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueCreated = false;
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyImport = false;
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyDelete = false;
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyExport = false;
          opts.body.data.dvAttributesPerEventType.driver = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDriver();
          opts.body.data.dvAttributesPerEventType.driver.dvEventTypeDriverLoad = false;
          opts.body.data.dvAttributesPerEventType.windowsEventLogsExtended = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeWindowsEventLogsExtended();
          opts.body.data.dvAttributesPerEventType.windowsEventLogsExtended.windowsEventLogsExtended = false;
          opts.body.data.dvAttributesPerEventType.file = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeFile();
          opts.body.data.dvAttributesPerEventType.file.dvEventTypeFileModification = false;
          opts.body.data.dvAttributesPerEventType.file.dvEventTypeFileCreation = false;
          opts.body.data.dvAttributesPerEventType.file.dvEventTypeFileRename = false;
          opts.body.data.dvAttributesPerEventType.file.dvEventTypeFileDeletion = false;
          opts.body.data.dvAttributesPerEventType.file.fullDiskScan = false;
          opts.body.data.dvAttributesPerEventType.namedPipeExtended = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeNamedPipeExtended();
          opts.body.data.dvAttributesPerEventType.namedPipeExtended.namedPipeExtended = false;
          opts.body.data.dvAttributesPerEventType.url = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeUrl();
          opts.body.data.dvAttributesPerEventType.url.dvEventTypeUrl = false;
          opts.body.data.dvAttributesPerEventType.behavioralIndicators = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeBehavioralIndicators();
          opts.body.data.dvAttributesPerEventType.behavioralIndicators.dvEventTypeBehavioralIndicators = false;
          opts.body.data.dvAttributesPerEventType.process = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeProcess();
          opts.body.data.dvAttributesPerEventType.process.dvEventTypeProcessModification = false;
          opts.body.data.dvAttributesPerEventType.process.dvEventTypeProcessExit = false;
          opts.body.data.dvAttributesPerEventType.process.dvEventTypeProcessCreation = false;
          opts.body.data.dvAttributesPerEventType.commandScripts = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeCommandScripts();
          opts.body.data.dvAttributesPerEventType.commandScripts.dvEventTypeCommandScripts = false;
          opts.body.data.dvAttributesPerEventType.namedPipe = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeNamedPipe();
          opts.body.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeConnection = false;
          opts.body.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeCreation = false;
          opts.body.data.dvAttributesPerEventType.ip = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeIp();
          opts.body.data.dvAttributesPerEventType.ip.dvEventTypeIpConnect = false;
          opts.body.data.dvAttributesPerEventType.ip.dvEventTypeIpListen = false;
          opts.body.data.dvAttributesPerEventType.login = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeLogin();
          opts.body.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedOut = false;
          opts.body.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedIn = false;
          opts.body.data.dvAttributesPerEventType.scheduledTask = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeScheduledTask();
          opts.body.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskDelete = false;
          opts.body.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskUpdate = false;
          opts.body.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskRegister = false;
          opts.body.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskTrigger = false;
          opts.body.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskStart = false;

          instance.webApiAccountsaccountIdPolicyPut(accountId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(S1MgmtApi.PoliciesSchemasEnrichedPolicySchema200);
            {
              let dataCtr = data.errors;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a(Object);
                expect(data).to.be();
              }
            }
            expect(data.data).to.be.a(S1MgmtApi.PoliciesSchemasEnrichedPolicySchema200Data);
                  expect(data.data.autoMitigationAction).to.be.a('string');
              expect(data.data.autoMitigationAction).to.be("");
              expect(data.data.mitigationMode).to.be.a('string');
              expect(data.data.mitigationMode).to.be("detect");
              expect(data.data.iocAttributes).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyIocAttributes);
                    expect(data.data.iocAttributes.smartFileMonitoring).to.be.a('boolean');
                expect(data.data.iocAttributes.smartFileMonitoring).to.be(false);
                expect(data.data.iocAttributes.windowsEventLogs).to.be.a('boolean');
                expect(data.data.iocAttributes.windowsEventLogs).to.be(false);
                expect(data.data.iocAttributes.autoInstallBrowserExtensions).to.be.a('boolean');
                expect(data.data.iocAttributes.autoInstallBrowserExtensions).to.be(false);
                expect(data.data.iocAttributes.dataMasking).to.be.a('boolean');
                expect(data.data.iocAttributes.dataMasking).to.be(false);
                expect(data.data.iocAttributes.dllModuleLoad).to.be.a('boolean');
                expect(data.data.iocAttributes.dllModuleLoad).to.be(false);
                expect(data.data.iocAttributes.dns).to.be.a('boolean');
                expect(data.data.iocAttributes.dns).to.be(false);
                expect(data.data.iocAttributes.crossProcess).to.be.a('boolean');
                expect(data.data.iocAttributes.crossProcess).to.be(false);
                expect(data.data.iocAttributes.registry).to.be.a('boolean');
                expect(data.data.iocAttributes.registry).to.be(false);
                expect(data.data.iocAttributes.driver).to.be.a('boolean');
                expect(data.data.iocAttributes.driver).to.be(false);
                expect(data.data.iocAttributes.fds).to.be.a('boolean');
                expect(data.data.iocAttributes.fds).to.be(false);
                expect(data.data.iocAttributes.windowsEventLogsExtended).to.be.a('boolean');
                expect(data.data.iocAttributes.windowsEventLogsExtended).to.be(false);
                expect(data.data.iocAttributes.file).to.be.a('boolean');
                expect(data.data.iocAttributes.file).to.be(false);
                expect(data.data.iocAttributes.namedPipeExtended).to.be.a('boolean');
                expect(data.data.iocAttributes.namedPipeExtended).to.be(false);
                expect(data.data.iocAttributes.url).to.be.a('boolean');
                expect(data.data.iocAttributes.url).to.be(false);
                expect(data.data.iocAttributes.behavioralIndicators).to.be.a('boolean');
                expect(data.data.iocAttributes.behavioralIndicators).to.be(false);
                expect(data.data.iocAttributes.process).to.be.a('boolean');
                expect(data.data.iocAttributes.process).to.be(false);
                expect(data.data.iocAttributes.commandScripts).to.be.a('boolean');
                expect(data.data.iocAttributes.commandScripts).to.be(false);
                expect(data.data.iocAttributes.namedPipe).to.be.a('boolean');
                expect(data.data.iocAttributes.namedPipe).to.be(false);
                expect(data.data.iocAttributes.ip).to.be.a('boolean');
                expect(data.data.iocAttributes.ip).to.be(false);
                expect(data.data.iocAttributes.login).to.be.a('boolean');
                expect(data.data.iocAttributes.login).to.be(false);
                expect(data.data.iocAttributes.scheduledTask).to.be.a('boolean');
                expect(data.data.iocAttributes.scheduledTask).to.be(false);
              expect(data.data.fwForNetworkQuarantineEnabled).to.be.a('boolean');
              expect(data.data.fwForNetworkQuarantineEnabled).to.be(false);
              expect(data.data.researchOn).to.be.a('boolean');
              expect(data.data.researchOn).to.be(false);
              expect(data.data.autoFileUpload).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyAutoFileUpload);
                    expect(data.data.autoFileUpload.maxDailyFileUploadLimit).to.be.a('number');
                expect(data.data.autoFileUpload.maxDailyFileUploadLimit).to.be(0);
                expect(data.data.autoFileUpload.includeBenignFiles).to.be.a('boolean');
                expect(data.data.autoFileUpload.includeBenignFiles).to.be(false);
                expect(data.data.autoFileUpload.maxLocalDiskUsageLimit).to.be.a('number');
                expect(data.data.autoFileUpload.maxLocalDiskUsageLimit).to.be(0);
                expect(data.data.autoFileUpload.maxLocalDiskUsage).to.be.a('number');
                expect(data.data.autoFileUpload.maxLocalDiskUsage).to.be(0);
                expect(data.data.autoFileUpload.enabled).to.be.a('boolean');
                expect(data.data.autoFileUpload.enabled).to.be(false);
                expect(data.data.autoFileUpload.maxFileSizeLimit).to.be.a('number');
                expect(data.data.autoFileUpload.maxFileSizeLimit).to.be(0);
                expect(data.data.autoFileUpload.maxFileSize).to.be.a('number');
                expect(data.data.autoFileUpload.maxFileSize).to.be(0);
                expect(data.data.autoFileUpload.maxDailyFileUpload).to.be.a('number');
                expect(data.data.autoFileUpload.maxDailyFileUpload).to.be(0);
              expect(data.data.mitigationModeSuspicious).to.be.a('string');
              expect(data.data.mitigationModeSuspicious).to.be("detect");
              expect(data.data.updatedAt).to.be.a(Date);
              expect(data.data.updatedAt).to.be(2018-02-27T04:49:26.257525Z);
              expect(data.data.antiTamperingOn).to.be.a('boolean');
              expect(data.data.antiTamperingOn).to.be(false);
              expect(data.data.identityReportInterval).to.be.a('number');
              expect(data.data.identityReportInterval).to.be(0);
              expect(data.data.monitorOnExecute).to.be.a('boolean');
              expect(data.data.monitorOnExecute).to.be(false);
              expect(data.data.userId).to.be.a('string');
              expect(data.data.userId).to.be("225494730938493804");
              expect(data.data.driverBlocking).to.be.a('boolean');
              expect(data.data.driverBlocking).to.be(false);
              expect(data.data.identityEndpointReporting).to.be.a('string');
              expect(data.data.identityEndpointReporting).to.be("disabled");
              expect(data.data.isDefault).to.be.a('boolean');
              expect(data.data.isDefault).to.be(false);
              expect(data.data.ioc).to.be.a('boolean');
              expect(data.data.ioc).to.be(false);
              expect(data.data.agentUiOn).to.be.a('boolean');
              expect(data.data.agentUiOn).to.be(false);
              expect(data.data.inheritedFrom).to.be.a('string');
              expect(data.data.inheritedFrom).to.be("site");
              expect(data.data.monitorOnWrite).to.be.a('boolean');
              expect(data.data.monitorOnWrite).to.be(false);
              expect(data.data.identityUpdateInterval).to.be.a('number');
              expect(data.data.identityUpdateInterval).to.be(0);
              expect(data.data.iocSupported).to.be.a('boolean');
              expect(data.data.iocSupported).to.be(false);
              expect(data.data.identityThrottlingInterval).to.be.a('number');
              expect(data.data.identityThrottlingInterval).to.be(0);
              expect(data.data.agentLoggingOn).to.be.a('boolean');
              expect(data.data.agentLoggingOn).to.be(false);
              expect(data.data.unsignedDriverBlockingOn).to.be.a('boolean');
              expect(data.data.unsignedDriverBlockingOn).to.be(false);
              expect(data.data.agentUi).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyAgentUi);
                    expect(data.data.agentUi.threatPopUpNotifications).to.be.a('boolean');
                expect(data.data.agentUi.threatPopUpNotifications).to.be(false);
                expect(data.data.agentUi.contactFreeText).to.be.a('string');
                expect(data.data.agentUi.contactFreeText).to.be("");
                expect(data.data.agentUi.contactEmail).to.be.a('string');
                expect(data.data.agentUi.contactEmail).to.be("");
                expect(data.data.agentUi.maxEventAgeDays).to.be.a('number');
                expect(data.data.agentUi.maxEventAgeDays).to.be(0);
                expect(data.data.agentUi.showAgentWarnings).to.be.a('boolean');
                expect(data.data.agentUi.showAgentWarnings).to.be(false);
                expect(data.data.agentUi.contactPhoneNumber).to.be.a('string');
                expect(data.data.agentUi.contactPhoneNumber).to.be("");
                expect(data.data.agentUi.showDeviceTab).to.be.a('boolean');
                expect(data.data.agentUi.showDeviceTab).to.be(false);
                expect(data.data.agentUi.devicePopUpNotifications).to.be.a('boolean');
                expect(data.data.agentUi.devicePopUpNotifications).to.be(false);
                expect(data.data.agentUi.showSupport).to.be.a('boolean');
                expect(data.data.agentUi.showSupport).to.be(false);
                expect(data.data.agentUi.showQuarantineTab).to.be.a('boolean');
                expect(data.data.agentUi.showQuarantineTab).to.be(false);
                expect(data.data.agentUi.contactCompany).to.be.a('string');
                expect(data.data.agentUi.contactCompany).to.be("");
                expect(data.data.agentUi.showSuspicious).to.be.a('boolean');
                expect(data.data.agentUi.showSuspicious).to.be(false);
                expect(data.data.agentUi.contactOther).to.be.a('string');
                expect(data.data.agentUi.contactOther).to.be("");
                expect(data.data.agentUi.contactDirectMessage).to.be.a('string');
                expect(data.data.agentUi.contactDirectMessage).to.be("");
                expect(data.data.agentUi.contactSupportWebsite).to.be.a('string');
                expect(data.data.agentUi.contactSupportWebsite).to.be("");
                expect(data.data.agentUi.agentUiOn).to.be.a('boolean');
                expect(data.data.agentUi.agentUiOn).to.be(false);
              expect(data.data.userFullName).to.be.a('string');
              expect(data.data.userFullName).to.be("");
              expect(data.data.signedDriverBlockingOn).to.be.a('boolean');
              expect(data.data.signedDriverBlockingOn).to.be(false);
              expect(data.data.allowRemoteShell).to.be.a('boolean');
              expect(data.data.allowRemoteShell).to.be(false);
              expect(data.data.isDvPolicyPerEventType).to.be.a('boolean');
              expect(data.data.isDvPolicyPerEventType).to.be(false);
              expect(data.data.removeMacros).to.be.a('boolean');
              expect(data.data.removeMacros).to.be(false);
              expect(data.data.scanNewAgents).to.be.a('boolean');
              expect(data.data.scanNewAgents).to.be(false);
              expect(data.data.snapshotsOn).to.be.a('boolean');
              expect(data.data.snapshotsOn).to.be(false);
              expect(data.data.engines).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyEngines);
                    expect(data.data.engines.lateralMovement).to.be.a('string');
                expect(data.data.engines.lateralMovement).to.be("on");
                expect(data.data.engines.preExecutionSuspicious).to.be.a('string');
                expect(data.data.engines.preExecutionSuspicious).to.be("on");
                expect(data.data.engines.preExecution).to.be.a('string');
                expect(data.data.engines.preExecution).to.be("on");
                expect(data.data.engines.dataFiles).to.be.a('string');
                expect(data.data.engines.dataFiles).to.be("on");
                expect(data.data.engines.pup).to.be.a('string');
                expect(data.data.engines.pup).to.be("on");
                expect(data.data.engines.executables).to.be.a('string');
                expect(data.data.engines.executables).to.be("on");
                expect(data.data.engines.penetration).to.be.a('string');
                expect(data.data.engines.penetration).to.be("on");
                expect(data.data.engines.applicationControl).to.be.a('string');
                expect(data.data.engines.applicationControl).to.be("on");
                expect(data.data.engines.reputation).to.be.a('string');
                expect(data.data.engines.reputation).to.be("on");
                expect(data.data.engines.exploits).to.be.a('string');
                expect(data.data.engines.exploits).to.be("on");
                expect(data.data.engines.remoteShell).to.be.a('string');
                expect(data.data.engines.remoteShell).to.be("on");
              expect(data.data.remoteOpsForensics).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyRemoteOpsForensics);
                    expect(data.data.remoteOpsForensics.parsedArtifactsDestination).to.be.a('string');
                expect(data.data.remoteOpsForensics.parsedArtifactsDestination).to.be("local");
                expect(data.data.remoteOpsForensics.maximumFileSizeUpload).to.be.a('number');
                expect(data.data.remoteOpsForensics.maximumFileSizeUpload).to.be("0");
                expect(data.data.remoteOpsForensics.maximumDailyUpload).to.be.a('number');
                expect(data.data.remoteOpsForensics.maximumDailyUpload).to.be("0");
                expect(data.data.remoteOpsForensics.maximumFileSizeUploadLimit).to.be.a('number');
                expect(data.data.remoteOpsForensics.maximumFileSizeUploadLimit).to.be("0");
                expect(data.data.remoteOpsForensics.enabled).to.be.a('boolean');
                expect(data.data.remoteOpsForensics.enabled).to.be(false);
                expect(data.data.remoteOpsForensics.cpuLimit).to.be.a('number');
                expect(data.data.remoteOpsForensics.cpuLimit).to.be(0);
                expect(data.data.remoteOpsForensics.maximumDailyUploadLimit).to.be.a('number');
                expect(data.data.remoteOpsForensics.maximumDailyUploadLimit).to.be("0");
              expect(data.data.forensicsAutoTriggering).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyForensicsAutoTriggering);
                    expect(data.data.forensicsAutoTriggering.windowsProfileId).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.windowsProfileId).to.be("");
                expect(data.data.forensicsAutoTriggering.linuxEnabled).to.be.a('boolean');
                expect(data.data.forensicsAutoTriggering.linuxEnabled).to.be(false);
                expect(data.data.forensicsAutoTriggering.macosProfileName).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.macosProfileName).to.be("");
                expect(data.data.forensicsAutoTriggering.macosProfileId).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.macosProfileId).to.be("");
                expect(data.data.forensicsAutoTriggering.windowsProfileName).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.windowsProfileName).to.be("");
                expect(data.data.forensicsAutoTriggering.linuxProfileName).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.linuxProfileName).to.be("");
                expect(data.data.forensicsAutoTriggering.windowsEnabled).to.be.a('boolean');
                expect(data.data.forensicsAutoTriggering.windowsEnabled).to.be(false);
                expect(data.data.forensicsAutoTriggering.linuxProfileId).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.linuxProfileId).to.be("");
                expect(data.data.forensicsAutoTriggering.macosEnabled).to.be.a('boolean');
                expect(data.data.forensicsAutoTriggering.macosEnabled).to.be(false);
              expect(data.data.identityOn).to.be.a('boolean');
              expect(data.data.identityOn).to.be(false);
              expect(data.data.cloudValidationOn).to.be.a(Object);
              expect(data.data.cloudValidationOn).to.be();
              expect(data.data.autoImmuneOn).to.be.a('boolean');
              expect(data.data.autoImmuneOn).to.be(false);
              expect(data.data.agentNotification).to.be.a('boolean');
              expect(data.data.agentNotification).to.be(false);
              expect(data.data.createdAt).to.be.a(Date);
              expect(data.data.createdAt).to.be(2018-02-27T04:49:26.257525Z);
              expect(data.data.networkQuarantineOn).to.be.a('boolean');
              expect(data.data.networkQuarantineOn).to.be(false);
              expect(data.data.autoDecommissionDays).to.be.a('number');
              expect(data.data.autoDecommissionDays).to.be(0);
              expect(data.data.remoteScriptOrchestration).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyRemoteScriptOrchestration);
                    expect(data.data.remoteScriptOrchestration.alwaysUploadStreamToCloud).to.be.a('boolean');
                expect(data.data.remoteScriptOrchestration.alwaysUploadStreamToCloud).to.be(false);
                expect(data.data.remoteScriptOrchestration.maxLocalPackageDiskUsageLimit).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxLocalPackageDiskUsageLimit).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxDailyFileUploadLimit).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxDailyFileUploadLimit).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxLocalPackageDiskUsage).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxLocalPackageDiskUsage).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxDailyFileDownloadLimit).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxDailyFileDownloadLimit).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxFileSizeLimit).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxFileSizeLimit).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxDailyFileDownload).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxDailyFileDownload).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxFileSize).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxFileSize).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxDailyFileUpload).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxDailyFileUpload).to.be("0");
              expect(data.data.autoDecommissionOn).to.be.a('boolean');
              expect(data.data.autoDecommissionOn).to.be(false);
              expect(data.data.dvAttributesPerEventType).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventType);
                    expect(data.data.dvAttributesPerEventType.smartFileMonitoring).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeSmartFileMonitoring);
                      expect(data.data.dvAttributesPerEventType.smartFileMonitoring.smartFileMonitoring).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.smartFileMonitoring.smartFileMonitoring).to.be(false);
                expect(data.data.dvAttributesPerEventType.windowsEventLogs).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeWindowsEventLogs);
                      expect(data.data.dvAttributesPerEventType.windowsEventLogs.dvEventTypeWindowsEventLogCreation).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.windowsEventLogs.dvEventTypeWindowsEventLogCreation).to.be(false);
                expect(data.data.dvAttributesPerEventType.autoInstallBrowserExtensions).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeAutoInstallBrowserExtensions);
                      expect(data.data.dvAttributesPerEventType.autoInstallBrowserExtensions.autoInstallBrowserExtensions).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.autoInstallBrowserExtensions.autoInstallBrowserExtensions).to.be(false);
                expect(data.data.dvAttributesPerEventType.dataMasking).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDataMasking);
                      expect(data.data.dvAttributesPerEventType.dataMasking.dataMasking).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.dataMasking.dataMasking).to.be(false);
                expect(data.data.dvAttributesPerEventType.dllModuleLoad).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDllModuleLoad);
                      expect(data.data.dvAttributesPerEventType.dllModuleLoad.dvEventTypeDllModuleLoad).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.dllModuleLoad.dvEventTypeDllModuleLoad).to.be(false);
                expect(data.data.dvAttributesPerEventType.dns).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDns);
                      expect(data.data.dvAttributesPerEventType.dns.dvEventTypeDns).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.dns.dvEventTypeDns).to.be(false);
                expect(data.data.dvAttributesPerEventType.crossProcess).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeCrossProcess);
                      expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessOpenProcess).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessOpenProcess).to.be(false);
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessRemoteThread).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessRemoteThread).to.be(false);
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateProcess).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateProcess).to.be(false);
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateThread).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateThread).to.be(false);
                expect(data.data.dvAttributesPerEventType.registry).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeRegistry);
                      expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeySecurityChanged).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeySecurityChanged).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueDeleted).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueDeleted).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueModified).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueModified).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyRename).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyRename).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyCreated).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyCreated).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueCreated).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueCreated).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyImport).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyImport).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyDelete).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyDelete).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyExport).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyExport).to.be(false);
                expect(data.data.dvAttributesPerEventType.driver).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDriver);
                      expect(data.data.dvAttributesPerEventType.driver.dvEventTypeDriverLoad).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.driver.dvEventTypeDriverLoad).to.be(false);
                expect(data.data.dvAttributesPerEventType.windowsEventLogsExtended).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeWindowsEventLogsExtended);
                      expect(data.data.dvAttributesPerEventType.windowsEventLogsExtended.windowsEventLogsExtended).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.windowsEventLogsExtended.windowsEventLogsExtended).to.be(false);
                expect(data.data.dvAttributesPerEventType.file).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeFile);
                      expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileModification).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileModification).to.be(false);
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileCreation).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileCreation).to.be(false);
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileRename).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileRename).to.be(false);
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileDeletion).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileDeletion).to.be(false);
                  expect(data.data.dvAttributesPerEventType.file.fullDiskScan).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.fullDiskScan).to.be(false);
                expect(data.data.dvAttributesPerEventType.namedPipeExtended).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeNamedPipeExtended);
                      expect(data.data.dvAttributesPerEventType.namedPipeExtended.namedPipeExtended).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.namedPipeExtended.namedPipeExtended).to.be(false);
                expect(data.data.dvAttributesPerEventType.url).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeUrl);
                      expect(data.data.dvAttributesPerEventType.url.dvEventTypeUrl).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.url.dvEventTypeUrl).to.be(false);
                expect(data.data.dvAttributesPerEventType.behavioralIndicators).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeBehavioralIndicators);
                      expect(data.data.dvAttributesPerEventType.behavioralIndicators.dvEventTypeBehavioralIndicators).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.behavioralIndicators.dvEventTypeBehavioralIndicators).to.be(false);
                expect(data.data.dvAttributesPerEventType.process).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeProcess);
                      expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessModification).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessModification).to.be(false);
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessExit).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessExit).to.be(false);
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessCreation).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessCreation).to.be(false);
                expect(data.data.dvAttributesPerEventType.commandScripts).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeCommandScripts);
                      expect(data.data.dvAttributesPerEventType.commandScripts.dvEventTypeCommandScripts).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.commandScripts.dvEventTypeCommandScripts).to.be(false);
                expect(data.data.dvAttributesPerEventType.namedPipe).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeNamedPipe);
                      expect(data.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeConnection).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeConnection).to.be(false);
                  expect(data.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeCreation).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeCreation).to.be(false);
                expect(data.data.dvAttributesPerEventType.ip).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeIp);
                      expect(data.data.dvAttributesPerEventType.ip.dvEventTypeIpConnect).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.ip.dvEventTypeIpConnect).to.be(false);
                  expect(data.data.dvAttributesPerEventType.ip.dvEventTypeIpListen).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.ip.dvEventTypeIpListen).to.be(false);
                expect(data.data.dvAttributesPerEventType.login).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeLogin);
                      expect(data.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedOut).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedOut).to.be(false);
                  expect(data.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedIn).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedIn).to.be(false);
                expect(data.data.dvAttributesPerEventType.scheduledTask).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeScheduledTask);
                      expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskDelete).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskDelete).to.be(false);
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskUpdate).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskUpdate).to.be(false);
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskRegister).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskRegister).to.be(false);
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskTrigger).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskTrigger).to.be(false);
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskStart).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskStart).to.be(false);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('webApiGroupsgroupIdPolicyGet', function() {
        it('should call webApiGroupsgroupIdPolicyGet successfully', function(done) {
          // TODO: uncomment, update parameter values for webApiGroupsgroupIdPolicyGet call and complete the assertions
          /*
          var groupId = "groupId_example";

          instance.webApiGroupsgroupIdPolicyGet(groupId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(S1MgmtApi.PoliciesSchemasEnrichedPolicySchema200);
            {
              let dataCtr = data.errors;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a(Object);
                expect(data).to.be();
              }
            }
            expect(data.data).to.be.a(S1MgmtApi.PoliciesSchemasEnrichedPolicySchema200Data);
                  expect(data.data.autoMitigationAction).to.be.a('string');
              expect(data.data.autoMitigationAction).to.be("");
              expect(data.data.mitigationMode).to.be.a('string');
              expect(data.data.mitigationMode).to.be("detect");
              expect(data.data.iocAttributes).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyIocAttributes);
                    expect(data.data.iocAttributes.smartFileMonitoring).to.be.a('boolean');
                expect(data.data.iocAttributes.smartFileMonitoring).to.be(false);
                expect(data.data.iocAttributes.windowsEventLogs).to.be.a('boolean');
                expect(data.data.iocAttributes.windowsEventLogs).to.be(false);
                expect(data.data.iocAttributes.autoInstallBrowserExtensions).to.be.a('boolean');
                expect(data.data.iocAttributes.autoInstallBrowserExtensions).to.be(false);
                expect(data.data.iocAttributes.dataMasking).to.be.a('boolean');
                expect(data.data.iocAttributes.dataMasking).to.be(false);
                expect(data.data.iocAttributes.dllModuleLoad).to.be.a('boolean');
                expect(data.data.iocAttributes.dllModuleLoad).to.be(false);
                expect(data.data.iocAttributes.dns).to.be.a('boolean');
                expect(data.data.iocAttributes.dns).to.be(false);
                expect(data.data.iocAttributes.crossProcess).to.be.a('boolean');
                expect(data.data.iocAttributes.crossProcess).to.be(false);
                expect(data.data.iocAttributes.registry).to.be.a('boolean');
                expect(data.data.iocAttributes.registry).to.be(false);
                expect(data.data.iocAttributes.driver).to.be.a('boolean');
                expect(data.data.iocAttributes.driver).to.be(false);
                expect(data.data.iocAttributes.fds).to.be.a('boolean');
                expect(data.data.iocAttributes.fds).to.be(false);
                expect(data.data.iocAttributes.windowsEventLogsExtended).to.be.a('boolean');
                expect(data.data.iocAttributes.windowsEventLogsExtended).to.be(false);
                expect(data.data.iocAttributes.file).to.be.a('boolean');
                expect(data.data.iocAttributes.file).to.be(false);
                expect(data.data.iocAttributes.namedPipeExtended).to.be.a('boolean');
                expect(data.data.iocAttributes.namedPipeExtended).to.be(false);
                expect(data.data.iocAttributes.url).to.be.a('boolean');
                expect(data.data.iocAttributes.url).to.be(false);
                expect(data.data.iocAttributes.behavioralIndicators).to.be.a('boolean');
                expect(data.data.iocAttributes.behavioralIndicators).to.be(false);
                expect(data.data.iocAttributes.process).to.be.a('boolean');
                expect(data.data.iocAttributes.process).to.be(false);
                expect(data.data.iocAttributes.commandScripts).to.be.a('boolean');
                expect(data.data.iocAttributes.commandScripts).to.be(false);
                expect(data.data.iocAttributes.namedPipe).to.be.a('boolean');
                expect(data.data.iocAttributes.namedPipe).to.be(false);
                expect(data.data.iocAttributes.ip).to.be.a('boolean');
                expect(data.data.iocAttributes.ip).to.be(false);
                expect(data.data.iocAttributes.login).to.be.a('boolean');
                expect(data.data.iocAttributes.login).to.be(false);
                expect(data.data.iocAttributes.scheduledTask).to.be.a('boolean');
                expect(data.data.iocAttributes.scheduledTask).to.be(false);
              expect(data.data.fwForNetworkQuarantineEnabled).to.be.a('boolean');
              expect(data.data.fwForNetworkQuarantineEnabled).to.be(false);
              expect(data.data.researchOn).to.be.a('boolean');
              expect(data.data.researchOn).to.be(false);
              expect(data.data.autoFileUpload).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyAutoFileUpload);
                    expect(data.data.autoFileUpload.maxDailyFileUploadLimit).to.be.a('number');
                expect(data.data.autoFileUpload.maxDailyFileUploadLimit).to.be(0);
                expect(data.data.autoFileUpload.includeBenignFiles).to.be.a('boolean');
                expect(data.data.autoFileUpload.includeBenignFiles).to.be(false);
                expect(data.data.autoFileUpload.maxLocalDiskUsageLimit).to.be.a('number');
                expect(data.data.autoFileUpload.maxLocalDiskUsageLimit).to.be(0);
                expect(data.data.autoFileUpload.maxLocalDiskUsage).to.be.a('number');
                expect(data.data.autoFileUpload.maxLocalDiskUsage).to.be(0);
                expect(data.data.autoFileUpload.enabled).to.be.a('boolean');
                expect(data.data.autoFileUpload.enabled).to.be(false);
                expect(data.data.autoFileUpload.maxFileSizeLimit).to.be.a('number');
                expect(data.data.autoFileUpload.maxFileSizeLimit).to.be(0);
                expect(data.data.autoFileUpload.maxFileSize).to.be.a('number');
                expect(data.data.autoFileUpload.maxFileSize).to.be(0);
                expect(data.data.autoFileUpload.maxDailyFileUpload).to.be.a('number');
                expect(data.data.autoFileUpload.maxDailyFileUpload).to.be(0);
              expect(data.data.mitigationModeSuspicious).to.be.a('string');
              expect(data.data.mitigationModeSuspicious).to.be("detect");
              expect(data.data.updatedAt).to.be.a(Date);
              expect(data.data.updatedAt).to.be(2018-02-27T04:49:26.257525Z);
              expect(data.data.antiTamperingOn).to.be.a('boolean');
              expect(data.data.antiTamperingOn).to.be(false);
              expect(data.data.identityReportInterval).to.be.a('number');
              expect(data.data.identityReportInterval).to.be(0);
              expect(data.data.monitorOnExecute).to.be.a('boolean');
              expect(data.data.monitorOnExecute).to.be(false);
              expect(data.data.userId).to.be.a('string');
              expect(data.data.userId).to.be("225494730938493804");
              expect(data.data.driverBlocking).to.be.a('boolean');
              expect(data.data.driverBlocking).to.be(false);
              expect(data.data.identityEndpointReporting).to.be.a('string');
              expect(data.data.identityEndpointReporting).to.be("disabled");
              expect(data.data.isDefault).to.be.a('boolean');
              expect(data.data.isDefault).to.be(false);
              expect(data.data.ioc).to.be.a('boolean');
              expect(data.data.ioc).to.be(false);
              expect(data.data.agentUiOn).to.be.a('boolean');
              expect(data.data.agentUiOn).to.be(false);
              expect(data.data.inheritedFrom).to.be.a('string');
              expect(data.data.inheritedFrom).to.be("site");
              expect(data.data.monitorOnWrite).to.be.a('boolean');
              expect(data.data.monitorOnWrite).to.be(false);
              expect(data.data.identityUpdateInterval).to.be.a('number');
              expect(data.data.identityUpdateInterval).to.be(0);
              expect(data.data.iocSupported).to.be.a('boolean');
              expect(data.data.iocSupported).to.be(false);
              expect(data.data.identityThrottlingInterval).to.be.a('number');
              expect(data.data.identityThrottlingInterval).to.be(0);
              expect(data.data.agentLoggingOn).to.be.a('boolean');
              expect(data.data.agentLoggingOn).to.be(false);
              expect(data.data.unsignedDriverBlockingOn).to.be.a('boolean');
              expect(data.data.unsignedDriverBlockingOn).to.be(false);
              expect(data.data.agentUi).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyAgentUi);
                    expect(data.data.agentUi.threatPopUpNotifications).to.be.a('boolean');
                expect(data.data.agentUi.threatPopUpNotifications).to.be(false);
                expect(data.data.agentUi.contactFreeText).to.be.a('string');
                expect(data.data.agentUi.contactFreeText).to.be("");
                expect(data.data.agentUi.contactEmail).to.be.a('string');
                expect(data.data.agentUi.contactEmail).to.be("");
                expect(data.data.agentUi.maxEventAgeDays).to.be.a('number');
                expect(data.data.agentUi.maxEventAgeDays).to.be(0);
                expect(data.data.agentUi.showAgentWarnings).to.be.a('boolean');
                expect(data.data.agentUi.showAgentWarnings).to.be(false);
                expect(data.data.agentUi.contactPhoneNumber).to.be.a('string');
                expect(data.data.agentUi.contactPhoneNumber).to.be("");
                expect(data.data.agentUi.showDeviceTab).to.be.a('boolean');
                expect(data.data.agentUi.showDeviceTab).to.be(false);
                expect(data.data.agentUi.devicePopUpNotifications).to.be.a('boolean');
                expect(data.data.agentUi.devicePopUpNotifications).to.be(false);
                expect(data.data.agentUi.showSupport).to.be.a('boolean');
                expect(data.data.agentUi.showSupport).to.be(false);
                expect(data.data.agentUi.showQuarantineTab).to.be.a('boolean');
                expect(data.data.agentUi.showQuarantineTab).to.be(false);
                expect(data.data.agentUi.contactCompany).to.be.a('string');
                expect(data.data.agentUi.contactCompany).to.be("");
                expect(data.data.agentUi.showSuspicious).to.be.a('boolean');
                expect(data.data.agentUi.showSuspicious).to.be(false);
                expect(data.data.agentUi.contactOther).to.be.a('string');
                expect(data.data.agentUi.contactOther).to.be("");
                expect(data.data.agentUi.contactDirectMessage).to.be.a('string');
                expect(data.data.agentUi.contactDirectMessage).to.be("");
                expect(data.data.agentUi.contactSupportWebsite).to.be.a('string');
                expect(data.data.agentUi.contactSupportWebsite).to.be("");
                expect(data.data.agentUi.agentUiOn).to.be.a('boolean');
                expect(data.data.agentUi.agentUiOn).to.be(false);
              expect(data.data.userFullName).to.be.a('string');
              expect(data.data.userFullName).to.be("");
              expect(data.data.signedDriverBlockingOn).to.be.a('boolean');
              expect(data.data.signedDriverBlockingOn).to.be(false);
              expect(data.data.allowRemoteShell).to.be.a('boolean');
              expect(data.data.allowRemoteShell).to.be(false);
              expect(data.data.isDvPolicyPerEventType).to.be.a('boolean');
              expect(data.data.isDvPolicyPerEventType).to.be(false);
              expect(data.data.removeMacros).to.be.a('boolean');
              expect(data.data.removeMacros).to.be(false);
              expect(data.data.scanNewAgents).to.be.a('boolean');
              expect(data.data.scanNewAgents).to.be(false);
              expect(data.data.snapshotsOn).to.be.a('boolean');
              expect(data.data.snapshotsOn).to.be(false);
              expect(data.data.engines).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyEngines);
                    expect(data.data.engines.lateralMovement).to.be.a('string');
                expect(data.data.engines.lateralMovement).to.be("on");
                expect(data.data.engines.preExecutionSuspicious).to.be.a('string');
                expect(data.data.engines.preExecutionSuspicious).to.be("on");
                expect(data.data.engines.preExecution).to.be.a('string');
                expect(data.data.engines.preExecution).to.be("on");
                expect(data.data.engines.dataFiles).to.be.a('string');
                expect(data.data.engines.dataFiles).to.be("on");
                expect(data.data.engines.pup).to.be.a('string');
                expect(data.data.engines.pup).to.be("on");
                expect(data.data.engines.executables).to.be.a('string');
                expect(data.data.engines.executables).to.be("on");
                expect(data.data.engines.penetration).to.be.a('string');
                expect(data.data.engines.penetration).to.be("on");
                expect(data.data.engines.applicationControl).to.be.a('string');
                expect(data.data.engines.applicationControl).to.be("on");
                expect(data.data.engines.reputation).to.be.a('string');
                expect(data.data.engines.reputation).to.be("on");
                expect(data.data.engines.exploits).to.be.a('string');
                expect(data.data.engines.exploits).to.be("on");
                expect(data.data.engines.remoteShell).to.be.a('string');
                expect(data.data.engines.remoteShell).to.be("on");
              expect(data.data.remoteOpsForensics).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyRemoteOpsForensics);
                    expect(data.data.remoteOpsForensics.parsedArtifactsDestination).to.be.a('string');
                expect(data.data.remoteOpsForensics.parsedArtifactsDestination).to.be("local");
                expect(data.data.remoteOpsForensics.maximumFileSizeUpload).to.be.a('number');
                expect(data.data.remoteOpsForensics.maximumFileSizeUpload).to.be("0");
                expect(data.data.remoteOpsForensics.maximumDailyUpload).to.be.a('number');
                expect(data.data.remoteOpsForensics.maximumDailyUpload).to.be("0");
                expect(data.data.remoteOpsForensics.maximumFileSizeUploadLimit).to.be.a('number');
                expect(data.data.remoteOpsForensics.maximumFileSizeUploadLimit).to.be("0");
                expect(data.data.remoteOpsForensics.enabled).to.be.a('boolean');
                expect(data.data.remoteOpsForensics.enabled).to.be(false);
                expect(data.data.remoteOpsForensics.cpuLimit).to.be.a('number');
                expect(data.data.remoteOpsForensics.cpuLimit).to.be(0);
                expect(data.data.remoteOpsForensics.maximumDailyUploadLimit).to.be.a('number');
                expect(data.data.remoteOpsForensics.maximumDailyUploadLimit).to.be("0");
              expect(data.data.forensicsAutoTriggering).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyForensicsAutoTriggering);
                    expect(data.data.forensicsAutoTriggering.windowsProfileId).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.windowsProfileId).to.be("");
                expect(data.data.forensicsAutoTriggering.linuxEnabled).to.be.a('boolean');
                expect(data.data.forensicsAutoTriggering.linuxEnabled).to.be(false);
                expect(data.data.forensicsAutoTriggering.macosProfileName).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.macosProfileName).to.be("");
                expect(data.data.forensicsAutoTriggering.macosProfileId).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.macosProfileId).to.be("");
                expect(data.data.forensicsAutoTriggering.windowsProfileName).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.windowsProfileName).to.be("");
                expect(data.data.forensicsAutoTriggering.linuxProfileName).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.linuxProfileName).to.be("");
                expect(data.data.forensicsAutoTriggering.windowsEnabled).to.be.a('boolean');
                expect(data.data.forensicsAutoTriggering.windowsEnabled).to.be(false);
                expect(data.data.forensicsAutoTriggering.linuxProfileId).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.linuxProfileId).to.be("");
                expect(data.data.forensicsAutoTriggering.macosEnabled).to.be.a('boolean');
                expect(data.data.forensicsAutoTriggering.macosEnabled).to.be(false);
              expect(data.data.identityOn).to.be.a('boolean');
              expect(data.data.identityOn).to.be(false);
              expect(data.data.cloudValidationOn).to.be.a(Object);
              expect(data.data.cloudValidationOn).to.be();
              expect(data.data.autoImmuneOn).to.be.a('boolean');
              expect(data.data.autoImmuneOn).to.be(false);
              expect(data.data.agentNotification).to.be.a('boolean');
              expect(data.data.agentNotification).to.be(false);
              expect(data.data.createdAt).to.be.a(Date);
              expect(data.data.createdAt).to.be(2018-02-27T04:49:26.257525Z);
              expect(data.data.networkQuarantineOn).to.be.a('boolean');
              expect(data.data.networkQuarantineOn).to.be(false);
              expect(data.data.autoDecommissionDays).to.be.a('number');
              expect(data.data.autoDecommissionDays).to.be(0);
              expect(data.data.remoteScriptOrchestration).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyRemoteScriptOrchestration);
                    expect(data.data.remoteScriptOrchestration.alwaysUploadStreamToCloud).to.be.a('boolean');
                expect(data.data.remoteScriptOrchestration.alwaysUploadStreamToCloud).to.be(false);
                expect(data.data.remoteScriptOrchestration.maxLocalPackageDiskUsageLimit).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxLocalPackageDiskUsageLimit).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxDailyFileUploadLimit).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxDailyFileUploadLimit).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxLocalPackageDiskUsage).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxLocalPackageDiskUsage).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxDailyFileDownloadLimit).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxDailyFileDownloadLimit).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxFileSizeLimit).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxFileSizeLimit).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxDailyFileDownload).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxDailyFileDownload).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxFileSize).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxFileSize).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxDailyFileUpload).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxDailyFileUpload).to.be("0");
              expect(data.data.autoDecommissionOn).to.be.a('boolean');
              expect(data.data.autoDecommissionOn).to.be(false);
              expect(data.data.dvAttributesPerEventType).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventType);
                    expect(data.data.dvAttributesPerEventType.smartFileMonitoring).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeSmartFileMonitoring);
                      expect(data.data.dvAttributesPerEventType.smartFileMonitoring.smartFileMonitoring).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.smartFileMonitoring.smartFileMonitoring).to.be(false);
                expect(data.data.dvAttributesPerEventType.windowsEventLogs).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeWindowsEventLogs);
                      expect(data.data.dvAttributesPerEventType.windowsEventLogs.dvEventTypeWindowsEventLogCreation).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.windowsEventLogs.dvEventTypeWindowsEventLogCreation).to.be(false);
                expect(data.data.dvAttributesPerEventType.autoInstallBrowserExtensions).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeAutoInstallBrowserExtensions);
                      expect(data.data.dvAttributesPerEventType.autoInstallBrowserExtensions.autoInstallBrowserExtensions).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.autoInstallBrowserExtensions.autoInstallBrowserExtensions).to.be(false);
                expect(data.data.dvAttributesPerEventType.dataMasking).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDataMasking);
                      expect(data.data.dvAttributesPerEventType.dataMasking.dataMasking).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.dataMasking.dataMasking).to.be(false);
                expect(data.data.dvAttributesPerEventType.dllModuleLoad).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDllModuleLoad);
                      expect(data.data.dvAttributesPerEventType.dllModuleLoad.dvEventTypeDllModuleLoad).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.dllModuleLoad.dvEventTypeDllModuleLoad).to.be(false);
                expect(data.data.dvAttributesPerEventType.dns).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDns);
                      expect(data.data.dvAttributesPerEventType.dns.dvEventTypeDns).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.dns.dvEventTypeDns).to.be(false);
                expect(data.data.dvAttributesPerEventType.crossProcess).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeCrossProcess);
                      expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessOpenProcess).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessOpenProcess).to.be(false);
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessRemoteThread).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessRemoteThread).to.be(false);
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateProcess).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateProcess).to.be(false);
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateThread).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateThread).to.be(false);
                expect(data.data.dvAttributesPerEventType.registry).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeRegistry);
                      expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeySecurityChanged).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeySecurityChanged).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueDeleted).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueDeleted).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueModified).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueModified).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyRename).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyRename).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyCreated).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyCreated).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueCreated).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueCreated).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyImport).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyImport).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyDelete).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyDelete).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyExport).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyExport).to.be(false);
                expect(data.data.dvAttributesPerEventType.driver).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDriver);
                      expect(data.data.dvAttributesPerEventType.driver.dvEventTypeDriverLoad).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.driver.dvEventTypeDriverLoad).to.be(false);
                expect(data.data.dvAttributesPerEventType.windowsEventLogsExtended).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeWindowsEventLogsExtended);
                      expect(data.data.dvAttributesPerEventType.windowsEventLogsExtended.windowsEventLogsExtended).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.windowsEventLogsExtended.windowsEventLogsExtended).to.be(false);
                expect(data.data.dvAttributesPerEventType.file).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeFile);
                      expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileModification).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileModification).to.be(false);
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileCreation).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileCreation).to.be(false);
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileRename).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileRename).to.be(false);
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileDeletion).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileDeletion).to.be(false);
                  expect(data.data.dvAttributesPerEventType.file.fullDiskScan).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.fullDiskScan).to.be(false);
                expect(data.data.dvAttributesPerEventType.namedPipeExtended).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeNamedPipeExtended);
                      expect(data.data.dvAttributesPerEventType.namedPipeExtended.namedPipeExtended).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.namedPipeExtended.namedPipeExtended).to.be(false);
                expect(data.data.dvAttributesPerEventType.url).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeUrl);
                      expect(data.data.dvAttributesPerEventType.url.dvEventTypeUrl).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.url.dvEventTypeUrl).to.be(false);
                expect(data.data.dvAttributesPerEventType.behavioralIndicators).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeBehavioralIndicators);
                      expect(data.data.dvAttributesPerEventType.behavioralIndicators.dvEventTypeBehavioralIndicators).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.behavioralIndicators.dvEventTypeBehavioralIndicators).to.be(false);
                expect(data.data.dvAttributesPerEventType.process).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeProcess);
                      expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessModification).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessModification).to.be(false);
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessExit).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessExit).to.be(false);
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessCreation).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessCreation).to.be(false);
                expect(data.data.dvAttributesPerEventType.commandScripts).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeCommandScripts);
                      expect(data.data.dvAttributesPerEventType.commandScripts.dvEventTypeCommandScripts).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.commandScripts.dvEventTypeCommandScripts).to.be(false);
                expect(data.data.dvAttributesPerEventType.namedPipe).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeNamedPipe);
                      expect(data.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeConnection).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeConnection).to.be(false);
                  expect(data.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeCreation).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeCreation).to.be(false);
                expect(data.data.dvAttributesPerEventType.ip).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeIp);
                      expect(data.data.dvAttributesPerEventType.ip.dvEventTypeIpConnect).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.ip.dvEventTypeIpConnect).to.be(false);
                  expect(data.data.dvAttributesPerEventType.ip.dvEventTypeIpListen).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.ip.dvEventTypeIpListen).to.be(false);
                expect(data.data.dvAttributesPerEventType.login).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeLogin);
                      expect(data.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedOut).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedOut).to.be(false);
                  expect(data.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedIn).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedIn).to.be(false);
                expect(data.data.dvAttributesPerEventType.scheduledTask).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeScheduledTask);
                      expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskDelete).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskDelete).to.be(false);
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskUpdate).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskUpdate).to.be(false);
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskRegister).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskRegister).to.be(false);
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskTrigger).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskTrigger).to.be(false);
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskStart).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskStart).to.be(false);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('webApiGroupsgroupIdPolicyPut', function() {
        it('should call webApiGroupsgroupIdPolicyPut successfully', function(done) {
          // TODO: uncomment, update parameter values for webApiGroupsgroupIdPolicyPut call and complete the assertions
          /*
          var groupId = "groupId_example";
          var opts = {};
          opts.body = new S1MgmtApi.PoliciesTenantPolicySchema();
          opts.body.data = new S1MgmtApi.PoliciesTenantPolicySchemaData();
          opts.body.data.autoMitigationAction = "";
          opts.body.data.mitigationMode = "detect";
          opts.body.data.iocAttributes = new S1MgmtApi.SitesSitePutSchemaDataPolicyIocAttributes();
          opts.body.data.iocAttributes.smartFileMonitoring = false;
          opts.body.data.iocAttributes.windowsEventLogs = false;
          opts.body.data.iocAttributes.autoInstallBrowserExtensions = false;
          opts.body.data.iocAttributes.dataMasking = false;
          opts.body.data.iocAttributes.dllModuleLoad = false;
          opts.body.data.iocAttributes.dns = false;
          opts.body.data.iocAttributes.crossProcess = false;
          opts.body.data.iocAttributes.registry = false;
          opts.body.data.iocAttributes.driver = false;
          opts.body.data.iocAttributes.fds = false;
          opts.body.data.iocAttributes.windowsEventLogsExtended = false;
          opts.body.data.iocAttributes.file = false;
          opts.body.data.iocAttributes.namedPipeExtended = false;
          opts.body.data.iocAttributes.url = false;
          opts.body.data.iocAttributes.behavioralIndicators = false;
          opts.body.data.iocAttributes.process = false;
          opts.body.data.iocAttributes.commandScripts = false;
          opts.body.data.iocAttributes.namedPipe = false;
          opts.body.data.iocAttributes.ip = false;
          opts.body.data.iocAttributes.login = false;
          opts.body.data.iocAttributes.scheduledTask = false;
          opts.body.data.researchOn = false;
          opts.body.data.autoFileUpload = new S1MgmtApi.SitesSitePutSchemaDataPolicyAutoFileUpload();
          opts.body.data.autoFileUpload.maxDailyFileUploadLimit = 0;
          opts.body.data.autoFileUpload.includeBenignFiles = false;
          opts.body.data.autoFileUpload.maxLocalDiskUsageLimit = 0;
          opts.body.data.autoFileUpload.maxLocalDiskUsage = 0;
          opts.body.data.autoFileUpload.enabled = false;
          opts.body.data.autoFileUpload.maxFileSizeLimit = 0;
          opts.body.data.autoFileUpload.maxFileSize = 0;
          opts.body.data.autoFileUpload.maxDailyFileUpload = 0;
          opts.body.data.mitigationModeSuspicious = "detect";
          opts.body.data.updatedAt = 2018-02-27T04:49:26.257525Z;
          opts.body.data.antiTamperingOn = false;
          opts.body.data.identityReportInterval = 0;
          opts.body.data.monitorOnExecute = false;
          opts.body.data.userId = "225494730938493804";
          opts.body.data.driverBlocking = false;
          opts.body.data.identityEndpointReporting = "disabled";
          opts.body.data.isDefault = false;
          opts.body.data.ioc = false;
          opts.body.data.agentUiOn = false;
          opts.body.data.monitorOnWrite = false;
          opts.body.data.identityUpdateInterval = 0;
          opts.body.data.iocSupported = false;
          opts.body.data.identityThrottlingInterval = 0;
          opts.body.data.agentLoggingOn = false;
          opts.body.data.unsignedDriverBlockingOn = false;
          opts.body.data.agentUi = new S1MgmtApi.SitesSitePutSchemaDataPolicyAgentUi();
          opts.body.data.agentUi.threatPopUpNotifications = false;
          opts.body.data.agentUi.contactFreeText = "";
          opts.body.data.agentUi.contactEmail = "";
          opts.body.data.agentUi.maxEventAgeDays = 0;
          opts.body.data.agentUi.showAgentWarnings = false;
          opts.body.data.agentUi.contactPhoneNumber = "";
          opts.body.data.agentUi.showDeviceTab = false;
          opts.body.data.agentUi.devicePopUpNotifications = false;
          opts.body.data.agentUi.showSupport = false;
          opts.body.data.agentUi.showQuarantineTab = false;
          opts.body.data.agentUi.contactCompany = "";
          opts.body.data.agentUi.showSuspicious = false;
          opts.body.data.agentUi.contactOther = "";
          opts.body.data.agentUi.contactDirectMessage = "";
          opts.body.data.agentUi.contactSupportWebsite = "";
          opts.body.data.agentUi.agentUiOn = false;
          opts.body.data.userFullName = "";
          opts.body.data.signedDriverBlockingOn = false;
          opts.body.data.allowRemoteShell = false;
          opts.body.data.isDvPolicyPerEventType = false;
          opts.body.data.removeMacros = false;
          opts.body.data.scanNewAgents = false;
          opts.body.data.snapshotsOn = false;
          opts.body.data.engines = new S1MgmtApi.SitesSitePutSchemaDataPolicyEngines();
          opts.body.data.engines.lateralMovement = "on";
          opts.body.data.engines.preExecutionSuspicious = "on";
          opts.body.data.engines.preExecution = "on";
          opts.body.data.engines.dataFiles = "on";
          opts.body.data.engines.pup = "on";
          opts.body.data.engines.executables = "on";
          opts.body.data.engines.penetration = "on";
          opts.body.data.engines.applicationControl = "on";
          opts.body.data.engines.reputation = "on";
          opts.body.data.engines.exploits = "on";
          opts.body.data.engines.remoteShell = "on";
          opts.body.data.remoteOpsForensics = new S1MgmtApi.SitesSitePutSchemaDataPolicyRemoteOpsForensics();
          opts.body.data.remoteOpsForensics.parsedArtifactsDestination = "local";
          opts.body.data.remoteOpsForensics.maximumFileSizeUpload = "0";
          opts.body.data.remoteOpsForensics.maximumDailyUpload = "0";
          opts.body.data.remoteOpsForensics.maximumFileSizeUploadLimit = "0";
          opts.body.data.remoteOpsForensics.enabled = false;
          opts.body.data.remoteOpsForensics.cpuLimit = 0;
          opts.body.data.remoteOpsForensics.maximumDailyUploadLimit = "0";
          opts.body.data.forensicsAutoTriggering = new S1MgmtApi.SitesSitePutSchemaDataPolicyForensicsAutoTriggering();
          opts.body.data.forensicsAutoTriggering.windowsProfileId = "";
          opts.body.data.forensicsAutoTriggering.linuxEnabled = false;
          opts.body.data.forensicsAutoTriggering.macosProfileName = "";
          opts.body.data.forensicsAutoTriggering.macosProfileId = "";
          opts.body.data.forensicsAutoTriggering.windowsProfileName = "";
          opts.body.data.forensicsAutoTriggering.linuxProfileName = "";
          opts.body.data.forensicsAutoTriggering.windowsEnabled = false;
          opts.body.data.forensicsAutoTriggering.linuxProfileId = "";
          opts.body.data.forensicsAutoTriggering.macosEnabled = false;
          opts.body.data.identityOn = false;
          opts.body.data.cloudValidationOn = ;
          opts.body.data.autoImmuneOn = false;
          opts.body.data.agentNotification = false;
          opts.body.data.createdAt = 2018-02-27T04:49:26.257525Z;
          opts.body.data.networkQuarantineOn = false;
          opts.body.data.autoDecommissionDays = 0;
          opts.body.data.remoteScriptOrchestration = new S1MgmtApi.SitesSitePutSchemaDataPolicyRemoteScriptOrchestration();
          opts.body.data.remoteScriptOrchestration.alwaysUploadStreamToCloud = false;
          opts.body.data.remoteScriptOrchestration.maxLocalPackageDiskUsageLimit = "0";
          opts.body.data.remoteScriptOrchestration.maxDailyFileUploadLimit = "0";
          opts.body.data.remoteScriptOrchestration.maxLocalPackageDiskUsage = "0";
          opts.body.data.remoteScriptOrchestration.maxDailyFileDownloadLimit = "0";
          opts.body.data.remoteScriptOrchestration.maxFileSizeLimit = "0";
          opts.body.data.remoteScriptOrchestration.maxDailyFileDownload = "0";
          opts.body.data.remoteScriptOrchestration.maxFileSize = "0";
          opts.body.data.remoteScriptOrchestration.maxDailyFileUpload = "0";
          opts.body.data.autoDecommissionOn = false;
          opts.body.data.dvAttributesPerEventType = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventType();
          opts.body.data.dvAttributesPerEventType.smartFileMonitoring = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeSmartFileMonitoring();
          opts.body.data.dvAttributesPerEventType.smartFileMonitoring.smartFileMonitoring = false;
          opts.body.data.dvAttributesPerEventType.windowsEventLogs = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeWindowsEventLogs();
          opts.body.data.dvAttributesPerEventType.windowsEventLogs.dvEventTypeWindowsEventLogCreation = false;
          opts.body.data.dvAttributesPerEventType.autoInstallBrowserExtensions = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeAutoInstallBrowserExtensions();
          opts.body.data.dvAttributesPerEventType.autoInstallBrowserExtensions.autoInstallBrowserExtensions = false;
          opts.body.data.dvAttributesPerEventType.dataMasking = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDataMasking();
          opts.body.data.dvAttributesPerEventType.dataMasking.dataMasking = false;
          opts.body.data.dvAttributesPerEventType.dllModuleLoad = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDllModuleLoad();
          opts.body.data.dvAttributesPerEventType.dllModuleLoad.dvEventTypeDllModuleLoad = false;
          opts.body.data.dvAttributesPerEventType.dns = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDns();
          opts.body.data.dvAttributesPerEventType.dns.dvEventTypeDns = false;
          opts.body.data.dvAttributesPerEventType.crossProcess = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeCrossProcess();
          opts.body.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessOpenProcess = false;
          opts.body.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessRemoteThread = false;
          opts.body.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateProcess = false;
          opts.body.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateThread = false;
          opts.body.data.dvAttributesPerEventType.registry = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeRegistry();
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeySecurityChanged = false;
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueDeleted = false;
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueModified = false;
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyRename = false;
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyCreated = false;
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueCreated = false;
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyImport = false;
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyDelete = false;
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyExport = false;
          opts.body.data.dvAttributesPerEventType.driver = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDriver();
          opts.body.data.dvAttributesPerEventType.driver.dvEventTypeDriverLoad = false;
          opts.body.data.dvAttributesPerEventType.windowsEventLogsExtended = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeWindowsEventLogsExtended();
          opts.body.data.dvAttributesPerEventType.windowsEventLogsExtended.windowsEventLogsExtended = false;
          opts.body.data.dvAttributesPerEventType.file = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeFile();
          opts.body.data.dvAttributesPerEventType.file.dvEventTypeFileModification = false;
          opts.body.data.dvAttributesPerEventType.file.dvEventTypeFileCreation = false;
          opts.body.data.dvAttributesPerEventType.file.dvEventTypeFileRename = false;
          opts.body.data.dvAttributesPerEventType.file.dvEventTypeFileDeletion = false;
          opts.body.data.dvAttributesPerEventType.file.fullDiskScan = false;
          opts.body.data.dvAttributesPerEventType.namedPipeExtended = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeNamedPipeExtended();
          opts.body.data.dvAttributesPerEventType.namedPipeExtended.namedPipeExtended = false;
          opts.body.data.dvAttributesPerEventType.url = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeUrl();
          opts.body.data.dvAttributesPerEventType.url.dvEventTypeUrl = false;
          opts.body.data.dvAttributesPerEventType.behavioralIndicators = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeBehavioralIndicators();
          opts.body.data.dvAttributesPerEventType.behavioralIndicators.dvEventTypeBehavioralIndicators = false;
          opts.body.data.dvAttributesPerEventType.process = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeProcess();
          opts.body.data.dvAttributesPerEventType.process.dvEventTypeProcessModification = false;
          opts.body.data.dvAttributesPerEventType.process.dvEventTypeProcessExit = false;
          opts.body.data.dvAttributesPerEventType.process.dvEventTypeProcessCreation = false;
          opts.body.data.dvAttributesPerEventType.commandScripts = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeCommandScripts();
          opts.body.data.dvAttributesPerEventType.commandScripts.dvEventTypeCommandScripts = false;
          opts.body.data.dvAttributesPerEventType.namedPipe = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeNamedPipe();
          opts.body.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeConnection = false;
          opts.body.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeCreation = false;
          opts.body.data.dvAttributesPerEventType.ip = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeIp();
          opts.body.data.dvAttributesPerEventType.ip.dvEventTypeIpConnect = false;
          opts.body.data.dvAttributesPerEventType.ip.dvEventTypeIpListen = false;
          opts.body.data.dvAttributesPerEventType.login = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeLogin();
          opts.body.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedOut = false;
          opts.body.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedIn = false;
          opts.body.data.dvAttributesPerEventType.scheduledTask = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeScheduledTask();
          opts.body.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskDelete = false;
          opts.body.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskUpdate = false;
          opts.body.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskRegister = false;
          opts.body.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskTrigger = false;
          opts.body.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskStart = false;

          instance.webApiGroupsgroupIdPolicyPut(groupId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(S1MgmtApi.PoliciesSchemasEnrichedPolicySchema200);
            {
              let dataCtr = data.errors;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a(Object);
                expect(data).to.be();
              }
            }
            expect(data.data).to.be.a(S1MgmtApi.PoliciesSchemasEnrichedPolicySchema200Data);
                  expect(data.data.autoMitigationAction).to.be.a('string');
              expect(data.data.autoMitigationAction).to.be("");
              expect(data.data.mitigationMode).to.be.a('string');
              expect(data.data.mitigationMode).to.be("detect");
              expect(data.data.iocAttributes).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyIocAttributes);
                    expect(data.data.iocAttributes.smartFileMonitoring).to.be.a('boolean');
                expect(data.data.iocAttributes.smartFileMonitoring).to.be(false);
                expect(data.data.iocAttributes.windowsEventLogs).to.be.a('boolean');
                expect(data.data.iocAttributes.windowsEventLogs).to.be(false);
                expect(data.data.iocAttributes.autoInstallBrowserExtensions).to.be.a('boolean');
                expect(data.data.iocAttributes.autoInstallBrowserExtensions).to.be(false);
                expect(data.data.iocAttributes.dataMasking).to.be.a('boolean');
                expect(data.data.iocAttributes.dataMasking).to.be(false);
                expect(data.data.iocAttributes.dllModuleLoad).to.be.a('boolean');
                expect(data.data.iocAttributes.dllModuleLoad).to.be(false);
                expect(data.data.iocAttributes.dns).to.be.a('boolean');
                expect(data.data.iocAttributes.dns).to.be(false);
                expect(data.data.iocAttributes.crossProcess).to.be.a('boolean');
                expect(data.data.iocAttributes.crossProcess).to.be(false);
                expect(data.data.iocAttributes.registry).to.be.a('boolean');
                expect(data.data.iocAttributes.registry).to.be(false);
                expect(data.data.iocAttributes.driver).to.be.a('boolean');
                expect(data.data.iocAttributes.driver).to.be(false);
                expect(data.data.iocAttributes.fds).to.be.a('boolean');
                expect(data.data.iocAttributes.fds).to.be(false);
                expect(data.data.iocAttributes.windowsEventLogsExtended).to.be.a('boolean');
                expect(data.data.iocAttributes.windowsEventLogsExtended).to.be(false);
                expect(data.data.iocAttributes.file).to.be.a('boolean');
                expect(data.data.iocAttributes.file).to.be(false);
                expect(data.data.iocAttributes.namedPipeExtended).to.be.a('boolean');
                expect(data.data.iocAttributes.namedPipeExtended).to.be(false);
                expect(data.data.iocAttributes.url).to.be.a('boolean');
                expect(data.data.iocAttributes.url).to.be(false);
                expect(data.data.iocAttributes.behavioralIndicators).to.be.a('boolean');
                expect(data.data.iocAttributes.behavioralIndicators).to.be(false);
                expect(data.data.iocAttributes.process).to.be.a('boolean');
                expect(data.data.iocAttributes.process).to.be(false);
                expect(data.data.iocAttributes.commandScripts).to.be.a('boolean');
                expect(data.data.iocAttributes.commandScripts).to.be(false);
                expect(data.data.iocAttributes.namedPipe).to.be.a('boolean');
                expect(data.data.iocAttributes.namedPipe).to.be(false);
                expect(data.data.iocAttributes.ip).to.be.a('boolean');
                expect(data.data.iocAttributes.ip).to.be(false);
                expect(data.data.iocAttributes.login).to.be.a('boolean');
                expect(data.data.iocAttributes.login).to.be(false);
                expect(data.data.iocAttributes.scheduledTask).to.be.a('boolean');
                expect(data.data.iocAttributes.scheduledTask).to.be(false);
              expect(data.data.fwForNetworkQuarantineEnabled).to.be.a('boolean');
              expect(data.data.fwForNetworkQuarantineEnabled).to.be(false);
              expect(data.data.researchOn).to.be.a('boolean');
              expect(data.data.researchOn).to.be(false);
              expect(data.data.autoFileUpload).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyAutoFileUpload);
                    expect(data.data.autoFileUpload.maxDailyFileUploadLimit).to.be.a('number');
                expect(data.data.autoFileUpload.maxDailyFileUploadLimit).to.be(0);
                expect(data.data.autoFileUpload.includeBenignFiles).to.be.a('boolean');
                expect(data.data.autoFileUpload.includeBenignFiles).to.be(false);
                expect(data.data.autoFileUpload.maxLocalDiskUsageLimit).to.be.a('number');
                expect(data.data.autoFileUpload.maxLocalDiskUsageLimit).to.be(0);
                expect(data.data.autoFileUpload.maxLocalDiskUsage).to.be.a('number');
                expect(data.data.autoFileUpload.maxLocalDiskUsage).to.be(0);
                expect(data.data.autoFileUpload.enabled).to.be.a('boolean');
                expect(data.data.autoFileUpload.enabled).to.be(false);
                expect(data.data.autoFileUpload.maxFileSizeLimit).to.be.a('number');
                expect(data.data.autoFileUpload.maxFileSizeLimit).to.be(0);
                expect(data.data.autoFileUpload.maxFileSize).to.be.a('number');
                expect(data.data.autoFileUpload.maxFileSize).to.be(0);
                expect(data.data.autoFileUpload.maxDailyFileUpload).to.be.a('number');
                expect(data.data.autoFileUpload.maxDailyFileUpload).to.be(0);
              expect(data.data.mitigationModeSuspicious).to.be.a('string');
              expect(data.data.mitigationModeSuspicious).to.be("detect");
              expect(data.data.updatedAt).to.be.a(Date);
              expect(data.data.updatedAt).to.be(2018-02-27T04:49:26.257525Z);
              expect(data.data.antiTamperingOn).to.be.a('boolean');
              expect(data.data.antiTamperingOn).to.be(false);
              expect(data.data.identityReportInterval).to.be.a('number');
              expect(data.data.identityReportInterval).to.be(0);
              expect(data.data.monitorOnExecute).to.be.a('boolean');
              expect(data.data.monitorOnExecute).to.be(false);
              expect(data.data.userId).to.be.a('string');
              expect(data.data.userId).to.be("225494730938493804");
              expect(data.data.driverBlocking).to.be.a('boolean');
              expect(data.data.driverBlocking).to.be(false);
              expect(data.data.identityEndpointReporting).to.be.a('string');
              expect(data.data.identityEndpointReporting).to.be("disabled");
              expect(data.data.isDefault).to.be.a('boolean');
              expect(data.data.isDefault).to.be(false);
              expect(data.data.ioc).to.be.a('boolean');
              expect(data.data.ioc).to.be(false);
              expect(data.data.agentUiOn).to.be.a('boolean');
              expect(data.data.agentUiOn).to.be(false);
              expect(data.data.inheritedFrom).to.be.a('string');
              expect(data.data.inheritedFrom).to.be("site");
              expect(data.data.monitorOnWrite).to.be.a('boolean');
              expect(data.data.monitorOnWrite).to.be(false);
              expect(data.data.identityUpdateInterval).to.be.a('number');
              expect(data.data.identityUpdateInterval).to.be(0);
              expect(data.data.iocSupported).to.be.a('boolean');
              expect(data.data.iocSupported).to.be(false);
              expect(data.data.identityThrottlingInterval).to.be.a('number');
              expect(data.data.identityThrottlingInterval).to.be(0);
              expect(data.data.agentLoggingOn).to.be.a('boolean');
              expect(data.data.agentLoggingOn).to.be(false);
              expect(data.data.unsignedDriverBlockingOn).to.be.a('boolean');
              expect(data.data.unsignedDriverBlockingOn).to.be(false);
              expect(data.data.agentUi).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyAgentUi);
                    expect(data.data.agentUi.threatPopUpNotifications).to.be.a('boolean');
                expect(data.data.agentUi.threatPopUpNotifications).to.be(false);
                expect(data.data.agentUi.contactFreeText).to.be.a('string');
                expect(data.data.agentUi.contactFreeText).to.be("");
                expect(data.data.agentUi.contactEmail).to.be.a('string');
                expect(data.data.agentUi.contactEmail).to.be("");
                expect(data.data.agentUi.maxEventAgeDays).to.be.a('number');
                expect(data.data.agentUi.maxEventAgeDays).to.be(0);
                expect(data.data.agentUi.showAgentWarnings).to.be.a('boolean');
                expect(data.data.agentUi.showAgentWarnings).to.be(false);
                expect(data.data.agentUi.contactPhoneNumber).to.be.a('string');
                expect(data.data.agentUi.contactPhoneNumber).to.be("");
                expect(data.data.agentUi.showDeviceTab).to.be.a('boolean');
                expect(data.data.agentUi.showDeviceTab).to.be(false);
                expect(data.data.agentUi.devicePopUpNotifications).to.be.a('boolean');
                expect(data.data.agentUi.devicePopUpNotifications).to.be(false);
                expect(data.data.agentUi.showSupport).to.be.a('boolean');
                expect(data.data.agentUi.showSupport).to.be(false);
                expect(data.data.agentUi.showQuarantineTab).to.be.a('boolean');
                expect(data.data.agentUi.showQuarantineTab).to.be(false);
                expect(data.data.agentUi.contactCompany).to.be.a('string');
                expect(data.data.agentUi.contactCompany).to.be("");
                expect(data.data.agentUi.showSuspicious).to.be.a('boolean');
                expect(data.data.agentUi.showSuspicious).to.be(false);
                expect(data.data.agentUi.contactOther).to.be.a('string');
                expect(data.data.agentUi.contactOther).to.be("");
                expect(data.data.agentUi.contactDirectMessage).to.be.a('string');
                expect(data.data.agentUi.contactDirectMessage).to.be("");
                expect(data.data.agentUi.contactSupportWebsite).to.be.a('string');
                expect(data.data.agentUi.contactSupportWebsite).to.be("");
                expect(data.data.agentUi.agentUiOn).to.be.a('boolean');
                expect(data.data.agentUi.agentUiOn).to.be(false);
              expect(data.data.userFullName).to.be.a('string');
              expect(data.data.userFullName).to.be("");
              expect(data.data.signedDriverBlockingOn).to.be.a('boolean');
              expect(data.data.signedDriverBlockingOn).to.be(false);
              expect(data.data.allowRemoteShell).to.be.a('boolean');
              expect(data.data.allowRemoteShell).to.be(false);
              expect(data.data.isDvPolicyPerEventType).to.be.a('boolean');
              expect(data.data.isDvPolicyPerEventType).to.be(false);
              expect(data.data.removeMacros).to.be.a('boolean');
              expect(data.data.removeMacros).to.be(false);
              expect(data.data.scanNewAgents).to.be.a('boolean');
              expect(data.data.scanNewAgents).to.be(false);
              expect(data.data.snapshotsOn).to.be.a('boolean');
              expect(data.data.snapshotsOn).to.be(false);
              expect(data.data.engines).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyEngines);
                    expect(data.data.engines.lateralMovement).to.be.a('string');
                expect(data.data.engines.lateralMovement).to.be("on");
                expect(data.data.engines.preExecutionSuspicious).to.be.a('string');
                expect(data.data.engines.preExecutionSuspicious).to.be("on");
                expect(data.data.engines.preExecution).to.be.a('string');
                expect(data.data.engines.preExecution).to.be("on");
                expect(data.data.engines.dataFiles).to.be.a('string');
                expect(data.data.engines.dataFiles).to.be("on");
                expect(data.data.engines.pup).to.be.a('string');
                expect(data.data.engines.pup).to.be("on");
                expect(data.data.engines.executables).to.be.a('string');
                expect(data.data.engines.executables).to.be("on");
                expect(data.data.engines.penetration).to.be.a('string');
                expect(data.data.engines.penetration).to.be("on");
                expect(data.data.engines.applicationControl).to.be.a('string');
                expect(data.data.engines.applicationControl).to.be("on");
                expect(data.data.engines.reputation).to.be.a('string');
                expect(data.data.engines.reputation).to.be("on");
                expect(data.data.engines.exploits).to.be.a('string');
                expect(data.data.engines.exploits).to.be("on");
                expect(data.data.engines.remoteShell).to.be.a('string');
                expect(data.data.engines.remoteShell).to.be("on");
              expect(data.data.remoteOpsForensics).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyRemoteOpsForensics);
                    expect(data.data.remoteOpsForensics.parsedArtifactsDestination).to.be.a('string');
                expect(data.data.remoteOpsForensics.parsedArtifactsDestination).to.be("local");
                expect(data.data.remoteOpsForensics.maximumFileSizeUpload).to.be.a('number');
                expect(data.data.remoteOpsForensics.maximumFileSizeUpload).to.be("0");
                expect(data.data.remoteOpsForensics.maximumDailyUpload).to.be.a('number');
                expect(data.data.remoteOpsForensics.maximumDailyUpload).to.be("0");
                expect(data.data.remoteOpsForensics.maximumFileSizeUploadLimit).to.be.a('number');
                expect(data.data.remoteOpsForensics.maximumFileSizeUploadLimit).to.be("0");
                expect(data.data.remoteOpsForensics.enabled).to.be.a('boolean');
                expect(data.data.remoteOpsForensics.enabled).to.be(false);
                expect(data.data.remoteOpsForensics.cpuLimit).to.be.a('number');
                expect(data.data.remoteOpsForensics.cpuLimit).to.be(0);
                expect(data.data.remoteOpsForensics.maximumDailyUploadLimit).to.be.a('number');
                expect(data.data.remoteOpsForensics.maximumDailyUploadLimit).to.be("0");
              expect(data.data.forensicsAutoTriggering).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyForensicsAutoTriggering);
                    expect(data.data.forensicsAutoTriggering.windowsProfileId).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.windowsProfileId).to.be("");
                expect(data.data.forensicsAutoTriggering.linuxEnabled).to.be.a('boolean');
                expect(data.data.forensicsAutoTriggering.linuxEnabled).to.be(false);
                expect(data.data.forensicsAutoTriggering.macosProfileName).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.macosProfileName).to.be("");
                expect(data.data.forensicsAutoTriggering.macosProfileId).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.macosProfileId).to.be("");
                expect(data.data.forensicsAutoTriggering.windowsProfileName).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.windowsProfileName).to.be("");
                expect(data.data.forensicsAutoTriggering.linuxProfileName).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.linuxProfileName).to.be("");
                expect(data.data.forensicsAutoTriggering.windowsEnabled).to.be.a('boolean');
                expect(data.data.forensicsAutoTriggering.windowsEnabled).to.be(false);
                expect(data.data.forensicsAutoTriggering.linuxProfileId).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.linuxProfileId).to.be("");
                expect(data.data.forensicsAutoTriggering.macosEnabled).to.be.a('boolean');
                expect(data.data.forensicsAutoTriggering.macosEnabled).to.be(false);
              expect(data.data.identityOn).to.be.a('boolean');
              expect(data.data.identityOn).to.be(false);
              expect(data.data.cloudValidationOn).to.be.a(Object);
              expect(data.data.cloudValidationOn).to.be();
              expect(data.data.autoImmuneOn).to.be.a('boolean');
              expect(data.data.autoImmuneOn).to.be(false);
              expect(data.data.agentNotification).to.be.a('boolean');
              expect(data.data.agentNotification).to.be(false);
              expect(data.data.createdAt).to.be.a(Date);
              expect(data.data.createdAt).to.be(2018-02-27T04:49:26.257525Z);
              expect(data.data.networkQuarantineOn).to.be.a('boolean');
              expect(data.data.networkQuarantineOn).to.be(false);
              expect(data.data.autoDecommissionDays).to.be.a('number');
              expect(data.data.autoDecommissionDays).to.be(0);
              expect(data.data.remoteScriptOrchestration).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyRemoteScriptOrchestration);
                    expect(data.data.remoteScriptOrchestration.alwaysUploadStreamToCloud).to.be.a('boolean');
                expect(data.data.remoteScriptOrchestration.alwaysUploadStreamToCloud).to.be(false);
                expect(data.data.remoteScriptOrchestration.maxLocalPackageDiskUsageLimit).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxLocalPackageDiskUsageLimit).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxDailyFileUploadLimit).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxDailyFileUploadLimit).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxLocalPackageDiskUsage).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxLocalPackageDiskUsage).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxDailyFileDownloadLimit).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxDailyFileDownloadLimit).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxFileSizeLimit).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxFileSizeLimit).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxDailyFileDownload).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxDailyFileDownload).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxFileSize).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxFileSize).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxDailyFileUpload).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxDailyFileUpload).to.be("0");
              expect(data.data.autoDecommissionOn).to.be.a('boolean');
              expect(data.data.autoDecommissionOn).to.be(false);
              expect(data.data.dvAttributesPerEventType).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventType);
                    expect(data.data.dvAttributesPerEventType.smartFileMonitoring).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeSmartFileMonitoring);
                      expect(data.data.dvAttributesPerEventType.smartFileMonitoring.smartFileMonitoring).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.smartFileMonitoring.smartFileMonitoring).to.be(false);
                expect(data.data.dvAttributesPerEventType.windowsEventLogs).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeWindowsEventLogs);
                      expect(data.data.dvAttributesPerEventType.windowsEventLogs.dvEventTypeWindowsEventLogCreation).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.windowsEventLogs.dvEventTypeWindowsEventLogCreation).to.be(false);
                expect(data.data.dvAttributesPerEventType.autoInstallBrowserExtensions).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeAutoInstallBrowserExtensions);
                      expect(data.data.dvAttributesPerEventType.autoInstallBrowserExtensions.autoInstallBrowserExtensions).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.autoInstallBrowserExtensions.autoInstallBrowserExtensions).to.be(false);
                expect(data.data.dvAttributesPerEventType.dataMasking).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDataMasking);
                      expect(data.data.dvAttributesPerEventType.dataMasking.dataMasking).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.dataMasking.dataMasking).to.be(false);
                expect(data.data.dvAttributesPerEventType.dllModuleLoad).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDllModuleLoad);
                      expect(data.data.dvAttributesPerEventType.dllModuleLoad.dvEventTypeDllModuleLoad).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.dllModuleLoad.dvEventTypeDllModuleLoad).to.be(false);
                expect(data.data.dvAttributesPerEventType.dns).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDns);
                      expect(data.data.dvAttributesPerEventType.dns.dvEventTypeDns).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.dns.dvEventTypeDns).to.be(false);
                expect(data.data.dvAttributesPerEventType.crossProcess).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeCrossProcess);
                      expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessOpenProcess).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessOpenProcess).to.be(false);
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessRemoteThread).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessRemoteThread).to.be(false);
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateProcess).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateProcess).to.be(false);
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateThread).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateThread).to.be(false);
                expect(data.data.dvAttributesPerEventType.registry).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeRegistry);
                      expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeySecurityChanged).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeySecurityChanged).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueDeleted).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueDeleted).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueModified).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueModified).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyRename).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyRename).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyCreated).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyCreated).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueCreated).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueCreated).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyImport).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyImport).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyDelete).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyDelete).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyExport).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyExport).to.be(false);
                expect(data.data.dvAttributesPerEventType.driver).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDriver);
                      expect(data.data.dvAttributesPerEventType.driver.dvEventTypeDriverLoad).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.driver.dvEventTypeDriverLoad).to.be(false);
                expect(data.data.dvAttributesPerEventType.windowsEventLogsExtended).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeWindowsEventLogsExtended);
                      expect(data.data.dvAttributesPerEventType.windowsEventLogsExtended.windowsEventLogsExtended).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.windowsEventLogsExtended.windowsEventLogsExtended).to.be(false);
                expect(data.data.dvAttributesPerEventType.file).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeFile);
                      expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileModification).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileModification).to.be(false);
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileCreation).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileCreation).to.be(false);
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileRename).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileRename).to.be(false);
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileDeletion).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileDeletion).to.be(false);
                  expect(data.data.dvAttributesPerEventType.file.fullDiskScan).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.fullDiskScan).to.be(false);
                expect(data.data.dvAttributesPerEventType.namedPipeExtended).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeNamedPipeExtended);
                      expect(data.data.dvAttributesPerEventType.namedPipeExtended.namedPipeExtended).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.namedPipeExtended.namedPipeExtended).to.be(false);
                expect(data.data.dvAttributesPerEventType.url).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeUrl);
                      expect(data.data.dvAttributesPerEventType.url.dvEventTypeUrl).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.url.dvEventTypeUrl).to.be(false);
                expect(data.data.dvAttributesPerEventType.behavioralIndicators).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeBehavioralIndicators);
                      expect(data.data.dvAttributesPerEventType.behavioralIndicators.dvEventTypeBehavioralIndicators).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.behavioralIndicators.dvEventTypeBehavioralIndicators).to.be(false);
                expect(data.data.dvAttributesPerEventType.process).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeProcess);
                      expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessModification).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessModification).to.be(false);
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessExit).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessExit).to.be(false);
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessCreation).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessCreation).to.be(false);
                expect(data.data.dvAttributesPerEventType.commandScripts).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeCommandScripts);
                      expect(data.data.dvAttributesPerEventType.commandScripts.dvEventTypeCommandScripts).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.commandScripts.dvEventTypeCommandScripts).to.be(false);
                expect(data.data.dvAttributesPerEventType.namedPipe).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeNamedPipe);
                      expect(data.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeConnection).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeConnection).to.be(false);
                  expect(data.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeCreation).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeCreation).to.be(false);
                expect(data.data.dvAttributesPerEventType.ip).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeIp);
                      expect(data.data.dvAttributesPerEventType.ip.dvEventTypeIpConnect).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.ip.dvEventTypeIpConnect).to.be(false);
                  expect(data.data.dvAttributesPerEventType.ip.dvEventTypeIpListen).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.ip.dvEventTypeIpListen).to.be(false);
                expect(data.data.dvAttributesPerEventType.login).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeLogin);
                      expect(data.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedOut).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedOut).to.be(false);
                  expect(data.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedIn).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedIn).to.be(false);
                expect(data.data.dvAttributesPerEventType.scheduledTask).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeScheduledTask);
                      expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskDelete).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskDelete).to.be(false);
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskUpdate).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskUpdate).to.be(false);
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskRegister).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskRegister).to.be(false);
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskTrigger).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskTrigger).to.be(false);
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskStart).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskStart).to.be(false);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('webApiSitessiteIdPolicyGet', function() {
        it('should call webApiSitessiteIdPolicyGet successfully', function(done) {
          // TODO: uncomment, update parameter values for webApiSitessiteIdPolicyGet call and complete the assertions
          /*
          var siteId = "siteId_example";

          instance.webApiSitessiteIdPolicyGet(siteId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(S1MgmtApi.PoliciesSchemasEnrichedPolicySchema200);
            {
              let dataCtr = data.errors;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a(Object);
                expect(data).to.be();
              }
            }
            expect(data.data).to.be.a(S1MgmtApi.PoliciesSchemasEnrichedPolicySchema200Data);
                  expect(data.data.autoMitigationAction).to.be.a('string');
              expect(data.data.autoMitigationAction).to.be("");
              expect(data.data.mitigationMode).to.be.a('string');
              expect(data.data.mitigationMode).to.be("detect");
              expect(data.data.iocAttributes).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyIocAttributes);
                    expect(data.data.iocAttributes.smartFileMonitoring).to.be.a('boolean');
                expect(data.data.iocAttributes.smartFileMonitoring).to.be(false);
                expect(data.data.iocAttributes.windowsEventLogs).to.be.a('boolean');
                expect(data.data.iocAttributes.windowsEventLogs).to.be(false);
                expect(data.data.iocAttributes.autoInstallBrowserExtensions).to.be.a('boolean');
                expect(data.data.iocAttributes.autoInstallBrowserExtensions).to.be(false);
                expect(data.data.iocAttributes.dataMasking).to.be.a('boolean');
                expect(data.data.iocAttributes.dataMasking).to.be(false);
                expect(data.data.iocAttributes.dllModuleLoad).to.be.a('boolean');
                expect(data.data.iocAttributes.dllModuleLoad).to.be(false);
                expect(data.data.iocAttributes.dns).to.be.a('boolean');
                expect(data.data.iocAttributes.dns).to.be(false);
                expect(data.data.iocAttributes.crossProcess).to.be.a('boolean');
                expect(data.data.iocAttributes.crossProcess).to.be(false);
                expect(data.data.iocAttributes.registry).to.be.a('boolean');
                expect(data.data.iocAttributes.registry).to.be(false);
                expect(data.data.iocAttributes.driver).to.be.a('boolean');
                expect(data.data.iocAttributes.driver).to.be(false);
                expect(data.data.iocAttributes.fds).to.be.a('boolean');
                expect(data.data.iocAttributes.fds).to.be(false);
                expect(data.data.iocAttributes.windowsEventLogsExtended).to.be.a('boolean');
                expect(data.data.iocAttributes.windowsEventLogsExtended).to.be(false);
                expect(data.data.iocAttributes.file).to.be.a('boolean');
                expect(data.data.iocAttributes.file).to.be(false);
                expect(data.data.iocAttributes.namedPipeExtended).to.be.a('boolean');
                expect(data.data.iocAttributes.namedPipeExtended).to.be(false);
                expect(data.data.iocAttributes.url).to.be.a('boolean');
                expect(data.data.iocAttributes.url).to.be(false);
                expect(data.data.iocAttributes.behavioralIndicators).to.be.a('boolean');
                expect(data.data.iocAttributes.behavioralIndicators).to.be(false);
                expect(data.data.iocAttributes.process).to.be.a('boolean');
                expect(data.data.iocAttributes.process).to.be(false);
                expect(data.data.iocAttributes.commandScripts).to.be.a('boolean');
                expect(data.data.iocAttributes.commandScripts).to.be(false);
                expect(data.data.iocAttributes.namedPipe).to.be.a('boolean');
                expect(data.data.iocAttributes.namedPipe).to.be(false);
                expect(data.data.iocAttributes.ip).to.be.a('boolean');
                expect(data.data.iocAttributes.ip).to.be(false);
                expect(data.data.iocAttributes.login).to.be.a('boolean');
                expect(data.data.iocAttributes.login).to.be(false);
                expect(data.data.iocAttributes.scheduledTask).to.be.a('boolean');
                expect(data.data.iocAttributes.scheduledTask).to.be(false);
              expect(data.data.fwForNetworkQuarantineEnabled).to.be.a('boolean');
              expect(data.data.fwForNetworkQuarantineEnabled).to.be(false);
              expect(data.data.researchOn).to.be.a('boolean');
              expect(data.data.researchOn).to.be(false);
              expect(data.data.autoFileUpload).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyAutoFileUpload);
                    expect(data.data.autoFileUpload.maxDailyFileUploadLimit).to.be.a('number');
                expect(data.data.autoFileUpload.maxDailyFileUploadLimit).to.be(0);
                expect(data.data.autoFileUpload.includeBenignFiles).to.be.a('boolean');
                expect(data.data.autoFileUpload.includeBenignFiles).to.be(false);
                expect(data.data.autoFileUpload.maxLocalDiskUsageLimit).to.be.a('number');
                expect(data.data.autoFileUpload.maxLocalDiskUsageLimit).to.be(0);
                expect(data.data.autoFileUpload.maxLocalDiskUsage).to.be.a('number');
                expect(data.data.autoFileUpload.maxLocalDiskUsage).to.be(0);
                expect(data.data.autoFileUpload.enabled).to.be.a('boolean');
                expect(data.data.autoFileUpload.enabled).to.be(false);
                expect(data.data.autoFileUpload.maxFileSizeLimit).to.be.a('number');
                expect(data.data.autoFileUpload.maxFileSizeLimit).to.be(0);
                expect(data.data.autoFileUpload.maxFileSize).to.be.a('number');
                expect(data.data.autoFileUpload.maxFileSize).to.be(0);
                expect(data.data.autoFileUpload.maxDailyFileUpload).to.be.a('number');
                expect(data.data.autoFileUpload.maxDailyFileUpload).to.be(0);
              expect(data.data.mitigationModeSuspicious).to.be.a('string');
              expect(data.data.mitigationModeSuspicious).to.be("detect");
              expect(data.data.updatedAt).to.be.a(Date);
              expect(data.data.updatedAt).to.be(2018-02-27T04:49:26.257525Z);
              expect(data.data.antiTamperingOn).to.be.a('boolean');
              expect(data.data.antiTamperingOn).to.be(false);
              expect(data.data.identityReportInterval).to.be.a('number');
              expect(data.data.identityReportInterval).to.be(0);
              expect(data.data.monitorOnExecute).to.be.a('boolean');
              expect(data.data.monitorOnExecute).to.be(false);
              expect(data.data.userId).to.be.a('string');
              expect(data.data.userId).to.be("225494730938493804");
              expect(data.data.driverBlocking).to.be.a('boolean');
              expect(data.data.driverBlocking).to.be(false);
              expect(data.data.identityEndpointReporting).to.be.a('string');
              expect(data.data.identityEndpointReporting).to.be("disabled");
              expect(data.data.isDefault).to.be.a('boolean');
              expect(data.data.isDefault).to.be(false);
              expect(data.data.ioc).to.be.a('boolean');
              expect(data.data.ioc).to.be(false);
              expect(data.data.agentUiOn).to.be.a('boolean');
              expect(data.data.agentUiOn).to.be(false);
              expect(data.data.inheritedFrom).to.be.a('string');
              expect(data.data.inheritedFrom).to.be("site");
              expect(data.data.monitorOnWrite).to.be.a('boolean');
              expect(data.data.monitorOnWrite).to.be(false);
              expect(data.data.identityUpdateInterval).to.be.a('number');
              expect(data.data.identityUpdateInterval).to.be(0);
              expect(data.data.iocSupported).to.be.a('boolean');
              expect(data.data.iocSupported).to.be(false);
              expect(data.data.identityThrottlingInterval).to.be.a('number');
              expect(data.data.identityThrottlingInterval).to.be(0);
              expect(data.data.agentLoggingOn).to.be.a('boolean');
              expect(data.data.agentLoggingOn).to.be(false);
              expect(data.data.unsignedDriverBlockingOn).to.be.a('boolean');
              expect(data.data.unsignedDriverBlockingOn).to.be(false);
              expect(data.data.agentUi).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyAgentUi);
                    expect(data.data.agentUi.threatPopUpNotifications).to.be.a('boolean');
                expect(data.data.agentUi.threatPopUpNotifications).to.be(false);
                expect(data.data.agentUi.contactFreeText).to.be.a('string');
                expect(data.data.agentUi.contactFreeText).to.be("");
                expect(data.data.agentUi.contactEmail).to.be.a('string');
                expect(data.data.agentUi.contactEmail).to.be("");
                expect(data.data.agentUi.maxEventAgeDays).to.be.a('number');
                expect(data.data.agentUi.maxEventAgeDays).to.be(0);
                expect(data.data.agentUi.showAgentWarnings).to.be.a('boolean');
                expect(data.data.agentUi.showAgentWarnings).to.be(false);
                expect(data.data.agentUi.contactPhoneNumber).to.be.a('string');
                expect(data.data.agentUi.contactPhoneNumber).to.be("");
                expect(data.data.agentUi.showDeviceTab).to.be.a('boolean');
                expect(data.data.agentUi.showDeviceTab).to.be(false);
                expect(data.data.agentUi.devicePopUpNotifications).to.be.a('boolean');
                expect(data.data.agentUi.devicePopUpNotifications).to.be(false);
                expect(data.data.agentUi.showSupport).to.be.a('boolean');
                expect(data.data.agentUi.showSupport).to.be(false);
                expect(data.data.agentUi.showQuarantineTab).to.be.a('boolean');
                expect(data.data.agentUi.showQuarantineTab).to.be(false);
                expect(data.data.agentUi.contactCompany).to.be.a('string');
                expect(data.data.agentUi.contactCompany).to.be("");
                expect(data.data.agentUi.showSuspicious).to.be.a('boolean');
                expect(data.data.agentUi.showSuspicious).to.be(false);
                expect(data.data.agentUi.contactOther).to.be.a('string');
                expect(data.data.agentUi.contactOther).to.be("");
                expect(data.data.agentUi.contactDirectMessage).to.be.a('string');
                expect(data.data.agentUi.contactDirectMessage).to.be("");
                expect(data.data.agentUi.contactSupportWebsite).to.be.a('string');
                expect(data.data.agentUi.contactSupportWebsite).to.be("");
                expect(data.data.agentUi.agentUiOn).to.be.a('boolean');
                expect(data.data.agentUi.agentUiOn).to.be(false);
              expect(data.data.userFullName).to.be.a('string');
              expect(data.data.userFullName).to.be("");
              expect(data.data.signedDriverBlockingOn).to.be.a('boolean');
              expect(data.data.signedDriverBlockingOn).to.be(false);
              expect(data.data.allowRemoteShell).to.be.a('boolean');
              expect(data.data.allowRemoteShell).to.be(false);
              expect(data.data.isDvPolicyPerEventType).to.be.a('boolean');
              expect(data.data.isDvPolicyPerEventType).to.be(false);
              expect(data.data.removeMacros).to.be.a('boolean');
              expect(data.data.removeMacros).to.be(false);
              expect(data.data.scanNewAgents).to.be.a('boolean');
              expect(data.data.scanNewAgents).to.be(false);
              expect(data.data.snapshotsOn).to.be.a('boolean');
              expect(data.data.snapshotsOn).to.be(false);
              expect(data.data.engines).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyEngines);
                    expect(data.data.engines.lateralMovement).to.be.a('string');
                expect(data.data.engines.lateralMovement).to.be("on");
                expect(data.data.engines.preExecutionSuspicious).to.be.a('string');
                expect(data.data.engines.preExecutionSuspicious).to.be("on");
                expect(data.data.engines.preExecution).to.be.a('string');
                expect(data.data.engines.preExecution).to.be("on");
                expect(data.data.engines.dataFiles).to.be.a('string');
                expect(data.data.engines.dataFiles).to.be("on");
                expect(data.data.engines.pup).to.be.a('string');
                expect(data.data.engines.pup).to.be("on");
                expect(data.data.engines.executables).to.be.a('string');
                expect(data.data.engines.executables).to.be("on");
                expect(data.data.engines.penetration).to.be.a('string');
                expect(data.data.engines.penetration).to.be("on");
                expect(data.data.engines.applicationControl).to.be.a('string');
                expect(data.data.engines.applicationControl).to.be("on");
                expect(data.data.engines.reputation).to.be.a('string');
                expect(data.data.engines.reputation).to.be("on");
                expect(data.data.engines.exploits).to.be.a('string');
                expect(data.data.engines.exploits).to.be("on");
                expect(data.data.engines.remoteShell).to.be.a('string');
                expect(data.data.engines.remoteShell).to.be("on");
              expect(data.data.remoteOpsForensics).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyRemoteOpsForensics);
                    expect(data.data.remoteOpsForensics.parsedArtifactsDestination).to.be.a('string');
                expect(data.data.remoteOpsForensics.parsedArtifactsDestination).to.be("local");
                expect(data.data.remoteOpsForensics.maximumFileSizeUpload).to.be.a('number');
                expect(data.data.remoteOpsForensics.maximumFileSizeUpload).to.be("0");
                expect(data.data.remoteOpsForensics.maximumDailyUpload).to.be.a('number');
                expect(data.data.remoteOpsForensics.maximumDailyUpload).to.be("0");
                expect(data.data.remoteOpsForensics.maximumFileSizeUploadLimit).to.be.a('number');
                expect(data.data.remoteOpsForensics.maximumFileSizeUploadLimit).to.be("0");
                expect(data.data.remoteOpsForensics.enabled).to.be.a('boolean');
                expect(data.data.remoteOpsForensics.enabled).to.be(false);
                expect(data.data.remoteOpsForensics.cpuLimit).to.be.a('number');
                expect(data.data.remoteOpsForensics.cpuLimit).to.be(0);
                expect(data.data.remoteOpsForensics.maximumDailyUploadLimit).to.be.a('number');
                expect(data.data.remoteOpsForensics.maximumDailyUploadLimit).to.be("0");
              expect(data.data.forensicsAutoTriggering).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyForensicsAutoTriggering);
                    expect(data.data.forensicsAutoTriggering.windowsProfileId).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.windowsProfileId).to.be("");
                expect(data.data.forensicsAutoTriggering.linuxEnabled).to.be.a('boolean');
                expect(data.data.forensicsAutoTriggering.linuxEnabled).to.be(false);
                expect(data.data.forensicsAutoTriggering.macosProfileName).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.macosProfileName).to.be("");
                expect(data.data.forensicsAutoTriggering.macosProfileId).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.macosProfileId).to.be("");
                expect(data.data.forensicsAutoTriggering.windowsProfileName).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.windowsProfileName).to.be("");
                expect(data.data.forensicsAutoTriggering.linuxProfileName).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.linuxProfileName).to.be("");
                expect(data.data.forensicsAutoTriggering.windowsEnabled).to.be.a('boolean');
                expect(data.data.forensicsAutoTriggering.windowsEnabled).to.be(false);
                expect(data.data.forensicsAutoTriggering.linuxProfileId).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.linuxProfileId).to.be("");
                expect(data.data.forensicsAutoTriggering.macosEnabled).to.be.a('boolean');
                expect(data.data.forensicsAutoTriggering.macosEnabled).to.be(false);
              expect(data.data.identityOn).to.be.a('boolean');
              expect(data.data.identityOn).to.be(false);
              expect(data.data.cloudValidationOn).to.be.a(Object);
              expect(data.data.cloudValidationOn).to.be();
              expect(data.data.autoImmuneOn).to.be.a('boolean');
              expect(data.data.autoImmuneOn).to.be(false);
              expect(data.data.agentNotification).to.be.a('boolean');
              expect(data.data.agentNotification).to.be(false);
              expect(data.data.createdAt).to.be.a(Date);
              expect(data.data.createdAt).to.be(2018-02-27T04:49:26.257525Z);
              expect(data.data.networkQuarantineOn).to.be.a('boolean');
              expect(data.data.networkQuarantineOn).to.be(false);
              expect(data.data.autoDecommissionDays).to.be.a('number');
              expect(data.data.autoDecommissionDays).to.be(0);
              expect(data.data.remoteScriptOrchestration).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyRemoteScriptOrchestration);
                    expect(data.data.remoteScriptOrchestration.alwaysUploadStreamToCloud).to.be.a('boolean');
                expect(data.data.remoteScriptOrchestration.alwaysUploadStreamToCloud).to.be(false);
                expect(data.data.remoteScriptOrchestration.maxLocalPackageDiskUsageLimit).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxLocalPackageDiskUsageLimit).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxDailyFileUploadLimit).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxDailyFileUploadLimit).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxLocalPackageDiskUsage).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxLocalPackageDiskUsage).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxDailyFileDownloadLimit).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxDailyFileDownloadLimit).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxFileSizeLimit).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxFileSizeLimit).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxDailyFileDownload).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxDailyFileDownload).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxFileSize).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxFileSize).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxDailyFileUpload).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxDailyFileUpload).to.be("0");
              expect(data.data.autoDecommissionOn).to.be.a('boolean');
              expect(data.data.autoDecommissionOn).to.be(false);
              expect(data.data.dvAttributesPerEventType).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventType);
                    expect(data.data.dvAttributesPerEventType.smartFileMonitoring).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeSmartFileMonitoring);
                      expect(data.data.dvAttributesPerEventType.smartFileMonitoring.smartFileMonitoring).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.smartFileMonitoring.smartFileMonitoring).to.be(false);
                expect(data.data.dvAttributesPerEventType.windowsEventLogs).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeWindowsEventLogs);
                      expect(data.data.dvAttributesPerEventType.windowsEventLogs.dvEventTypeWindowsEventLogCreation).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.windowsEventLogs.dvEventTypeWindowsEventLogCreation).to.be(false);
                expect(data.data.dvAttributesPerEventType.autoInstallBrowserExtensions).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeAutoInstallBrowserExtensions);
                      expect(data.data.dvAttributesPerEventType.autoInstallBrowserExtensions.autoInstallBrowserExtensions).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.autoInstallBrowserExtensions.autoInstallBrowserExtensions).to.be(false);
                expect(data.data.dvAttributesPerEventType.dataMasking).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDataMasking);
                      expect(data.data.dvAttributesPerEventType.dataMasking.dataMasking).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.dataMasking.dataMasking).to.be(false);
                expect(data.data.dvAttributesPerEventType.dllModuleLoad).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDllModuleLoad);
                      expect(data.data.dvAttributesPerEventType.dllModuleLoad.dvEventTypeDllModuleLoad).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.dllModuleLoad.dvEventTypeDllModuleLoad).to.be(false);
                expect(data.data.dvAttributesPerEventType.dns).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDns);
                      expect(data.data.dvAttributesPerEventType.dns.dvEventTypeDns).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.dns.dvEventTypeDns).to.be(false);
                expect(data.data.dvAttributesPerEventType.crossProcess).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeCrossProcess);
                      expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessOpenProcess).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessOpenProcess).to.be(false);
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessRemoteThread).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessRemoteThread).to.be(false);
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateProcess).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateProcess).to.be(false);
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateThread).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateThread).to.be(false);
                expect(data.data.dvAttributesPerEventType.registry).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeRegistry);
                      expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeySecurityChanged).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeySecurityChanged).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueDeleted).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueDeleted).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueModified).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueModified).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyRename).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyRename).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyCreated).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyCreated).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueCreated).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueCreated).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyImport).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyImport).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyDelete).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyDelete).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyExport).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyExport).to.be(false);
                expect(data.data.dvAttributesPerEventType.driver).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDriver);
                      expect(data.data.dvAttributesPerEventType.driver.dvEventTypeDriverLoad).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.driver.dvEventTypeDriverLoad).to.be(false);
                expect(data.data.dvAttributesPerEventType.windowsEventLogsExtended).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeWindowsEventLogsExtended);
                      expect(data.data.dvAttributesPerEventType.windowsEventLogsExtended.windowsEventLogsExtended).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.windowsEventLogsExtended.windowsEventLogsExtended).to.be(false);
                expect(data.data.dvAttributesPerEventType.file).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeFile);
                      expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileModification).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileModification).to.be(false);
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileCreation).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileCreation).to.be(false);
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileRename).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileRename).to.be(false);
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileDeletion).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileDeletion).to.be(false);
                  expect(data.data.dvAttributesPerEventType.file.fullDiskScan).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.fullDiskScan).to.be(false);
                expect(data.data.dvAttributesPerEventType.namedPipeExtended).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeNamedPipeExtended);
                      expect(data.data.dvAttributesPerEventType.namedPipeExtended.namedPipeExtended).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.namedPipeExtended.namedPipeExtended).to.be(false);
                expect(data.data.dvAttributesPerEventType.url).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeUrl);
                      expect(data.data.dvAttributesPerEventType.url.dvEventTypeUrl).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.url.dvEventTypeUrl).to.be(false);
                expect(data.data.dvAttributesPerEventType.behavioralIndicators).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeBehavioralIndicators);
                      expect(data.data.dvAttributesPerEventType.behavioralIndicators.dvEventTypeBehavioralIndicators).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.behavioralIndicators.dvEventTypeBehavioralIndicators).to.be(false);
                expect(data.data.dvAttributesPerEventType.process).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeProcess);
                      expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessModification).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessModification).to.be(false);
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessExit).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessExit).to.be(false);
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessCreation).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessCreation).to.be(false);
                expect(data.data.dvAttributesPerEventType.commandScripts).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeCommandScripts);
                      expect(data.data.dvAttributesPerEventType.commandScripts.dvEventTypeCommandScripts).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.commandScripts.dvEventTypeCommandScripts).to.be(false);
                expect(data.data.dvAttributesPerEventType.namedPipe).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeNamedPipe);
                      expect(data.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeConnection).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeConnection).to.be(false);
                  expect(data.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeCreation).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeCreation).to.be(false);
                expect(data.data.dvAttributesPerEventType.ip).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeIp);
                      expect(data.data.dvAttributesPerEventType.ip.dvEventTypeIpConnect).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.ip.dvEventTypeIpConnect).to.be(false);
                  expect(data.data.dvAttributesPerEventType.ip.dvEventTypeIpListen).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.ip.dvEventTypeIpListen).to.be(false);
                expect(data.data.dvAttributesPerEventType.login).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeLogin);
                      expect(data.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedOut).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedOut).to.be(false);
                  expect(data.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedIn).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedIn).to.be(false);
                expect(data.data.dvAttributesPerEventType.scheduledTask).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeScheduledTask);
                      expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskDelete).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskDelete).to.be(false);
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskUpdate).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskUpdate).to.be(false);
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskRegister).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskRegister).to.be(false);
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskTrigger).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskTrigger).to.be(false);
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskStart).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskStart).to.be(false);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('webApiSitessiteIdPolicyPut', function() {
        it('should call webApiSitessiteIdPolicyPut successfully', function(done) {
          // TODO: uncomment, update parameter values for webApiSitessiteIdPolicyPut call and complete the assertions
          /*
          var siteId = "siteId_example";
          var opts = {};
          opts.body = new S1MgmtApi.PoliciesTenantPolicySchema();
          opts.body.data = new S1MgmtApi.PoliciesTenantPolicySchemaData();
          opts.body.data.autoMitigationAction = "";
          opts.body.data.mitigationMode = "detect";
          opts.body.data.iocAttributes = new S1MgmtApi.SitesSitePutSchemaDataPolicyIocAttributes();
          opts.body.data.iocAttributes.smartFileMonitoring = false;
          opts.body.data.iocAttributes.windowsEventLogs = false;
          opts.body.data.iocAttributes.autoInstallBrowserExtensions = false;
          opts.body.data.iocAttributes.dataMasking = false;
          opts.body.data.iocAttributes.dllModuleLoad = false;
          opts.body.data.iocAttributes.dns = false;
          opts.body.data.iocAttributes.crossProcess = false;
          opts.body.data.iocAttributes.registry = false;
          opts.body.data.iocAttributes.driver = false;
          opts.body.data.iocAttributes.fds = false;
          opts.body.data.iocAttributes.windowsEventLogsExtended = false;
          opts.body.data.iocAttributes.file = false;
          opts.body.data.iocAttributes.namedPipeExtended = false;
          opts.body.data.iocAttributes.url = false;
          opts.body.data.iocAttributes.behavioralIndicators = false;
          opts.body.data.iocAttributes.process = false;
          opts.body.data.iocAttributes.commandScripts = false;
          opts.body.data.iocAttributes.namedPipe = false;
          opts.body.data.iocAttributes.ip = false;
          opts.body.data.iocAttributes.login = false;
          opts.body.data.iocAttributes.scheduledTask = false;
          opts.body.data.researchOn = false;
          opts.body.data.autoFileUpload = new S1MgmtApi.SitesSitePutSchemaDataPolicyAutoFileUpload();
          opts.body.data.autoFileUpload.maxDailyFileUploadLimit = 0;
          opts.body.data.autoFileUpload.includeBenignFiles = false;
          opts.body.data.autoFileUpload.maxLocalDiskUsageLimit = 0;
          opts.body.data.autoFileUpload.maxLocalDiskUsage = 0;
          opts.body.data.autoFileUpload.enabled = false;
          opts.body.data.autoFileUpload.maxFileSizeLimit = 0;
          opts.body.data.autoFileUpload.maxFileSize = 0;
          opts.body.data.autoFileUpload.maxDailyFileUpload = 0;
          opts.body.data.mitigationModeSuspicious = "detect";
          opts.body.data.updatedAt = 2018-02-27T04:49:26.257525Z;
          opts.body.data.antiTamperingOn = false;
          opts.body.data.identityReportInterval = 0;
          opts.body.data.monitorOnExecute = false;
          opts.body.data.userId = "225494730938493804";
          opts.body.data.driverBlocking = false;
          opts.body.data.identityEndpointReporting = "disabled";
          opts.body.data.isDefault = false;
          opts.body.data.ioc = false;
          opts.body.data.agentUiOn = false;
          opts.body.data.monitorOnWrite = false;
          opts.body.data.identityUpdateInterval = 0;
          opts.body.data.iocSupported = false;
          opts.body.data.identityThrottlingInterval = 0;
          opts.body.data.agentLoggingOn = false;
          opts.body.data.unsignedDriverBlockingOn = false;
          opts.body.data.agentUi = new S1MgmtApi.SitesSitePutSchemaDataPolicyAgentUi();
          opts.body.data.agentUi.threatPopUpNotifications = false;
          opts.body.data.agentUi.contactFreeText = "";
          opts.body.data.agentUi.contactEmail = "";
          opts.body.data.agentUi.maxEventAgeDays = 0;
          opts.body.data.agentUi.showAgentWarnings = false;
          opts.body.data.agentUi.contactPhoneNumber = "";
          opts.body.data.agentUi.showDeviceTab = false;
          opts.body.data.agentUi.devicePopUpNotifications = false;
          opts.body.data.agentUi.showSupport = false;
          opts.body.data.agentUi.showQuarantineTab = false;
          opts.body.data.agentUi.contactCompany = "";
          opts.body.data.agentUi.showSuspicious = false;
          opts.body.data.agentUi.contactOther = "";
          opts.body.data.agentUi.contactDirectMessage = "";
          opts.body.data.agentUi.contactSupportWebsite = "";
          opts.body.data.agentUi.agentUiOn = false;
          opts.body.data.userFullName = "";
          opts.body.data.signedDriverBlockingOn = false;
          opts.body.data.allowRemoteShell = false;
          opts.body.data.isDvPolicyPerEventType = false;
          opts.body.data.removeMacros = false;
          opts.body.data.scanNewAgents = false;
          opts.body.data.snapshotsOn = false;
          opts.body.data.engines = new S1MgmtApi.SitesSitePutSchemaDataPolicyEngines();
          opts.body.data.engines.lateralMovement = "on";
          opts.body.data.engines.preExecutionSuspicious = "on";
          opts.body.data.engines.preExecution = "on";
          opts.body.data.engines.dataFiles = "on";
          opts.body.data.engines.pup = "on";
          opts.body.data.engines.executables = "on";
          opts.body.data.engines.penetration = "on";
          opts.body.data.engines.applicationControl = "on";
          opts.body.data.engines.reputation = "on";
          opts.body.data.engines.exploits = "on";
          opts.body.data.engines.remoteShell = "on";
          opts.body.data.remoteOpsForensics = new S1MgmtApi.SitesSitePutSchemaDataPolicyRemoteOpsForensics();
          opts.body.data.remoteOpsForensics.parsedArtifactsDestination = "local";
          opts.body.data.remoteOpsForensics.maximumFileSizeUpload = "0";
          opts.body.data.remoteOpsForensics.maximumDailyUpload = "0";
          opts.body.data.remoteOpsForensics.maximumFileSizeUploadLimit = "0";
          opts.body.data.remoteOpsForensics.enabled = false;
          opts.body.data.remoteOpsForensics.cpuLimit = 0;
          opts.body.data.remoteOpsForensics.maximumDailyUploadLimit = "0";
          opts.body.data.forensicsAutoTriggering = new S1MgmtApi.SitesSitePutSchemaDataPolicyForensicsAutoTriggering();
          opts.body.data.forensicsAutoTriggering.windowsProfileId = "";
          opts.body.data.forensicsAutoTriggering.linuxEnabled = false;
          opts.body.data.forensicsAutoTriggering.macosProfileName = "";
          opts.body.data.forensicsAutoTriggering.macosProfileId = "";
          opts.body.data.forensicsAutoTriggering.windowsProfileName = "";
          opts.body.data.forensicsAutoTriggering.linuxProfileName = "";
          opts.body.data.forensicsAutoTriggering.windowsEnabled = false;
          opts.body.data.forensicsAutoTriggering.linuxProfileId = "";
          opts.body.data.forensicsAutoTriggering.macosEnabled = false;
          opts.body.data.identityOn = false;
          opts.body.data.cloudValidationOn = ;
          opts.body.data.autoImmuneOn = false;
          opts.body.data.agentNotification = false;
          opts.body.data.createdAt = 2018-02-27T04:49:26.257525Z;
          opts.body.data.networkQuarantineOn = false;
          opts.body.data.autoDecommissionDays = 0;
          opts.body.data.remoteScriptOrchestration = new S1MgmtApi.SitesSitePutSchemaDataPolicyRemoteScriptOrchestration();
          opts.body.data.remoteScriptOrchestration.alwaysUploadStreamToCloud = false;
          opts.body.data.remoteScriptOrchestration.maxLocalPackageDiskUsageLimit = "0";
          opts.body.data.remoteScriptOrchestration.maxDailyFileUploadLimit = "0";
          opts.body.data.remoteScriptOrchestration.maxLocalPackageDiskUsage = "0";
          opts.body.data.remoteScriptOrchestration.maxDailyFileDownloadLimit = "0";
          opts.body.data.remoteScriptOrchestration.maxFileSizeLimit = "0";
          opts.body.data.remoteScriptOrchestration.maxDailyFileDownload = "0";
          opts.body.data.remoteScriptOrchestration.maxFileSize = "0";
          opts.body.data.remoteScriptOrchestration.maxDailyFileUpload = "0";
          opts.body.data.autoDecommissionOn = false;
          opts.body.data.dvAttributesPerEventType = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventType();
          opts.body.data.dvAttributesPerEventType.smartFileMonitoring = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeSmartFileMonitoring();
          opts.body.data.dvAttributesPerEventType.smartFileMonitoring.smartFileMonitoring = false;
          opts.body.data.dvAttributesPerEventType.windowsEventLogs = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeWindowsEventLogs();
          opts.body.data.dvAttributesPerEventType.windowsEventLogs.dvEventTypeWindowsEventLogCreation = false;
          opts.body.data.dvAttributesPerEventType.autoInstallBrowserExtensions = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeAutoInstallBrowserExtensions();
          opts.body.data.dvAttributesPerEventType.autoInstallBrowserExtensions.autoInstallBrowserExtensions = false;
          opts.body.data.dvAttributesPerEventType.dataMasking = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDataMasking();
          opts.body.data.dvAttributesPerEventType.dataMasking.dataMasking = false;
          opts.body.data.dvAttributesPerEventType.dllModuleLoad = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDllModuleLoad();
          opts.body.data.dvAttributesPerEventType.dllModuleLoad.dvEventTypeDllModuleLoad = false;
          opts.body.data.dvAttributesPerEventType.dns = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDns();
          opts.body.data.dvAttributesPerEventType.dns.dvEventTypeDns = false;
          opts.body.data.dvAttributesPerEventType.crossProcess = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeCrossProcess();
          opts.body.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessOpenProcess = false;
          opts.body.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessRemoteThread = false;
          opts.body.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateProcess = false;
          opts.body.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateThread = false;
          opts.body.data.dvAttributesPerEventType.registry = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeRegistry();
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeySecurityChanged = false;
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueDeleted = false;
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueModified = false;
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyRename = false;
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyCreated = false;
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueCreated = false;
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyImport = false;
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyDelete = false;
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyExport = false;
          opts.body.data.dvAttributesPerEventType.driver = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDriver();
          opts.body.data.dvAttributesPerEventType.driver.dvEventTypeDriverLoad = false;
          opts.body.data.dvAttributesPerEventType.windowsEventLogsExtended = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeWindowsEventLogsExtended();
          opts.body.data.dvAttributesPerEventType.windowsEventLogsExtended.windowsEventLogsExtended = false;
          opts.body.data.dvAttributesPerEventType.file = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeFile();
          opts.body.data.dvAttributesPerEventType.file.dvEventTypeFileModification = false;
          opts.body.data.dvAttributesPerEventType.file.dvEventTypeFileCreation = false;
          opts.body.data.dvAttributesPerEventType.file.dvEventTypeFileRename = false;
          opts.body.data.dvAttributesPerEventType.file.dvEventTypeFileDeletion = false;
          opts.body.data.dvAttributesPerEventType.file.fullDiskScan = false;
          opts.body.data.dvAttributesPerEventType.namedPipeExtended = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeNamedPipeExtended();
          opts.body.data.dvAttributesPerEventType.namedPipeExtended.namedPipeExtended = false;
          opts.body.data.dvAttributesPerEventType.url = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeUrl();
          opts.body.data.dvAttributesPerEventType.url.dvEventTypeUrl = false;
          opts.body.data.dvAttributesPerEventType.behavioralIndicators = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeBehavioralIndicators();
          opts.body.data.dvAttributesPerEventType.behavioralIndicators.dvEventTypeBehavioralIndicators = false;
          opts.body.data.dvAttributesPerEventType.process = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeProcess();
          opts.body.data.dvAttributesPerEventType.process.dvEventTypeProcessModification = false;
          opts.body.data.dvAttributesPerEventType.process.dvEventTypeProcessExit = false;
          opts.body.data.dvAttributesPerEventType.process.dvEventTypeProcessCreation = false;
          opts.body.data.dvAttributesPerEventType.commandScripts = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeCommandScripts();
          opts.body.data.dvAttributesPerEventType.commandScripts.dvEventTypeCommandScripts = false;
          opts.body.data.dvAttributesPerEventType.namedPipe = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeNamedPipe();
          opts.body.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeConnection = false;
          opts.body.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeCreation = false;
          opts.body.data.dvAttributesPerEventType.ip = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeIp();
          opts.body.data.dvAttributesPerEventType.ip.dvEventTypeIpConnect = false;
          opts.body.data.dvAttributesPerEventType.ip.dvEventTypeIpListen = false;
          opts.body.data.dvAttributesPerEventType.login = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeLogin();
          opts.body.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedOut = false;
          opts.body.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedIn = false;
          opts.body.data.dvAttributesPerEventType.scheduledTask = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeScheduledTask();
          opts.body.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskDelete = false;
          opts.body.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskUpdate = false;
          opts.body.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskRegister = false;
          opts.body.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskTrigger = false;
          opts.body.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskStart = false;

          instance.webApiSitessiteIdPolicyPut(siteId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(S1MgmtApi.PoliciesSchemasEnrichedPolicySchema200);
            {
              let dataCtr = data.errors;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a(Object);
                expect(data).to.be();
              }
            }
            expect(data.data).to.be.a(S1MgmtApi.PoliciesSchemasEnrichedPolicySchema200Data);
                  expect(data.data.autoMitigationAction).to.be.a('string');
              expect(data.data.autoMitigationAction).to.be("");
              expect(data.data.mitigationMode).to.be.a('string');
              expect(data.data.mitigationMode).to.be("detect");
              expect(data.data.iocAttributes).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyIocAttributes);
                    expect(data.data.iocAttributes.smartFileMonitoring).to.be.a('boolean');
                expect(data.data.iocAttributes.smartFileMonitoring).to.be(false);
                expect(data.data.iocAttributes.windowsEventLogs).to.be.a('boolean');
                expect(data.data.iocAttributes.windowsEventLogs).to.be(false);
                expect(data.data.iocAttributes.autoInstallBrowserExtensions).to.be.a('boolean');
                expect(data.data.iocAttributes.autoInstallBrowserExtensions).to.be(false);
                expect(data.data.iocAttributes.dataMasking).to.be.a('boolean');
                expect(data.data.iocAttributes.dataMasking).to.be(false);
                expect(data.data.iocAttributes.dllModuleLoad).to.be.a('boolean');
                expect(data.data.iocAttributes.dllModuleLoad).to.be(false);
                expect(data.data.iocAttributes.dns).to.be.a('boolean');
                expect(data.data.iocAttributes.dns).to.be(false);
                expect(data.data.iocAttributes.crossProcess).to.be.a('boolean');
                expect(data.data.iocAttributes.crossProcess).to.be(false);
                expect(data.data.iocAttributes.registry).to.be.a('boolean');
                expect(data.data.iocAttributes.registry).to.be(false);
                expect(data.data.iocAttributes.driver).to.be.a('boolean');
                expect(data.data.iocAttributes.driver).to.be(false);
                expect(data.data.iocAttributes.fds).to.be.a('boolean');
                expect(data.data.iocAttributes.fds).to.be(false);
                expect(data.data.iocAttributes.windowsEventLogsExtended).to.be.a('boolean');
                expect(data.data.iocAttributes.windowsEventLogsExtended).to.be(false);
                expect(data.data.iocAttributes.file).to.be.a('boolean');
                expect(data.data.iocAttributes.file).to.be(false);
                expect(data.data.iocAttributes.namedPipeExtended).to.be.a('boolean');
                expect(data.data.iocAttributes.namedPipeExtended).to.be(false);
                expect(data.data.iocAttributes.url).to.be.a('boolean');
                expect(data.data.iocAttributes.url).to.be(false);
                expect(data.data.iocAttributes.behavioralIndicators).to.be.a('boolean');
                expect(data.data.iocAttributes.behavioralIndicators).to.be(false);
                expect(data.data.iocAttributes.process).to.be.a('boolean');
                expect(data.data.iocAttributes.process).to.be(false);
                expect(data.data.iocAttributes.commandScripts).to.be.a('boolean');
                expect(data.data.iocAttributes.commandScripts).to.be(false);
                expect(data.data.iocAttributes.namedPipe).to.be.a('boolean');
                expect(data.data.iocAttributes.namedPipe).to.be(false);
                expect(data.data.iocAttributes.ip).to.be.a('boolean');
                expect(data.data.iocAttributes.ip).to.be(false);
                expect(data.data.iocAttributes.login).to.be.a('boolean');
                expect(data.data.iocAttributes.login).to.be(false);
                expect(data.data.iocAttributes.scheduledTask).to.be.a('boolean');
                expect(data.data.iocAttributes.scheduledTask).to.be(false);
              expect(data.data.fwForNetworkQuarantineEnabled).to.be.a('boolean');
              expect(data.data.fwForNetworkQuarantineEnabled).to.be(false);
              expect(data.data.researchOn).to.be.a('boolean');
              expect(data.data.researchOn).to.be(false);
              expect(data.data.autoFileUpload).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyAutoFileUpload);
                    expect(data.data.autoFileUpload.maxDailyFileUploadLimit).to.be.a('number');
                expect(data.data.autoFileUpload.maxDailyFileUploadLimit).to.be(0);
                expect(data.data.autoFileUpload.includeBenignFiles).to.be.a('boolean');
                expect(data.data.autoFileUpload.includeBenignFiles).to.be(false);
                expect(data.data.autoFileUpload.maxLocalDiskUsageLimit).to.be.a('number');
                expect(data.data.autoFileUpload.maxLocalDiskUsageLimit).to.be(0);
                expect(data.data.autoFileUpload.maxLocalDiskUsage).to.be.a('number');
                expect(data.data.autoFileUpload.maxLocalDiskUsage).to.be(0);
                expect(data.data.autoFileUpload.enabled).to.be.a('boolean');
                expect(data.data.autoFileUpload.enabled).to.be(false);
                expect(data.data.autoFileUpload.maxFileSizeLimit).to.be.a('number');
                expect(data.data.autoFileUpload.maxFileSizeLimit).to.be(0);
                expect(data.data.autoFileUpload.maxFileSize).to.be.a('number');
                expect(data.data.autoFileUpload.maxFileSize).to.be(0);
                expect(data.data.autoFileUpload.maxDailyFileUpload).to.be.a('number');
                expect(data.data.autoFileUpload.maxDailyFileUpload).to.be(0);
              expect(data.data.mitigationModeSuspicious).to.be.a('string');
              expect(data.data.mitigationModeSuspicious).to.be("detect");
              expect(data.data.updatedAt).to.be.a(Date);
              expect(data.data.updatedAt).to.be(2018-02-27T04:49:26.257525Z);
              expect(data.data.antiTamperingOn).to.be.a('boolean');
              expect(data.data.antiTamperingOn).to.be(false);
              expect(data.data.identityReportInterval).to.be.a('number');
              expect(data.data.identityReportInterval).to.be(0);
              expect(data.data.monitorOnExecute).to.be.a('boolean');
              expect(data.data.monitorOnExecute).to.be(false);
              expect(data.data.userId).to.be.a('string');
              expect(data.data.userId).to.be("225494730938493804");
              expect(data.data.driverBlocking).to.be.a('boolean');
              expect(data.data.driverBlocking).to.be(false);
              expect(data.data.identityEndpointReporting).to.be.a('string');
              expect(data.data.identityEndpointReporting).to.be("disabled");
              expect(data.data.isDefault).to.be.a('boolean');
              expect(data.data.isDefault).to.be(false);
              expect(data.data.ioc).to.be.a('boolean');
              expect(data.data.ioc).to.be(false);
              expect(data.data.agentUiOn).to.be.a('boolean');
              expect(data.data.agentUiOn).to.be(false);
              expect(data.data.inheritedFrom).to.be.a('string');
              expect(data.data.inheritedFrom).to.be("site");
              expect(data.data.monitorOnWrite).to.be.a('boolean');
              expect(data.data.monitorOnWrite).to.be(false);
              expect(data.data.identityUpdateInterval).to.be.a('number');
              expect(data.data.identityUpdateInterval).to.be(0);
              expect(data.data.iocSupported).to.be.a('boolean');
              expect(data.data.iocSupported).to.be(false);
              expect(data.data.identityThrottlingInterval).to.be.a('number');
              expect(data.data.identityThrottlingInterval).to.be(0);
              expect(data.data.agentLoggingOn).to.be.a('boolean');
              expect(data.data.agentLoggingOn).to.be(false);
              expect(data.data.unsignedDriverBlockingOn).to.be.a('boolean');
              expect(data.data.unsignedDriverBlockingOn).to.be(false);
              expect(data.data.agentUi).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyAgentUi);
                    expect(data.data.agentUi.threatPopUpNotifications).to.be.a('boolean');
                expect(data.data.agentUi.threatPopUpNotifications).to.be(false);
                expect(data.data.agentUi.contactFreeText).to.be.a('string');
                expect(data.data.agentUi.contactFreeText).to.be("");
                expect(data.data.agentUi.contactEmail).to.be.a('string');
                expect(data.data.agentUi.contactEmail).to.be("");
                expect(data.data.agentUi.maxEventAgeDays).to.be.a('number');
                expect(data.data.agentUi.maxEventAgeDays).to.be(0);
                expect(data.data.agentUi.showAgentWarnings).to.be.a('boolean');
                expect(data.data.agentUi.showAgentWarnings).to.be(false);
                expect(data.data.agentUi.contactPhoneNumber).to.be.a('string');
                expect(data.data.agentUi.contactPhoneNumber).to.be("");
                expect(data.data.agentUi.showDeviceTab).to.be.a('boolean');
                expect(data.data.agentUi.showDeviceTab).to.be(false);
                expect(data.data.agentUi.devicePopUpNotifications).to.be.a('boolean');
                expect(data.data.agentUi.devicePopUpNotifications).to.be(false);
                expect(data.data.agentUi.showSupport).to.be.a('boolean');
                expect(data.data.agentUi.showSupport).to.be(false);
                expect(data.data.agentUi.showQuarantineTab).to.be.a('boolean');
                expect(data.data.agentUi.showQuarantineTab).to.be(false);
                expect(data.data.agentUi.contactCompany).to.be.a('string');
                expect(data.data.agentUi.contactCompany).to.be("");
                expect(data.data.agentUi.showSuspicious).to.be.a('boolean');
                expect(data.data.agentUi.showSuspicious).to.be(false);
                expect(data.data.agentUi.contactOther).to.be.a('string');
                expect(data.data.agentUi.contactOther).to.be("");
                expect(data.data.agentUi.contactDirectMessage).to.be.a('string');
                expect(data.data.agentUi.contactDirectMessage).to.be("");
                expect(data.data.agentUi.contactSupportWebsite).to.be.a('string');
                expect(data.data.agentUi.contactSupportWebsite).to.be("");
                expect(data.data.agentUi.agentUiOn).to.be.a('boolean');
                expect(data.data.agentUi.agentUiOn).to.be(false);
              expect(data.data.userFullName).to.be.a('string');
              expect(data.data.userFullName).to.be("");
              expect(data.data.signedDriverBlockingOn).to.be.a('boolean');
              expect(data.data.signedDriverBlockingOn).to.be(false);
              expect(data.data.allowRemoteShell).to.be.a('boolean');
              expect(data.data.allowRemoteShell).to.be(false);
              expect(data.data.isDvPolicyPerEventType).to.be.a('boolean');
              expect(data.data.isDvPolicyPerEventType).to.be(false);
              expect(data.data.removeMacros).to.be.a('boolean');
              expect(data.data.removeMacros).to.be(false);
              expect(data.data.scanNewAgents).to.be.a('boolean');
              expect(data.data.scanNewAgents).to.be(false);
              expect(data.data.snapshotsOn).to.be.a('boolean');
              expect(data.data.snapshotsOn).to.be(false);
              expect(data.data.engines).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyEngines);
                    expect(data.data.engines.lateralMovement).to.be.a('string');
                expect(data.data.engines.lateralMovement).to.be("on");
                expect(data.data.engines.preExecutionSuspicious).to.be.a('string');
                expect(data.data.engines.preExecutionSuspicious).to.be("on");
                expect(data.data.engines.preExecution).to.be.a('string');
                expect(data.data.engines.preExecution).to.be("on");
                expect(data.data.engines.dataFiles).to.be.a('string');
                expect(data.data.engines.dataFiles).to.be("on");
                expect(data.data.engines.pup).to.be.a('string');
                expect(data.data.engines.pup).to.be("on");
                expect(data.data.engines.executables).to.be.a('string');
                expect(data.data.engines.executables).to.be("on");
                expect(data.data.engines.penetration).to.be.a('string');
                expect(data.data.engines.penetration).to.be("on");
                expect(data.data.engines.applicationControl).to.be.a('string');
                expect(data.data.engines.applicationControl).to.be("on");
                expect(data.data.engines.reputation).to.be.a('string');
                expect(data.data.engines.reputation).to.be("on");
                expect(data.data.engines.exploits).to.be.a('string');
                expect(data.data.engines.exploits).to.be("on");
                expect(data.data.engines.remoteShell).to.be.a('string');
                expect(data.data.engines.remoteShell).to.be("on");
              expect(data.data.remoteOpsForensics).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyRemoteOpsForensics);
                    expect(data.data.remoteOpsForensics.parsedArtifactsDestination).to.be.a('string');
                expect(data.data.remoteOpsForensics.parsedArtifactsDestination).to.be("local");
                expect(data.data.remoteOpsForensics.maximumFileSizeUpload).to.be.a('number');
                expect(data.data.remoteOpsForensics.maximumFileSizeUpload).to.be("0");
                expect(data.data.remoteOpsForensics.maximumDailyUpload).to.be.a('number');
                expect(data.data.remoteOpsForensics.maximumDailyUpload).to.be("0");
                expect(data.data.remoteOpsForensics.maximumFileSizeUploadLimit).to.be.a('number');
                expect(data.data.remoteOpsForensics.maximumFileSizeUploadLimit).to.be("0");
                expect(data.data.remoteOpsForensics.enabled).to.be.a('boolean');
                expect(data.data.remoteOpsForensics.enabled).to.be(false);
                expect(data.data.remoteOpsForensics.cpuLimit).to.be.a('number');
                expect(data.data.remoteOpsForensics.cpuLimit).to.be(0);
                expect(data.data.remoteOpsForensics.maximumDailyUploadLimit).to.be.a('number');
                expect(data.data.remoteOpsForensics.maximumDailyUploadLimit).to.be("0");
              expect(data.data.forensicsAutoTriggering).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyForensicsAutoTriggering);
                    expect(data.data.forensicsAutoTriggering.windowsProfileId).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.windowsProfileId).to.be("");
                expect(data.data.forensicsAutoTriggering.linuxEnabled).to.be.a('boolean');
                expect(data.data.forensicsAutoTriggering.linuxEnabled).to.be(false);
                expect(data.data.forensicsAutoTriggering.macosProfileName).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.macosProfileName).to.be("");
                expect(data.data.forensicsAutoTriggering.macosProfileId).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.macosProfileId).to.be("");
                expect(data.data.forensicsAutoTriggering.windowsProfileName).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.windowsProfileName).to.be("");
                expect(data.data.forensicsAutoTriggering.linuxProfileName).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.linuxProfileName).to.be("");
                expect(data.data.forensicsAutoTriggering.windowsEnabled).to.be.a('boolean');
                expect(data.data.forensicsAutoTriggering.windowsEnabled).to.be(false);
                expect(data.data.forensicsAutoTriggering.linuxProfileId).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.linuxProfileId).to.be("");
                expect(data.data.forensicsAutoTriggering.macosEnabled).to.be.a('boolean');
                expect(data.data.forensicsAutoTriggering.macosEnabled).to.be(false);
              expect(data.data.identityOn).to.be.a('boolean');
              expect(data.data.identityOn).to.be(false);
              expect(data.data.cloudValidationOn).to.be.a(Object);
              expect(data.data.cloudValidationOn).to.be();
              expect(data.data.autoImmuneOn).to.be.a('boolean');
              expect(data.data.autoImmuneOn).to.be(false);
              expect(data.data.agentNotification).to.be.a('boolean');
              expect(data.data.agentNotification).to.be(false);
              expect(data.data.createdAt).to.be.a(Date);
              expect(data.data.createdAt).to.be(2018-02-27T04:49:26.257525Z);
              expect(data.data.networkQuarantineOn).to.be.a('boolean');
              expect(data.data.networkQuarantineOn).to.be(false);
              expect(data.data.autoDecommissionDays).to.be.a('number');
              expect(data.data.autoDecommissionDays).to.be(0);
              expect(data.data.remoteScriptOrchestration).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyRemoteScriptOrchestration);
                    expect(data.data.remoteScriptOrchestration.alwaysUploadStreamToCloud).to.be.a('boolean');
                expect(data.data.remoteScriptOrchestration.alwaysUploadStreamToCloud).to.be(false);
                expect(data.data.remoteScriptOrchestration.maxLocalPackageDiskUsageLimit).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxLocalPackageDiskUsageLimit).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxDailyFileUploadLimit).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxDailyFileUploadLimit).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxLocalPackageDiskUsage).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxLocalPackageDiskUsage).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxDailyFileDownloadLimit).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxDailyFileDownloadLimit).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxFileSizeLimit).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxFileSizeLimit).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxDailyFileDownload).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxDailyFileDownload).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxFileSize).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxFileSize).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxDailyFileUpload).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxDailyFileUpload).to.be("0");
              expect(data.data.autoDecommissionOn).to.be.a('boolean');
              expect(data.data.autoDecommissionOn).to.be(false);
              expect(data.data.dvAttributesPerEventType).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventType);
                    expect(data.data.dvAttributesPerEventType.smartFileMonitoring).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeSmartFileMonitoring);
                      expect(data.data.dvAttributesPerEventType.smartFileMonitoring.smartFileMonitoring).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.smartFileMonitoring.smartFileMonitoring).to.be(false);
                expect(data.data.dvAttributesPerEventType.windowsEventLogs).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeWindowsEventLogs);
                      expect(data.data.dvAttributesPerEventType.windowsEventLogs.dvEventTypeWindowsEventLogCreation).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.windowsEventLogs.dvEventTypeWindowsEventLogCreation).to.be(false);
                expect(data.data.dvAttributesPerEventType.autoInstallBrowserExtensions).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeAutoInstallBrowserExtensions);
                      expect(data.data.dvAttributesPerEventType.autoInstallBrowserExtensions.autoInstallBrowserExtensions).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.autoInstallBrowserExtensions.autoInstallBrowserExtensions).to.be(false);
                expect(data.data.dvAttributesPerEventType.dataMasking).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDataMasking);
                      expect(data.data.dvAttributesPerEventType.dataMasking.dataMasking).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.dataMasking.dataMasking).to.be(false);
                expect(data.data.dvAttributesPerEventType.dllModuleLoad).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDllModuleLoad);
                      expect(data.data.dvAttributesPerEventType.dllModuleLoad.dvEventTypeDllModuleLoad).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.dllModuleLoad.dvEventTypeDllModuleLoad).to.be(false);
                expect(data.data.dvAttributesPerEventType.dns).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDns);
                      expect(data.data.dvAttributesPerEventType.dns.dvEventTypeDns).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.dns.dvEventTypeDns).to.be(false);
                expect(data.data.dvAttributesPerEventType.crossProcess).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeCrossProcess);
                      expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessOpenProcess).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessOpenProcess).to.be(false);
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessRemoteThread).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessRemoteThread).to.be(false);
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateProcess).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateProcess).to.be(false);
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateThread).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateThread).to.be(false);
                expect(data.data.dvAttributesPerEventType.registry).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeRegistry);
                      expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeySecurityChanged).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeySecurityChanged).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueDeleted).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueDeleted).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueModified).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueModified).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyRename).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyRename).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyCreated).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyCreated).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueCreated).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueCreated).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyImport).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyImport).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyDelete).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyDelete).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyExport).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyExport).to.be(false);
                expect(data.data.dvAttributesPerEventType.driver).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDriver);
                      expect(data.data.dvAttributesPerEventType.driver.dvEventTypeDriverLoad).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.driver.dvEventTypeDriverLoad).to.be(false);
                expect(data.data.dvAttributesPerEventType.windowsEventLogsExtended).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeWindowsEventLogsExtended);
                      expect(data.data.dvAttributesPerEventType.windowsEventLogsExtended.windowsEventLogsExtended).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.windowsEventLogsExtended.windowsEventLogsExtended).to.be(false);
                expect(data.data.dvAttributesPerEventType.file).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeFile);
                      expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileModification).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileModification).to.be(false);
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileCreation).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileCreation).to.be(false);
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileRename).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileRename).to.be(false);
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileDeletion).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileDeletion).to.be(false);
                  expect(data.data.dvAttributesPerEventType.file.fullDiskScan).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.fullDiskScan).to.be(false);
                expect(data.data.dvAttributesPerEventType.namedPipeExtended).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeNamedPipeExtended);
                      expect(data.data.dvAttributesPerEventType.namedPipeExtended.namedPipeExtended).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.namedPipeExtended.namedPipeExtended).to.be(false);
                expect(data.data.dvAttributesPerEventType.url).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeUrl);
                      expect(data.data.dvAttributesPerEventType.url.dvEventTypeUrl).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.url.dvEventTypeUrl).to.be(false);
                expect(data.data.dvAttributesPerEventType.behavioralIndicators).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeBehavioralIndicators);
                      expect(data.data.dvAttributesPerEventType.behavioralIndicators.dvEventTypeBehavioralIndicators).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.behavioralIndicators.dvEventTypeBehavioralIndicators).to.be(false);
                expect(data.data.dvAttributesPerEventType.process).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeProcess);
                      expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessModification).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessModification).to.be(false);
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessExit).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessExit).to.be(false);
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessCreation).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessCreation).to.be(false);
                expect(data.data.dvAttributesPerEventType.commandScripts).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeCommandScripts);
                      expect(data.data.dvAttributesPerEventType.commandScripts.dvEventTypeCommandScripts).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.commandScripts.dvEventTypeCommandScripts).to.be(false);
                expect(data.data.dvAttributesPerEventType.namedPipe).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeNamedPipe);
                      expect(data.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeConnection).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeConnection).to.be(false);
                  expect(data.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeCreation).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeCreation).to.be(false);
                expect(data.data.dvAttributesPerEventType.ip).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeIp);
                      expect(data.data.dvAttributesPerEventType.ip.dvEventTypeIpConnect).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.ip.dvEventTypeIpConnect).to.be(false);
                  expect(data.data.dvAttributesPerEventType.ip.dvEventTypeIpListen).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.ip.dvEventTypeIpListen).to.be(false);
                expect(data.data.dvAttributesPerEventType.login).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeLogin);
                      expect(data.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedOut).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedOut).to.be(false);
                  expect(data.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedIn).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedIn).to.be(false);
                expect(data.data.dvAttributesPerEventType.scheduledTask).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeScheduledTask);
                      expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskDelete).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskDelete).to.be(false);
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskUpdate).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskUpdate).to.be(false);
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskRegister).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskRegister).to.be(false);
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskTrigger).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskTrigger).to.be(false);
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskStart).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskStart).to.be(false);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('webApiTenantPolicyGet', function() {
        it('should call webApiTenantPolicyGet successfully', function(done) {
          // TODO: uncomment webApiTenantPolicyGet call and complete the assertions
          /*

          instance.webApiTenantPolicyGet(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(S1MgmtApi.PoliciesSchemasEnrichedPolicySchema200);
            {
              let dataCtr = data.errors;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a(Object);
                expect(data).to.be();
              }
            }
            expect(data.data).to.be.a(S1MgmtApi.PoliciesSchemasEnrichedPolicySchema200Data);
                  expect(data.data.autoMitigationAction).to.be.a('string');
              expect(data.data.autoMitigationAction).to.be("");
              expect(data.data.mitigationMode).to.be.a('string');
              expect(data.data.mitigationMode).to.be("detect");
              expect(data.data.iocAttributes).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyIocAttributes);
                    expect(data.data.iocAttributes.smartFileMonitoring).to.be.a('boolean');
                expect(data.data.iocAttributes.smartFileMonitoring).to.be(false);
                expect(data.data.iocAttributes.windowsEventLogs).to.be.a('boolean');
                expect(data.data.iocAttributes.windowsEventLogs).to.be(false);
                expect(data.data.iocAttributes.autoInstallBrowserExtensions).to.be.a('boolean');
                expect(data.data.iocAttributes.autoInstallBrowserExtensions).to.be(false);
                expect(data.data.iocAttributes.dataMasking).to.be.a('boolean');
                expect(data.data.iocAttributes.dataMasking).to.be(false);
                expect(data.data.iocAttributes.dllModuleLoad).to.be.a('boolean');
                expect(data.data.iocAttributes.dllModuleLoad).to.be(false);
                expect(data.data.iocAttributes.dns).to.be.a('boolean');
                expect(data.data.iocAttributes.dns).to.be(false);
                expect(data.data.iocAttributes.crossProcess).to.be.a('boolean');
                expect(data.data.iocAttributes.crossProcess).to.be(false);
                expect(data.data.iocAttributes.registry).to.be.a('boolean');
                expect(data.data.iocAttributes.registry).to.be(false);
                expect(data.data.iocAttributes.driver).to.be.a('boolean');
                expect(data.data.iocAttributes.driver).to.be(false);
                expect(data.data.iocAttributes.fds).to.be.a('boolean');
                expect(data.data.iocAttributes.fds).to.be(false);
                expect(data.data.iocAttributes.windowsEventLogsExtended).to.be.a('boolean');
                expect(data.data.iocAttributes.windowsEventLogsExtended).to.be(false);
                expect(data.data.iocAttributes.file).to.be.a('boolean');
                expect(data.data.iocAttributes.file).to.be(false);
                expect(data.data.iocAttributes.namedPipeExtended).to.be.a('boolean');
                expect(data.data.iocAttributes.namedPipeExtended).to.be(false);
                expect(data.data.iocAttributes.url).to.be.a('boolean');
                expect(data.data.iocAttributes.url).to.be(false);
                expect(data.data.iocAttributes.behavioralIndicators).to.be.a('boolean');
                expect(data.data.iocAttributes.behavioralIndicators).to.be(false);
                expect(data.data.iocAttributes.process).to.be.a('boolean');
                expect(data.data.iocAttributes.process).to.be(false);
                expect(data.data.iocAttributes.commandScripts).to.be.a('boolean');
                expect(data.data.iocAttributes.commandScripts).to.be(false);
                expect(data.data.iocAttributes.namedPipe).to.be.a('boolean');
                expect(data.data.iocAttributes.namedPipe).to.be(false);
                expect(data.data.iocAttributes.ip).to.be.a('boolean');
                expect(data.data.iocAttributes.ip).to.be(false);
                expect(data.data.iocAttributes.login).to.be.a('boolean');
                expect(data.data.iocAttributes.login).to.be(false);
                expect(data.data.iocAttributes.scheduledTask).to.be.a('boolean');
                expect(data.data.iocAttributes.scheduledTask).to.be(false);
              expect(data.data.fwForNetworkQuarantineEnabled).to.be.a('boolean');
              expect(data.data.fwForNetworkQuarantineEnabled).to.be(false);
              expect(data.data.researchOn).to.be.a('boolean');
              expect(data.data.researchOn).to.be(false);
              expect(data.data.autoFileUpload).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyAutoFileUpload);
                    expect(data.data.autoFileUpload.maxDailyFileUploadLimit).to.be.a('number');
                expect(data.data.autoFileUpload.maxDailyFileUploadLimit).to.be(0);
                expect(data.data.autoFileUpload.includeBenignFiles).to.be.a('boolean');
                expect(data.data.autoFileUpload.includeBenignFiles).to.be(false);
                expect(data.data.autoFileUpload.maxLocalDiskUsageLimit).to.be.a('number');
                expect(data.data.autoFileUpload.maxLocalDiskUsageLimit).to.be(0);
                expect(data.data.autoFileUpload.maxLocalDiskUsage).to.be.a('number');
                expect(data.data.autoFileUpload.maxLocalDiskUsage).to.be(0);
                expect(data.data.autoFileUpload.enabled).to.be.a('boolean');
                expect(data.data.autoFileUpload.enabled).to.be(false);
                expect(data.data.autoFileUpload.maxFileSizeLimit).to.be.a('number');
                expect(data.data.autoFileUpload.maxFileSizeLimit).to.be(0);
                expect(data.data.autoFileUpload.maxFileSize).to.be.a('number');
                expect(data.data.autoFileUpload.maxFileSize).to.be(0);
                expect(data.data.autoFileUpload.maxDailyFileUpload).to.be.a('number');
                expect(data.data.autoFileUpload.maxDailyFileUpload).to.be(0);
              expect(data.data.mitigationModeSuspicious).to.be.a('string');
              expect(data.data.mitigationModeSuspicious).to.be("detect");
              expect(data.data.updatedAt).to.be.a(Date);
              expect(data.data.updatedAt).to.be(2018-02-27T04:49:26.257525Z);
              expect(data.data.antiTamperingOn).to.be.a('boolean');
              expect(data.data.antiTamperingOn).to.be(false);
              expect(data.data.identityReportInterval).to.be.a('number');
              expect(data.data.identityReportInterval).to.be(0);
              expect(data.data.monitorOnExecute).to.be.a('boolean');
              expect(data.data.monitorOnExecute).to.be(false);
              expect(data.data.userId).to.be.a('string');
              expect(data.data.userId).to.be("225494730938493804");
              expect(data.data.driverBlocking).to.be.a('boolean');
              expect(data.data.driverBlocking).to.be(false);
              expect(data.data.identityEndpointReporting).to.be.a('string');
              expect(data.data.identityEndpointReporting).to.be("disabled");
              expect(data.data.isDefault).to.be.a('boolean');
              expect(data.data.isDefault).to.be(false);
              expect(data.data.ioc).to.be.a('boolean');
              expect(data.data.ioc).to.be(false);
              expect(data.data.agentUiOn).to.be.a('boolean');
              expect(data.data.agentUiOn).to.be(false);
              expect(data.data.inheritedFrom).to.be.a('string');
              expect(data.data.inheritedFrom).to.be("site");
              expect(data.data.monitorOnWrite).to.be.a('boolean');
              expect(data.data.monitorOnWrite).to.be(false);
              expect(data.data.identityUpdateInterval).to.be.a('number');
              expect(data.data.identityUpdateInterval).to.be(0);
              expect(data.data.iocSupported).to.be.a('boolean');
              expect(data.data.iocSupported).to.be(false);
              expect(data.data.identityThrottlingInterval).to.be.a('number');
              expect(data.data.identityThrottlingInterval).to.be(0);
              expect(data.data.agentLoggingOn).to.be.a('boolean');
              expect(data.data.agentLoggingOn).to.be(false);
              expect(data.data.unsignedDriverBlockingOn).to.be.a('boolean');
              expect(data.data.unsignedDriverBlockingOn).to.be(false);
              expect(data.data.agentUi).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyAgentUi);
                    expect(data.data.agentUi.threatPopUpNotifications).to.be.a('boolean');
                expect(data.data.agentUi.threatPopUpNotifications).to.be(false);
                expect(data.data.agentUi.contactFreeText).to.be.a('string');
                expect(data.data.agentUi.contactFreeText).to.be("");
                expect(data.data.agentUi.contactEmail).to.be.a('string');
                expect(data.data.agentUi.contactEmail).to.be("");
                expect(data.data.agentUi.maxEventAgeDays).to.be.a('number');
                expect(data.data.agentUi.maxEventAgeDays).to.be(0);
                expect(data.data.agentUi.showAgentWarnings).to.be.a('boolean');
                expect(data.data.agentUi.showAgentWarnings).to.be(false);
                expect(data.data.agentUi.contactPhoneNumber).to.be.a('string');
                expect(data.data.agentUi.contactPhoneNumber).to.be("");
                expect(data.data.agentUi.showDeviceTab).to.be.a('boolean');
                expect(data.data.agentUi.showDeviceTab).to.be(false);
                expect(data.data.agentUi.devicePopUpNotifications).to.be.a('boolean');
                expect(data.data.agentUi.devicePopUpNotifications).to.be(false);
                expect(data.data.agentUi.showSupport).to.be.a('boolean');
                expect(data.data.agentUi.showSupport).to.be(false);
                expect(data.data.agentUi.showQuarantineTab).to.be.a('boolean');
                expect(data.data.agentUi.showQuarantineTab).to.be(false);
                expect(data.data.agentUi.contactCompany).to.be.a('string');
                expect(data.data.agentUi.contactCompany).to.be("");
                expect(data.data.agentUi.showSuspicious).to.be.a('boolean');
                expect(data.data.agentUi.showSuspicious).to.be(false);
                expect(data.data.agentUi.contactOther).to.be.a('string');
                expect(data.data.agentUi.contactOther).to.be("");
                expect(data.data.agentUi.contactDirectMessage).to.be.a('string');
                expect(data.data.agentUi.contactDirectMessage).to.be("");
                expect(data.data.agentUi.contactSupportWebsite).to.be.a('string');
                expect(data.data.agentUi.contactSupportWebsite).to.be("");
                expect(data.data.agentUi.agentUiOn).to.be.a('boolean');
                expect(data.data.agentUi.agentUiOn).to.be(false);
              expect(data.data.userFullName).to.be.a('string');
              expect(data.data.userFullName).to.be("");
              expect(data.data.signedDriverBlockingOn).to.be.a('boolean');
              expect(data.data.signedDriverBlockingOn).to.be(false);
              expect(data.data.allowRemoteShell).to.be.a('boolean');
              expect(data.data.allowRemoteShell).to.be(false);
              expect(data.data.isDvPolicyPerEventType).to.be.a('boolean');
              expect(data.data.isDvPolicyPerEventType).to.be(false);
              expect(data.data.removeMacros).to.be.a('boolean');
              expect(data.data.removeMacros).to.be(false);
              expect(data.data.scanNewAgents).to.be.a('boolean');
              expect(data.data.scanNewAgents).to.be(false);
              expect(data.data.snapshotsOn).to.be.a('boolean');
              expect(data.data.snapshotsOn).to.be(false);
              expect(data.data.engines).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyEngines);
                    expect(data.data.engines.lateralMovement).to.be.a('string');
                expect(data.data.engines.lateralMovement).to.be("on");
                expect(data.data.engines.preExecutionSuspicious).to.be.a('string');
                expect(data.data.engines.preExecutionSuspicious).to.be("on");
                expect(data.data.engines.preExecution).to.be.a('string');
                expect(data.data.engines.preExecution).to.be("on");
                expect(data.data.engines.dataFiles).to.be.a('string');
                expect(data.data.engines.dataFiles).to.be("on");
                expect(data.data.engines.pup).to.be.a('string');
                expect(data.data.engines.pup).to.be("on");
                expect(data.data.engines.executables).to.be.a('string');
                expect(data.data.engines.executables).to.be("on");
                expect(data.data.engines.penetration).to.be.a('string');
                expect(data.data.engines.penetration).to.be("on");
                expect(data.data.engines.applicationControl).to.be.a('string');
                expect(data.data.engines.applicationControl).to.be("on");
                expect(data.data.engines.reputation).to.be.a('string');
                expect(data.data.engines.reputation).to.be("on");
                expect(data.data.engines.exploits).to.be.a('string');
                expect(data.data.engines.exploits).to.be("on");
                expect(data.data.engines.remoteShell).to.be.a('string');
                expect(data.data.engines.remoteShell).to.be("on");
              expect(data.data.remoteOpsForensics).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyRemoteOpsForensics);
                    expect(data.data.remoteOpsForensics.parsedArtifactsDestination).to.be.a('string');
                expect(data.data.remoteOpsForensics.parsedArtifactsDestination).to.be("local");
                expect(data.data.remoteOpsForensics.maximumFileSizeUpload).to.be.a('number');
                expect(data.data.remoteOpsForensics.maximumFileSizeUpload).to.be("0");
                expect(data.data.remoteOpsForensics.maximumDailyUpload).to.be.a('number');
                expect(data.data.remoteOpsForensics.maximumDailyUpload).to.be("0");
                expect(data.data.remoteOpsForensics.maximumFileSizeUploadLimit).to.be.a('number');
                expect(data.data.remoteOpsForensics.maximumFileSizeUploadLimit).to.be("0");
                expect(data.data.remoteOpsForensics.enabled).to.be.a('boolean');
                expect(data.data.remoteOpsForensics.enabled).to.be(false);
                expect(data.data.remoteOpsForensics.cpuLimit).to.be.a('number');
                expect(data.data.remoteOpsForensics.cpuLimit).to.be(0);
                expect(data.data.remoteOpsForensics.maximumDailyUploadLimit).to.be.a('number');
                expect(data.data.remoteOpsForensics.maximumDailyUploadLimit).to.be("0");
              expect(data.data.forensicsAutoTriggering).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyForensicsAutoTriggering);
                    expect(data.data.forensicsAutoTriggering.windowsProfileId).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.windowsProfileId).to.be("");
                expect(data.data.forensicsAutoTriggering.linuxEnabled).to.be.a('boolean');
                expect(data.data.forensicsAutoTriggering.linuxEnabled).to.be(false);
                expect(data.data.forensicsAutoTriggering.macosProfileName).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.macosProfileName).to.be("");
                expect(data.data.forensicsAutoTriggering.macosProfileId).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.macosProfileId).to.be("");
                expect(data.data.forensicsAutoTriggering.windowsProfileName).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.windowsProfileName).to.be("");
                expect(data.data.forensicsAutoTriggering.linuxProfileName).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.linuxProfileName).to.be("");
                expect(data.data.forensicsAutoTriggering.windowsEnabled).to.be.a('boolean');
                expect(data.data.forensicsAutoTriggering.windowsEnabled).to.be(false);
                expect(data.data.forensicsAutoTriggering.linuxProfileId).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.linuxProfileId).to.be("");
                expect(data.data.forensicsAutoTriggering.macosEnabled).to.be.a('boolean');
                expect(data.data.forensicsAutoTriggering.macosEnabled).to.be(false);
              expect(data.data.identityOn).to.be.a('boolean');
              expect(data.data.identityOn).to.be(false);
              expect(data.data.cloudValidationOn).to.be.a(Object);
              expect(data.data.cloudValidationOn).to.be();
              expect(data.data.autoImmuneOn).to.be.a('boolean');
              expect(data.data.autoImmuneOn).to.be(false);
              expect(data.data.agentNotification).to.be.a('boolean');
              expect(data.data.agentNotification).to.be(false);
              expect(data.data.createdAt).to.be.a(Date);
              expect(data.data.createdAt).to.be(2018-02-27T04:49:26.257525Z);
              expect(data.data.networkQuarantineOn).to.be.a('boolean');
              expect(data.data.networkQuarantineOn).to.be(false);
              expect(data.data.autoDecommissionDays).to.be.a('number');
              expect(data.data.autoDecommissionDays).to.be(0);
              expect(data.data.remoteScriptOrchestration).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyRemoteScriptOrchestration);
                    expect(data.data.remoteScriptOrchestration.alwaysUploadStreamToCloud).to.be.a('boolean');
                expect(data.data.remoteScriptOrchestration.alwaysUploadStreamToCloud).to.be(false);
                expect(data.data.remoteScriptOrchestration.maxLocalPackageDiskUsageLimit).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxLocalPackageDiskUsageLimit).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxDailyFileUploadLimit).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxDailyFileUploadLimit).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxLocalPackageDiskUsage).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxLocalPackageDiskUsage).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxDailyFileDownloadLimit).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxDailyFileDownloadLimit).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxFileSizeLimit).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxFileSizeLimit).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxDailyFileDownload).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxDailyFileDownload).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxFileSize).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxFileSize).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxDailyFileUpload).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxDailyFileUpload).to.be("0");
              expect(data.data.autoDecommissionOn).to.be.a('boolean');
              expect(data.data.autoDecommissionOn).to.be(false);
              expect(data.data.dvAttributesPerEventType).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventType);
                    expect(data.data.dvAttributesPerEventType.smartFileMonitoring).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeSmartFileMonitoring);
                      expect(data.data.dvAttributesPerEventType.smartFileMonitoring.smartFileMonitoring).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.smartFileMonitoring.smartFileMonitoring).to.be(false);
                expect(data.data.dvAttributesPerEventType.windowsEventLogs).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeWindowsEventLogs);
                      expect(data.data.dvAttributesPerEventType.windowsEventLogs.dvEventTypeWindowsEventLogCreation).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.windowsEventLogs.dvEventTypeWindowsEventLogCreation).to.be(false);
                expect(data.data.dvAttributesPerEventType.autoInstallBrowserExtensions).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeAutoInstallBrowserExtensions);
                      expect(data.data.dvAttributesPerEventType.autoInstallBrowserExtensions.autoInstallBrowserExtensions).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.autoInstallBrowserExtensions.autoInstallBrowserExtensions).to.be(false);
                expect(data.data.dvAttributesPerEventType.dataMasking).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDataMasking);
                      expect(data.data.dvAttributesPerEventType.dataMasking.dataMasking).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.dataMasking.dataMasking).to.be(false);
                expect(data.data.dvAttributesPerEventType.dllModuleLoad).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDllModuleLoad);
                      expect(data.data.dvAttributesPerEventType.dllModuleLoad.dvEventTypeDllModuleLoad).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.dllModuleLoad.dvEventTypeDllModuleLoad).to.be(false);
                expect(data.data.dvAttributesPerEventType.dns).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDns);
                      expect(data.data.dvAttributesPerEventType.dns.dvEventTypeDns).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.dns.dvEventTypeDns).to.be(false);
                expect(data.data.dvAttributesPerEventType.crossProcess).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeCrossProcess);
                      expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessOpenProcess).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessOpenProcess).to.be(false);
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessRemoteThread).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessRemoteThread).to.be(false);
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateProcess).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateProcess).to.be(false);
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateThread).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateThread).to.be(false);
                expect(data.data.dvAttributesPerEventType.registry).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeRegistry);
                      expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeySecurityChanged).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeySecurityChanged).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueDeleted).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueDeleted).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueModified).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueModified).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyRename).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyRename).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyCreated).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyCreated).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueCreated).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueCreated).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyImport).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyImport).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyDelete).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyDelete).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyExport).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyExport).to.be(false);
                expect(data.data.dvAttributesPerEventType.driver).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDriver);
                      expect(data.data.dvAttributesPerEventType.driver.dvEventTypeDriverLoad).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.driver.dvEventTypeDriverLoad).to.be(false);
                expect(data.data.dvAttributesPerEventType.windowsEventLogsExtended).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeWindowsEventLogsExtended);
                      expect(data.data.dvAttributesPerEventType.windowsEventLogsExtended.windowsEventLogsExtended).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.windowsEventLogsExtended.windowsEventLogsExtended).to.be(false);
                expect(data.data.dvAttributesPerEventType.file).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeFile);
                      expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileModification).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileModification).to.be(false);
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileCreation).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileCreation).to.be(false);
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileRename).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileRename).to.be(false);
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileDeletion).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileDeletion).to.be(false);
                  expect(data.data.dvAttributesPerEventType.file.fullDiskScan).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.fullDiskScan).to.be(false);
                expect(data.data.dvAttributesPerEventType.namedPipeExtended).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeNamedPipeExtended);
                      expect(data.data.dvAttributesPerEventType.namedPipeExtended.namedPipeExtended).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.namedPipeExtended.namedPipeExtended).to.be(false);
                expect(data.data.dvAttributesPerEventType.url).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeUrl);
                      expect(data.data.dvAttributesPerEventType.url.dvEventTypeUrl).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.url.dvEventTypeUrl).to.be(false);
                expect(data.data.dvAttributesPerEventType.behavioralIndicators).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeBehavioralIndicators);
                      expect(data.data.dvAttributesPerEventType.behavioralIndicators.dvEventTypeBehavioralIndicators).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.behavioralIndicators.dvEventTypeBehavioralIndicators).to.be(false);
                expect(data.data.dvAttributesPerEventType.process).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeProcess);
                      expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessModification).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessModification).to.be(false);
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessExit).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessExit).to.be(false);
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessCreation).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessCreation).to.be(false);
                expect(data.data.dvAttributesPerEventType.commandScripts).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeCommandScripts);
                      expect(data.data.dvAttributesPerEventType.commandScripts.dvEventTypeCommandScripts).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.commandScripts.dvEventTypeCommandScripts).to.be(false);
                expect(data.data.dvAttributesPerEventType.namedPipe).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeNamedPipe);
                      expect(data.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeConnection).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeConnection).to.be(false);
                  expect(data.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeCreation).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeCreation).to.be(false);
                expect(data.data.dvAttributesPerEventType.ip).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeIp);
                      expect(data.data.dvAttributesPerEventType.ip.dvEventTypeIpConnect).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.ip.dvEventTypeIpConnect).to.be(false);
                  expect(data.data.dvAttributesPerEventType.ip.dvEventTypeIpListen).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.ip.dvEventTypeIpListen).to.be(false);
                expect(data.data.dvAttributesPerEventType.login).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeLogin);
                      expect(data.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedOut).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedOut).to.be(false);
                  expect(data.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedIn).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedIn).to.be(false);
                expect(data.data.dvAttributesPerEventType.scheduledTask).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeScheduledTask);
                      expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskDelete).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskDelete).to.be(false);
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskUpdate).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskUpdate).to.be(false);
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskRegister).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskRegister).to.be(false);
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskTrigger).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskTrigger).to.be(false);
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskStart).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskStart).to.be(false);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('webApiTenantPolicyPut', function() {
        it('should call webApiTenantPolicyPut successfully', function(done) {
          // TODO: uncomment, update parameter values for webApiTenantPolicyPut call and complete the assertions
          /*
          var opts = {};
          opts.body = new S1MgmtApi.PoliciesTenantPolicySchema();
          opts.body.data = new S1MgmtApi.PoliciesTenantPolicySchemaData();
          opts.body.data.autoMitigationAction = "";
          opts.body.data.mitigationMode = "detect";
          opts.body.data.iocAttributes = new S1MgmtApi.SitesSitePutSchemaDataPolicyIocAttributes();
          opts.body.data.iocAttributes.smartFileMonitoring = false;
          opts.body.data.iocAttributes.windowsEventLogs = false;
          opts.body.data.iocAttributes.autoInstallBrowserExtensions = false;
          opts.body.data.iocAttributes.dataMasking = false;
          opts.body.data.iocAttributes.dllModuleLoad = false;
          opts.body.data.iocAttributes.dns = false;
          opts.body.data.iocAttributes.crossProcess = false;
          opts.body.data.iocAttributes.registry = false;
          opts.body.data.iocAttributes.driver = false;
          opts.body.data.iocAttributes.fds = false;
          opts.body.data.iocAttributes.windowsEventLogsExtended = false;
          opts.body.data.iocAttributes.file = false;
          opts.body.data.iocAttributes.namedPipeExtended = false;
          opts.body.data.iocAttributes.url = false;
          opts.body.data.iocAttributes.behavioralIndicators = false;
          opts.body.data.iocAttributes.process = false;
          opts.body.data.iocAttributes.commandScripts = false;
          opts.body.data.iocAttributes.namedPipe = false;
          opts.body.data.iocAttributes.ip = false;
          opts.body.data.iocAttributes.login = false;
          opts.body.data.iocAttributes.scheduledTask = false;
          opts.body.data.researchOn = false;
          opts.body.data.autoFileUpload = new S1MgmtApi.SitesSitePutSchemaDataPolicyAutoFileUpload();
          opts.body.data.autoFileUpload.maxDailyFileUploadLimit = 0;
          opts.body.data.autoFileUpload.includeBenignFiles = false;
          opts.body.data.autoFileUpload.maxLocalDiskUsageLimit = 0;
          opts.body.data.autoFileUpload.maxLocalDiskUsage = 0;
          opts.body.data.autoFileUpload.enabled = false;
          opts.body.data.autoFileUpload.maxFileSizeLimit = 0;
          opts.body.data.autoFileUpload.maxFileSize = 0;
          opts.body.data.autoFileUpload.maxDailyFileUpload = 0;
          opts.body.data.mitigationModeSuspicious = "detect";
          opts.body.data.updatedAt = 2018-02-27T04:49:26.257525Z;
          opts.body.data.antiTamperingOn = false;
          opts.body.data.identityReportInterval = 0;
          opts.body.data.monitorOnExecute = false;
          opts.body.data.userId = "225494730938493804";
          opts.body.data.driverBlocking = false;
          opts.body.data.identityEndpointReporting = "disabled";
          opts.body.data.isDefault = false;
          opts.body.data.ioc = false;
          opts.body.data.agentUiOn = false;
          opts.body.data.monitorOnWrite = false;
          opts.body.data.identityUpdateInterval = 0;
          opts.body.data.iocSupported = false;
          opts.body.data.identityThrottlingInterval = 0;
          opts.body.data.agentLoggingOn = false;
          opts.body.data.unsignedDriverBlockingOn = false;
          opts.body.data.agentUi = new S1MgmtApi.SitesSitePutSchemaDataPolicyAgentUi();
          opts.body.data.agentUi.threatPopUpNotifications = false;
          opts.body.data.agentUi.contactFreeText = "";
          opts.body.data.agentUi.contactEmail = "";
          opts.body.data.agentUi.maxEventAgeDays = 0;
          opts.body.data.agentUi.showAgentWarnings = false;
          opts.body.data.agentUi.contactPhoneNumber = "";
          opts.body.data.agentUi.showDeviceTab = false;
          opts.body.data.agentUi.devicePopUpNotifications = false;
          opts.body.data.agentUi.showSupport = false;
          opts.body.data.agentUi.showQuarantineTab = false;
          opts.body.data.agentUi.contactCompany = "";
          opts.body.data.agentUi.showSuspicious = false;
          opts.body.data.agentUi.contactOther = "";
          opts.body.data.agentUi.contactDirectMessage = "";
          opts.body.data.agentUi.contactSupportWebsite = "";
          opts.body.data.agentUi.agentUiOn = false;
          opts.body.data.userFullName = "";
          opts.body.data.signedDriverBlockingOn = false;
          opts.body.data.allowRemoteShell = false;
          opts.body.data.isDvPolicyPerEventType = false;
          opts.body.data.removeMacros = false;
          opts.body.data.scanNewAgents = false;
          opts.body.data.snapshotsOn = false;
          opts.body.data.engines = new S1MgmtApi.SitesSitePutSchemaDataPolicyEngines();
          opts.body.data.engines.lateralMovement = "on";
          opts.body.data.engines.preExecutionSuspicious = "on";
          opts.body.data.engines.preExecution = "on";
          opts.body.data.engines.dataFiles = "on";
          opts.body.data.engines.pup = "on";
          opts.body.data.engines.executables = "on";
          opts.body.data.engines.penetration = "on";
          opts.body.data.engines.applicationControl = "on";
          opts.body.data.engines.reputation = "on";
          opts.body.data.engines.exploits = "on";
          opts.body.data.engines.remoteShell = "on";
          opts.body.data.remoteOpsForensics = new S1MgmtApi.SitesSitePutSchemaDataPolicyRemoteOpsForensics();
          opts.body.data.remoteOpsForensics.parsedArtifactsDestination = "local";
          opts.body.data.remoteOpsForensics.maximumFileSizeUpload = "0";
          opts.body.data.remoteOpsForensics.maximumDailyUpload = "0";
          opts.body.data.remoteOpsForensics.maximumFileSizeUploadLimit = "0";
          opts.body.data.remoteOpsForensics.enabled = false;
          opts.body.data.remoteOpsForensics.cpuLimit = 0;
          opts.body.data.remoteOpsForensics.maximumDailyUploadLimit = "0";
          opts.body.data.forensicsAutoTriggering = new S1MgmtApi.SitesSitePutSchemaDataPolicyForensicsAutoTriggering();
          opts.body.data.forensicsAutoTriggering.windowsProfileId = "";
          opts.body.data.forensicsAutoTriggering.linuxEnabled = false;
          opts.body.data.forensicsAutoTriggering.macosProfileName = "";
          opts.body.data.forensicsAutoTriggering.macosProfileId = "";
          opts.body.data.forensicsAutoTriggering.windowsProfileName = "";
          opts.body.data.forensicsAutoTriggering.linuxProfileName = "";
          opts.body.data.forensicsAutoTriggering.windowsEnabled = false;
          opts.body.data.forensicsAutoTriggering.linuxProfileId = "";
          opts.body.data.forensicsAutoTriggering.macosEnabled = false;
          opts.body.data.identityOn = false;
          opts.body.data.cloudValidationOn = ;
          opts.body.data.autoImmuneOn = false;
          opts.body.data.agentNotification = false;
          opts.body.data.createdAt = 2018-02-27T04:49:26.257525Z;
          opts.body.data.networkQuarantineOn = false;
          opts.body.data.autoDecommissionDays = 0;
          opts.body.data.remoteScriptOrchestration = new S1MgmtApi.SitesSitePutSchemaDataPolicyRemoteScriptOrchestration();
          opts.body.data.remoteScriptOrchestration.alwaysUploadStreamToCloud = false;
          opts.body.data.remoteScriptOrchestration.maxLocalPackageDiskUsageLimit = "0";
          opts.body.data.remoteScriptOrchestration.maxDailyFileUploadLimit = "0";
          opts.body.data.remoteScriptOrchestration.maxLocalPackageDiskUsage = "0";
          opts.body.data.remoteScriptOrchestration.maxDailyFileDownloadLimit = "0";
          opts.body.data.remoteScriptOrchestration.maxFileSizeLimit = "0";
          opts.body.data.remoteScriptOrchestration.maxDailyFileDownload = "0";
          opts.body.data.remoteScriptOrchestration.maxFileSize = "0";
          opts.body.data.remoteScriptOrchestration.maxDailyFileUpload = "0";
          opts.body.data.autoDecommissionOn = false;
          opts.body.data.dvAttributesPerEventType = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventType();
          opts.body.data.dvAttributesPerEventType.smartFileMonitoring = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeSmartFileMonitoring();
          opts.body.data.dvAttributesPerEventType.smartFileMonitoring.smartFileMonitoring = false;
          opts.body.data.dvAttributesPerEventType.windowsEventLogs = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeWindowsEventLogs();
          opts.body.data.dvAttributesPerEventType.windowsEventLogs.dvEventTypeWindowsEventLogCreation = false;
          opts.body.data.dvAttributesPerEventType.autoInstallBrowserExtensions = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeAutoInstallBrowserExtensions();
          opts.body.data.dvAttributesPerEventType.autoInstallBrowserExtensions.autoInstallBrowserExtensions = false;
          opts.body.data.dvAttributesPerEventType.dataMasking = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDataMasking();
          opts.body.data.dvAttributesPerEventType.dataMasking.dataMasking = false;
          opts.body.data.dvAttributesPerEventType.dllModuleLoad = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDllModuleLoad();
          opts.body.data.dvAttributesPerEventType.dllModuleLoad.dvEventTypeDllModuleLoad = false;
          opts.body.data.dvAttributesPerEventType.dns = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDns();
          opts.body.data.dvAttributesPerEventType.dns.dvEventTypeDns = false;
          opts.body.data.dvAttributesPerEventType.crossProcess = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeCrossProcess();
          opts.body.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessOpenProcess = false;
          opts.body.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessRemoteThread = false;
          opts.body.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateProcess = false;
          opts.body.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateThread = false;
          opts.body.data.dvAttributesPerEventType.registry = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeRegistry();
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeySecurityChanged = false;
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueDeleted = false;
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueModified = false;
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyRename = false;
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyCreated = false;
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueCreated = false;
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyImport = false;
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyDelete = false;
          opts.body.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyExport = false;
          opts.body.data.dvAttributesPerEventType.driver = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDriver();
          opts.body.data.dvAttributesPerEventType.driver.dvEventTypeDriverLoad = false;
          opts.body.data.dvAttributesPerEventType.windowsEventLogsExtended = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeWindowsEventLogsExtended();
          opts.body.data.dvAttributesPerEventType.windowsEventLogsExtended.windowsEventLogsExtended = false;
          opts.body.data.dvAttributesPerEventType.file = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeFile();
          opts.body.data.dvAttributesPerEventType.file.dvEventTypeFileModification = false;
          opts.body.data.dvAttributesPerEventType.file.dvEventTypeFileCreation = false;
          opts.body.data.dvAttributesPerEventType.file.dvEventTypeFileRename = false;
          opts.body.data.dvAttributesPerEventType.file.dvEventTypeFileDeletion = false;
          opts.body.data.dvAttributesPerEventType.file.fullDiskScan = false;
          opts.body.data.dvAttributesPerEventType.namedPipeExtended = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeNamedPipeExtended();
          opts.body.data.dvAttributesPerEventType.namedPipeExtended.namedPipeExtended = false;
          opts.body.data.dvAttributesPerEventType.url = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeUrl();
          opts.body.data.dvAttributesPerEventType.url.dvEventTypeUrl = false;
          opts.body.data.dvAttributesPerEventType.behavioralIndicators = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeBehavioralIndicators();
          opts.body.data.dvAttributesPerEventType.behavioralIndicators.dvEventTypeBehavioralIndicators = false;
          opts.body.data.dvAttributesPerEventType.process = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeProcess();
          opts.body.data.dvAttributesPerEventType.process.dvEventTypeProcessModification = false;
          opts.body.data.dvAttributesPerEventType.process.dvEventTypeProcessExit = false;
          opts.body.data.dvAttributesPerEventType.process.dvEventTypeProcessCreation = false;
          opts.body.data.dvAttributesPerEventType.commandScripts = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeCommandScripts();
          opts.body.data.dvAttributesPerEventType.commandScripts.dvEventTypeCommandScripts = false;
          opts.body.data.dvAttributesPerEventType.namedPipe = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeNamedPipe();
          opts.body.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeConnection = false;
          opts.body.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeCreation = false;
          opts.body.data.dvAttributesPerEventType.ip = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeIp();
          opts.body.data.dvAttributesPerEventType.ip.dvEventTypeIpConnect = false;
          opts.body.data.dvAttributesPerEventType.ip.dvEventTypeIpListen = false;
          opts.body.data.dvAttributesPerEventType.login = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeLogin();
          opts.body.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedOut = false;
          opts.body.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedIn = false;
          opts.body.data.dvAttributesPerEventType.scheduledTask = new S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeScheduledTask();
          opts.body.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskDelete = false;
          opts.body.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskUpdate = false;
          opts.body.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskRegister = false;
          opts.body.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskTrigger = false;
          opts.body.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskStart = false;

          instance.webApiTenantPolicyPut(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(S1MgmtApi.PoliciesSchemasEnrichedPolicySchema200);
            {
              let dataCtr = data.errors;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a(Object);
                expect(data).to.be();
              }
            }
            expect(data.data).to.be.a(S1MgmtApi.PoliciesSchemasEnrichedPolicySchema200Data);
                  expect(data.data.autoMitigationAction).to.be.a('string');
              expect(data.data.autoMitigationAction).to.be("");
              expect(data.data.mitigationMode).to.be.a('string');
              expect(data.data.mitigationMode).to.be("detect");
              expect(data.data.iocAttributes).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyIocAttributes);
                    expect(data.data.iocAttributes.smartFileMonitoring).to.be.a('boolean');
                expect(data.data.iocAttributes.smartFileMonitoring).to.be(false);
                expect(data.data.iocAttributes.windowsEventLogs).to.be.a('boolean');
                expect(data.data.iocAttributes.windowsEventLogs).to.be(false);
                expect(data.data.iocAttributes.autoInstallBrowserExtensions).to.be.a('boolean');
                expect(data.data.iocAttributes.autoInstallBrowserExtensions).to.be(false);
                expect(data.data.iocAttributes.dataMasking).to.be.a('boolean');
                expect(data.data.iocAttributes.dataMasking).to.be(false);
                expect(data.data.iocAttributes.dllModuleLoad).to.be.a('boolean');
                expect(data.data.iocAttributes.dllModuleLoad).to.be(false);
                expect(data.data.iocAttributes.dns).to.be.a('boolean');
                expect(data.data.iocAttributes.dns).to.be(false);
                expect(data.data.iocAttributes.crossProcess).to.be.a('boolean');
                expect(data.data.iocAttributes.crossProcess).to.be(false);
                expect(data.data.iocAttributes.registry).to.be.a('boolean');
                expect(data.data.iocAttributes.registry).to.be(false);
                expect(data.data.iocAttributes.driver).to.be.a('boolean');
                expect(data.data.iocAttributes.driver).to.be(false);
                expect(data.data.iocAttributes.fds).to.be.a('boolean');
                expect(data.data.iocAttributes.fds).to.be(false);
                expect(data.data.iocAttributes.windowsEventLogsExtended).to.be.a('boolean');
                expect(data.data.iocAttributes.windowsEventLogsExtended).to.be(false);
                expect(data.data.iocAttributes.file).to.be.a('boolean');
                expect(data.data.iocAttributes.file).to.be(false);
                expect(data.data.iocAttributes.namedPipeExtended).to.be.a('boolean');
                expect(data.data.iocAttributes.namedPipeExtended).to.be(false);
                expect(data.data.iocAttributes.url).to.be.a('boolean');
                expect(data.data.iocAttributes.url).to.be(false);
                expect(data.data.iocAttributes.behavioralIndicators).to.be.a('boolean');
                expect(data.data.iocAttributes.behavioralIndicators).to.be(false);
                expect(data.data.iocAttributes.process).to.be.a('boolean');
                expect(data.data.iocAttributes.process).to.be(false);
                expect(data.data.iocAttributes.commandScripts).to.be.a('boolean');
                expect(data.data.iocAttributes.commandScripts).to.be(false);
                expect(data.data.iocAttributes.namedPipe).to.be.a('boolean');
                expect(data.data.iocAttributes.namedPipe).to.be(false);
                expect(data.data.iocAttributes.ip).to.be.a('boolean');
                expect(data.data.iocAttributes.ip).to.be(false);
                expect(data.data.iocAttributes.login).to.be.a('boolean');
                expect(data.data.iocAttributes.login).to.be(false);
                expect(data.data.iocAttributes.scheduledTask).to.be.a('boolean');
                expect(data.data.iocAttributes.scheduledTask).to.be(false);
              expect(data.data.fwForNetworkQuarantineEnabled).to.be.a('boolean');
              expect(data.data.fwForNetworkQuarantineEnabled).to.be(false);
              expect(data.data.researchOn).to.be.a('boolean');
              expect(data.data.researchOn).to.be(false);
              expect(data.data.autoFileUpload).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyAutoFileUpload);
                    expect(data.data.autoFileUpload.maxDailyFileUploadLimit).to.be.a('number');
                expect(data.data.autoFileUpload.maxDailyFileUploadLimit).to.be(0);
                expect(data.data.autoFileUpload.includeBenignFiles).to.be.a('boolean');
                expect(data.data.autoFileUpload.includeBenignFiles).to.be(false);
                expect(data.data.autoFileUpload.maxLocalDiskUsageLimit).to.be.a('number');
                expect(data.data.autoFileUpload.maxLocalDiskUsageLimit).to.be(0);
                expect(data.data.autoFileUpload.maxLocalDiskUsage).to.be.a('number');
                expect(data.data.autoFileUpload.maxLocalDiskUsage).to.be(0);
                expect(data.data.autoFileUpload.enabled).to.be.a('boolean');
                expect(data.data.autoFileUpload.enabled).to.be(false);
                expect(data.data.autoFileUpload.maxFileSizeLimit).to.be.a('number');
                expect(data.data.autoFileUpload.maxFileSizeLimit).to.be(0);
                expect(data.data.autoFileUpload.maxFileSize).to.be.a('number');
                expect(data.data.autoFileUpload.maxFileSize).to.be(0);
                expect(data.data.autoFileUpload.maxDailyFileUpload).to.be.a('number');
                expect(data.data.autoFileUpload.maxDailyFileUpload).to.be(0);
              expect(data.data.mitigationModeSuspicious).to.be.a('string');
              expect(data.data.mitigationModeSuspicious).to.be("detect");
              expect(data.data.updatedAt).to.be.a(Date);
              expect(data.data.updatedAt).to.be(2018-02-27T04:49:26.257525Z);
              expect(data.data.antiTamperingOn).to.be.a('boolean');
              expect(data.data.antiTamperingOn).to.be(false);
              expect(data.data.identityReportInterval).to.be.a('number');
              expect(data.data.identityReportInterval).to.be(0);
              expect(data.data.monitorOnExecute).to.be.a('boolean');
              expect(data.data.monitorOnExecute).to.be(false);
              expect(data.data.userId).to.be.a('string');
              expect(data.data.userId).to.be("225494730938493804");
              expect(data.data.driverBlocking).to.be.a('boolean');
              expect(data.data.driverBlocking).to.be(false);
              expect(data.data.identityEndpointReporting).to.be.a('string');
              expect(data.data.identityEndpointReporting).to.be("disabled");
              expect(data.data.isDefault).to.be.a('boolean');
              expect(data.data.isDefault).to.be(false);
              expect(data.data.ioc).to.be.a('boolean');
              expect(data.data.ioc).to.be(false);
              expect(data.data.agentUiOn).to.be.a('boolean');
              expect(data.data.agentUiOn).to.be(false);
              expect(data.data.inheritedFrom).to.be.a('string');
              expect(data.data.inheritedFrom).to.be("site");
              expect(data.data.monitorOnWrite).to.be.a('boolean');
              expect(data.data.monitorOnWrite).to.be(false);
              expect(data.data.identityUpdateInterval).to.be.a('number');
              expect(data.data.identityUpdateInterval).to.be(0);
              expect(data.data.iocSupported).to.be.a('boolean');
              expect(data.data.iocSupported).to.be(false);
              expect(data.data.identityThrottlingInterval).to.be.a('number');
              expect(data.data.identityThrottlingInterval).to.be(0);
              expect(data.data.agentLoggingOn).to.be.a('boolean');
              expect(data.data.agentLoggingOn).to.be(false);
              expect(data.data.unsignedDriverBlockingOn).to.be.a('boolean');
              expect(data.data.unsignedDriverBlockingOn).to.be(false);
              expect(data.data.agentUi).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyAgentUi);
                    expect(data.data.agentUi.threatPopUpNotifications).to.be.a('boolean');
                expect(data.data.agentUi.threatPopUpNotifications).to.be(false);
                expect(data.data.agentUi.contactFreeText).to.be.a('string');
                expect(data.data.agentUi.contactFreeText).to.be("");
                expect(data.data.agentUi.contactEmail).to.be.a('string');
                expect(data.data.agentUi.contactEmail).to.be("");
                expect(data.data.agentUi.maxEventAgeDays).to.be.a('number');
                expect(data.data.agentUi.maxEventAgeDays).to.be(0);
                expect(data.data.agentUi.showAgentWarnings).to.be.a('boolean');
                expect(data.data.agentUi.showAgentWarnings).to.be(false);
                expect(data.data.agentUi.contactPhoneNumber).to.be.a('string');
                expect(data.data.agentUi.contactPhoneNumber).to.be("");
                expect(data.data.agentUi.showDeviceTab).to.be.a('boolean');
                expect(data.data.agentUi.showDeviceTab).to.be(false);
                expect(data.data.agentUi.devicePopUpNotifications).to.be.a('boolean');
                expect(data.data.agentUi.devicePopUpNotifications).to.be(false);
                expect(data.data.agentUi.showSupport).to.be.a('boolean');
                expect(data.data.agentUi.showSupport).to.be(false);
                expect(data.data.agentUi.showQuarantineTab).to.be.a('boolean');
                expect(data.data.agentUi.showQuarantineTab).to.be(false);
                expect(data.data.agentUi.contactCompany).to.be.a('string');
                expect(data.data.agentUi.contactCompany).to.be("");
                expect(data.data.agentUi.showSuspicious).to.be.a('boolean');
                expect(data.data.agentUi.showSuspicious).to.be(false);
                expect(data.data.agentUi.contactOther).to.be.a('string');
                expect(data.data.agentUi.contactOther).to.be("");
                expect(data.data.agentUi.contactDirectMessage).to.be.a('string');
                expect(data.data.agentUi.contactDirectMessage).to.be("");
                expect(data.data.agentUi.contactSupportWebsite).to.be.a('string');
                expect(data.data.agentUi.contactSupportWebsite).to.be("");
                expect(data.data.agentUi.agentUiOn).to.be.a('boolean');
                expect(data.data.agentUi.agentUiOn).to.be(false);
              expect(data.data.userFullName).to.be.a('string');
              expect(data.data.userFullName).to.be("");
              expect(data.data.signedDriverBlockingOn).to.be.a('boolean');
              expect(data.data.signedDriverBlockingOn).to.be(false);
              expect(data.data.allowRemoteShell).to.be.a('boolean');
              expect(data.data.allowRemoteShell).to.be(false);
              expect(data.data.isDvPolicyPerEventType).to.be.a('boolean');
              expect(data.data.isDvPolicyPerEventType).to.be(false);
              expect(data.data.removeMacros).to.be.a('boolean');
              expect(data.data.removeMacros).to.be(false);
              expect(data.data.scanNewAgents).to.be.a('boolean');
              expect(data.data.scanNewAgents).to.be(false);
              expect(data.data.snapshotsOn).to.be.a('boolean');
              expect(data.data.snapshotsOn).to.be(false);
              expect(data.data.engines).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyEngines);
                    expect(data.data.engines.lateralMovement).to.be.a('string');
                expect(data.data.engines.lateralMovement).to.be("on");
                expect(data.data.engines.preExecutionSuspicious).to.be.a('string');
                expect(data.data.engines.preExecutionSuspicious).to.be("on");
                expect(data.data.engines.preExecution).to.be.a('string');
                expect(data.data.engines.preExecution).to.be("on");
                expect(data.data.engines.dataFiles).to.be.a('string');
                expect(data.data.engines.dataFiles).to.be("on");
                expect(data.data.engines.pup).to.be.a('string');
                expect(data.data.engines.pup).to.be("on");
                expect(data.data.engines.executables).to.be.a('string');
                expect(data.data.engines.executables).to.be("on");
                expect(data.data.engines.penetration).to.be.a('string');
                expect(data.data.engines.penetration).to.be("on");
                expect(data.data.engines.applicationControl).to.be.a('string');
                expect(data.data.engines.applicationControl).to.be("on");
                expect(data.data.engines.reputation).to.be.a('string');
                expect(data.data.engines.reputation).to.be("on");
                expect(data.data.engines.exploits).to.be.a('string');
                expect(data.data.engines.exploits).to.be("on");
                expect(data.data.engines.remoteShell).to.be.a('string');
                expect(data.data.engines.remoteShell).to.be("on");
              expect(data.data.remoteOpsForensics).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyRemoteOpsForensics);
                    expect(data.data.remoteOpsForensics.parsedArtifactsDestination).to.be.a('string');
                expect(data.data.remoteOpsForensics.parsedArtifactsDestination).to.be("local");
                expect(data.data.remoteOpsForensics.maximumFileSizeUpload).to.be.a('number');
                expect(data.data.remoteOpsForensics.maximumFileSizeUpload).to.be("0");
                expect(data.data.remoteOpsForensics.maximumDailyUpload).to.be.a('number');
                expect(data.data.remoteOpsForensics.maximumDailyUpload).to.be("0");
                expect(data.data.remoteOpsForensics.maximumFileSizeUploadLimit).to.be.a('number');
                expect(data.data.remoteOpsForensics.maximumFileSizeUploadLimit).to.be("0");
                expect(data.data.remoteOpsForensics.enabled).to.be.a('boolean');
                expect(data.data.remoteOpsForensics.enabled).to.be(false);
                expect(data.data.remoteOpsForensics.cpuLimit).to.be.a('number');
                expect(data.data.remoteOpsForensics.cpuLimit).to.be(0);
                expect(data.data.remoteOpsForensics.maximumDailyUploadLimit).to.be.a('number');
                expect(data.data.remoteOpsForensics.maximumDailyUploadLimit).to.be("0");
              expect(data.data.forensicsAutoTriggering).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyForensicsAutoTriggering);
                    expect(data.data.forensicsAutoTriggering.windowsProfileId).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.windowsProfileId).to.be("");
                expect(data.data.forensicsAutoTriggering.linuxEnabled).to.be.a('boolean');
                expect(data.data.forensicsAutoTriggering.linuxEnabled).to.be(false);
                expect(data.data.forensicsAutoTriggering.macosProfileName).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.macosProfileName).to.be("");
                expect(data.data.forensicsAutoTriggering.macosProfileId).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.macosProfileId).to.be("");
                expect(data.data.forensicsAutoTriggering.windowsProfileName).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.windowsProfileName).to.be("");
                expect(data.data.forensicsAutoTriggering.linuxProfileName).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.linuxProfileName).to.be("");
                expect(data.data.forensicsAutoTriggering.windowsEnabled).to.be.a('boolean');
                expect(data.data.forensicsAutoTriggering.windowsEnabled).to.be(false);
                expect(data.data.forensicsAutoTriggering.linuxProfileId).to.be.a('string');
                expect(data.data.forensicsAutoTriggering.linuxProfileId).to.be("");
                expect(data.data.forensicsAutoTriggering.macosEnabled).to.be.a('boolean');
                expect(data.data.forensicsAutoTriggering.macosEnabled).to.be(false);
              expect(data.data.identityOn).to.be.a('boolean');
              expect(data.data.identityOn).to.be(false);
              expect(data.data.cloudValidationOn).to.be.a(Object);
              expect(data.data.cloudValidationOn).to.be();
              expect(data.data.autoImmuneOn).to.be.a('boolean');
              expect(data.data.autoImmuneOn).to.be(false);
              expect(data.data.agentNotification).to.be.a('boolean');
              expect(data.data.agentNotification).to.be(false);
              expect(data.data.createdAt).to.be.a(Date);
              expect(data.data.createdAt).to.be(2018-02-27T04:49:26.257525Z);
              expect(data.data.networkQuarantineOn).to.be.a('boolean');
              expect(data.data.networkQuarantineOn).to.be(false);
              expect(data.data.autoDecommissionDays).to.be.a('number');
              expect(data.data.autoDecommissionDays).to.be(0);
              expect(data.data.remoteScriptOrchestration).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyRemoteScriptOrchestration);
                    expect(data.data.remoteScriptOrchestration.alwaysUploadStreamToCloud).to.be.a('boolean');
                expect(data.data.remoteScriptOrchestration.alwaysUploadStreamToCloud).to.be(false);
                expect(data.data.remoteScriptOrchestration.maxLocalPackageDiskUsageLimit).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxLocalPackageDiskUsageLimit).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxDailyFileUploadLimit).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxDailyFileUploadLimit).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxLocalPackageDiskUsage).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxLocalPackageDiskUsage).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxDailyFileDownloadLimit).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxDailyFileDownloadLimit).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxFileSizeLimit).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxFileSizeLimit).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxDailyFileDownload).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxDailyFileDownload).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxFileSize).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxFileSize).to.be("0");
                expect(data.data.remoteScriptOrchestration.maxDailyFileUpload).to.be.a('number');
                expect(data.data.remoteScriptOrchestration.maxDailyFileUpload).to.be("0");
              expect(data.data.autoDecommissionOn).to.be.a('boolean');
              expect(data.data.autoDecommissionOn).to.be(false);
              expect(data.data.dvAttributesPerEventType).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventType);
                    expect(data.data.dvAttributesPerEventType.smartFileMonitoring).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeSmartFileMonitoring);
                      expect(data.data.dvAttributesPerEventType.smartFileMonitoring.smartFileMonitoring).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.smartFileMonitoring.smartFileMonitoring).to.be(false);
                expect(data.data.dvAttributesPerEventType.windowsEventLogs).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeWindowsEventLogs);
                      expect(data.data.dvAttributesPerEventType.windowsEventLogs.dvEventTypeWindowsEventLogCreation).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.windowsEventLogs.dvEventTypeWindowsEventLogCreation).to.be(false);
                expect(data.data.dvAttributesPerEventType.autoInstallBrowserExtensions).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeAutoInstallBrowserExtensions);
                      expect(data.data.dvAttributesPerEventType.autoInstallBrowserExtensions.autoInstallBrowserExtensions).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.autoInstallBrowserExtensions.autoInstallBrowserExtensions).to.be(false);
                expect(data.data.dvAttributesPerEventType.dataMasking).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDataMasking);
                      expect(data.data.dvAttributesPerEventType.dataMasking.dataMasking).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.dataMasking.dataMasking).to.be(false);
                expect(data.data.dvAttributesPerEventType.dllModuleLoad).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDllModuleLoad);
                      expect(data.data.dvAttributesPerEventType.dllModuleLoad.dvEventTypeDllModuleLoad).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.dllModuleLoad.dvEventTypeDllModuleLoad).to.be(false);
                expect(data.data.dvAttributesPerEventType.dns).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDns);
                      expect(data.data.dvAttributesPerEventType.dns.dvEventTypeDns).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.dns.dvEventTypeDns).to.be(false);
                expect(data.data.dvAttributesPerEventType.crossProcess).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeCrossProcess);
                      expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessOpenProcess).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessOpenProcess).to.be(false);
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessRemoteThread).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessRemoteThread).to.be(false);
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateProcess).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateProcess).to.be(false);
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateThread).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.crossProcess.dvEventTypeCrossProcessDuplicateThread).to.be(false);
                expect(data.data.dvAttributesPerEventType.registry).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeRegistry);
                      expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeySecurityChanged).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeySecurityChanged).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueDeleted).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueDeleted).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueModified).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueModified).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyRename).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyRename).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyCreated).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyCreated).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueCreated).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryValueCreated).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyImport).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyImport).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyDelete).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyDelete).to.be(false);
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyExport).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.registry.dvEventTypeRegistryKeyExport).to.be(false);
                expect(data.data.dvAttributesPerEventType.driver).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeDriver);
                      expect(data.data.dvAttributesPerEventType.driver.dvEventTypeDriverLoad).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.driver.dvEventTypeDriverLoad).to.be(false);
                expect(data.data.dvAttributesPerEventType.windowsEventLogsExtended).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeWindowsEventLogsExtended);
                      expect(data.data.dvAttributesPerEventType.windowsEventLogsExtended.windowsEventLogsExtended).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.windowsEventLogsExtended.windowsEventLogsExtended).to.be(false);
                expect(data.data.dvAttributesPerEventType.file).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeFile);
                      expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileModification).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileModification).to.be(false);
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileCreation).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileCreation).to.be(false);
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileRename).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileRename).to.be(false);
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileDeletion).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.dvEventTypeFileDeletion).to.be(false);
                  expect(data.data.dvAttributesPerEventType.file.fullDiskScan).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.file.fullDiskScan).to.be(false);
                expect(data.data.dvAttributesPerEventType.namedPipeExtended).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeNamedPipeExtended);
                      expect(data.data.dvAttributesPerEventType.namedPipeExtended.namedPipeExtended).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.namedPipeExtended.namedPipeExtended).to.be(false);
                expect(data.data.dvAttributesPerEventType.url).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeUrl);
                      expect(data.data.dvAttributesPerEventType.url.dvEventTypeUrl).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.url.dvEventTypeUrl).to.be(false);
                expect(data.data.dvAttributesPerEventType.behavioralIndicators).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeBehavioralIndicators);
                      expect(data.data.dvAttributesPerEventType.behavioralIndicators.dvEventTypeBehavioralIndicators).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.behavioralIndicators.dvEventTypeBehavioralIndicators).to.be(false);
                expect(data.data.dvAttributesPerEventType.process).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeProcess);
                      expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessModification).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessModification).to.be(false);
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessExit).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessExit).to.be(false);
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessCreation).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.process.dvEventTypeProcessCreation).to.be(false);
                expect(data.data.dvAttributesPerEventType.commandScripts).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeCommandScripts);
                      expect(data.data.dvAttributesPerEventType.commandScripts.dvEventTypeCommandScripts).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.commandScripts.dvEventTypeCommandScripts).to.be(false);
                expect(data.data.dvAttributesPerEventType.namedPipe).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeNamedPipe);
                      expect(data.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeConnection).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeConnection).to.be(false);
                  expect(data.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeCreation).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.namedPipe.dvEventTypeNamedPipeCreation).to.be(false);
                expect(data.data.dvAttributesPerEventType.ip).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeIp);
                      expect(data.data.dvAttributesPerEventType.ip.dvEventTypeIpConnect).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.ip.dvEventTypeIpConnect).to.be(false);
                  expect(data.data.dvAttributesPerEventType.ip.dvEventTypeIpListen).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.ip.dvEventTypeIpListen).to.be(false);
                expect(data.data.dvAttributesPerEventType.login).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeLogin);
                      expect(data.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedOut).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedOut).to.be(false);
                  expect(data.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedIn).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.login.dvEventTypeLoginLoggedIn).to.be(false);
                expect(data.data.dvAttributesPerEventType.scheduledTask).to.be.a(S1MgmtApi.SitesSitePutSchemaDataPolicyDvAttributesPerEventTypeScheduledTask);
                      expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskDelete).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskDelete).to.be(false);
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskUpdate).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskUpdate).to.be(false);
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskRegister).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskRegister).to.be(false);
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskTrigger).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskTrigger).to.be(false);
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskStart).to.be.a('boolean');
                  expect(data.data.dvAttributesPerEventType.scheduledTask.dvEventTypeScheduledTaskStart).to.be(false);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
