/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.S1MgmtApi);
  }
}(this, function(expect, S1MgmtApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new S1MgmtApi.RangerSelfEnablementApi();
  });

  describe('(package)', function() {
    describe('RangerSelfEnablementApi', function() {
      describe('webApiRangerEnableSelfManagementPost', function() {
        it('should call webApiRangerEnableSelfManagementPost successfully', function(done) {
          // TODO: uncomment, update parameter values for webApiRangerEnableSelfManagementPost call
          /*
          var opts = {};
          opts.body = new S1MgmtApi.RangerEnablementSchemasUpdateEnablementPostSchema();
          opts.body.filter = new S1MgmtApi.RangerEnablementSchemasUpdateEnablementPostSchemaFilter();
          opts.body.filter.accountIds = ["225494730938493804","225494730938493915"];
          opts.body.data = new S1MgmtApi.RangerEnablementSchemasUpdateEnablementPostSchemaData();
          opts.body.data.enable = false;

          instance.webApiRangerEnableSelfManagementPost(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('webApiRangerEnablementDefaultsGet', function() {
        it('should call webApiRangerEnablementDefaultsGet successfully', function(done) {
          // TODO: uncomment, update parameter values for webApiRangerEnablementDefaultsGet call
          /*
          var opts = {};
          opts.accountIds = ["accountIds_example"];

          instance.webApiRangerEnablementDefaultsGet(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('webApiRangerEnablementDefaultsPost', function() {
        it('should call webApiRangerEnablementDefaultsPost successfully', function(done) {
          // TODO: uncomment, update parameter values for webApiRangerEnablementDefaultsPost call
          /*
          var opts = {};
          opts.body = new S1MgmtApi.RangerEnablementSchemasUpdateSelfEnablementFeaturesSchema();
          opts.body.filter = new S1MgmtApi.RangerEnablementSchemasUpdateSelfEnablementFeaturesSchemaFilter();
          opts.body.filter.activeAgentsGt = 0;
          opts.body.filter.rangerProEnabled = false;
          opts.body.filter.activeAgentsGte = 0;
          opts.body.filter.id = "225494730938493804";
          opts.body.filter.accountIds = ["225494730938493804","225494730938493915"];
          opts.body.filter.siteIds = ["225494730938493804","225494730938493915"];
          opts.body.filter.activeAgents = 0;
          opts.body.filter.activeAgentsLte = 0;
          opts.body.filter.activeAgentsLt = 0;
          opts.body.filter.roguesEnabled = false;
          opts.body.filter.siteName = "";
          opts.body.filter.ids = ["225494730938493804","225494730938493915"];
          opts.body.filter.siteNameContains = [""];
          opts.body.filter.activeAgentsBetween = "2-8";
          opts.body.filter.tenant = false;
          opts.body.filter.groupIds = ["225494730938493804","225494730938493915"];
          opts.body.filter.rangerEnabled = false;
          opts.body.data = new S1MgmtApi.RangerEnablementSchemasUpdateSelfEnablementFeaturesSchemaData();
          opts.body.data.roguesEnabled = false;
          opts.body.data.rangerProEnabled = false;
          opts.body.data.rangerEnabled = false;

          instance.webApiRangerEnablementDefaultsPost(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('webApiRangerEnablementGet', function() {
        it('should call webApiRangerEnablementGet successfully', function(done) {
          // TODO: uncomment, update parameter values for webApiRangerEnablementGet call
          /*
          var opts = {};
          opts.cursor = "null";
          opts.activeAgentsLte = 56;
          opts.activeAgentsGte = 56;
          opts.ids = ["ids_example"];
          opts.countOnly = false;
          opts.limit = 10;
          opts.activeAgentsGt = 56;
          opts.skip = 56;
          opts.id = "id_example";
          opts.skipCount = null;
          opts.sortOrder = "null";
          opts.siteNameContains = ["siteNameContains_example"];
          opts.activeAgents = 56;
          opts.activeAgentsLt = 56;
          opts.sortBy = "null";
          opts.siteName = "siteName_example";
          opts.tenant = true;
          opts.groupIds = ["groupIds_example"];
          opts.rangerProEnabled = true;
          opts.siteIds = ["siteIds_example"];
          opts.accountIds = ["accountIds_example"];
          opts.roguesEnabled = true;
          opts.activeAgentsBetween = "activeAgentsBetween_example";
          opts.rangerEnabled = true;

          instance.webApiRangerEnablementGet(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('webApiRangerEnablementPost', function() {
        it('should call webApiRangerEnablementPost successfully', function(done) {
          // TODO: uncomment, update parameter values for webApiRangerEnablementPost call
          /*
          var opts = {};
          opts.body = new S1MgmtApi.RangerEnablementSchemasUpdateSelfEnablementFeaturesSchema();
          opts.body.filter = new S1MgmtApi.RangerEnablementSchemasUpdateSelfEnablementFeaturesSchemaFilter();
          opts.body.filter.activeAgentsGt = 0;
          opts.body.filter.rangerProEnabled = false;
          opts.body.filter.activeAgentsGte = 0;
          opts.body.filter.id = "225494730938493804";
          opts.body.filter.accountIds = ["225494730938493804","225494730938493915"];
          opts.body.filter.siteIds = ["225494730938493804","225494730938493915"];
          opts.body.filter.activeAgents = 0;
          opts.body.filter.activeAgentsLte = 0;
          opts.body.filter.activeAgentsLt = 0;
          opts.body.filter.roguesEnabled = false;
          opts.body.filter.siteName = "";
          opts.body.filter.ids = ["225494730938493804","225494730938493915"];
          opts.body.filter.siteNameContains = [""];
          opts.body.filter.activeAgentsBetween = "2-8";
          opts.body.filter.tenant = false;
          opts.body.filter.groupIds = ["225494730938493804","225494730938493915"];
          opts.body.filter.rangerEnabled = false;
          opts.body.data = new S1MgmtApi.RangerEnablementSchemasUpdateSelfEnablementFeaturesSchemaData();
          opts.body.data.roguesEnabled = false;
          opts.body.data.rangerProEnabled = false;
          opts.body.data.rangerEnabled = false;

          instance.webApiRangerEnablementPost(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
