/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.S1MgmtApi);
  }
}(this, function(expect, S1MgmtApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('SettingsSyslogSettingsSchema200Data', function() {
      beforeEach(function() {
        instance = new S1MgmtApi.SettingsSyslogSettingsSchema200Data();
      });

      it('should create an instance of SettingsSyslogSettingsSchema200Data', function() {
        // TODO: update the code to test SettingsSyslogSettingsSchema200Data
        expect(instance).to.be.a(S1MgmtApi.SettingsSyslogSettingsSchema200Data);
      });

      it('should have the property ssl (base name: "ssl")', function() {
        // TODO: update the code to test the property ssl
        expect(instance).to.have.property('ssl');
        // expect(instance.ssl).to.be(expectedValueLiteral);
      });

      it('should have the property port (base name: "port")', function() {
        // TODO: update the code to test the property port
        expect(instance).to.have.property('port');
        // expect(instance.port).to.be(expectedValueLiteral);
      });

      it('should have the property clientKeyContent (base name: "clientKeyContent")', function() {
        // TODO: update the code to test the property clientKeyContent
        expect(instance).to.have.property('clientKeyContent');
        // expect(instance.clientKeyContent).to.be(expectedValueLiteral);
      });

      it('should have the property serverCertContent (base name: "serverCertContent")', function() {
        // TODO: update the code to test the property serverCertContent
        expect(instance).to.have.property('serverCertContent');
        // expect(instance.serverCertContent).to.be(expectedValueLiteral);
      });

      it('should have the property token (base name: "token")', function() {
        // TODO: update the code to test the property token
        expect(instance).to.have.property('token');
        // expect(instance.token).to.be(expectedValueLiteral);
      });

      it('should have the property enabled (base name: "enabled")', function() {
        // TODO: update the code to test the property enabled
        expect(instance).to.have.property('enabled');
        // expect(instance.enabled).to.be(expectedValueLiteral);
      });

      it('should have the property clientCertName (base name: "clientCertName")', function() {
        // TODO: update the code to test the property clientCertName
        expect(instance).to.have.property('clientCertName');
        // expect(instance.clientCertName).to.be(expectedValueLiteral);
      });

      it('should have the property clientKeyName (base name: "clientKeyName")', function() {
        // TODO: update the code to test the property clientKeyName
        expect(instance).to.have.property('clientKeyName');
        // expect(instance.clientKeyName).to.be(expectedValueLiteral);
      });

      it('should have the property serverCertName (base name: "serverCertName")', function() {
        // TODO: update the code to test the property serverCertName
        expect(instance).to.have.property('serverCertName');
        // expect(instance.serverCertName).to.be(expectedValueLiteral);
      });

      it('should have the property host (base name: "host")', function() {
        // TODO: update the code to test the property host
        expect(instance).to.have.property('host');
        // expect(instance.host).to.be(expectedValueLiteral);
      });

      it('should have the property format (base name: "format")', function() {
        // TODO: update the code to test the property format
        expect(instance).to.have.property('format');
        // expect(instance.format).to.be(expectedValueLiteral);
      });

      it('should have the property clientCertContent (base name: "clientCertContent")', function() {
        // TODO: update the code to test the property clientCertContent
        expect(instance).to.have.property('clientCertContent');
        // expect(instance.clientCertContent).to.be(expectedValueLiteral);
      });

    });
  });

}));
