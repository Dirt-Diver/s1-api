/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.S1MgmtApi);
  }
}(this, function(expect, S1MgmtApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('ReportsReportDataSchemaMany200Data', function() {
      beforeEach(function() {
        instance = new S1MgmtApi.ReportsReportDataSchemaMany200Data();
      });

      it('should create an instance of ReportsReportDataSchemaMany200Data', function() {
        // TODO: update the code to test ReportsReportDataSchemaMany200Data
        expect(instance).to.be.a(S1MgmtApi.ReportsReportDataSchemaMany200Data);
      });

      it('should have the property attachmentTypes (base name: "attachmentTypes")', function() {
        // TODO: update the code to test the property attachmentTypes
        expect(instance).to.have.property('attachmentTypes');
        // expect(instance.attachmentTypes).to.be(expectedValueLiteral);
      });

      it('should have the property toDate (base name: "toDate")', function() {
        // TODO: update the code to test the property toDate
        expect(instance).to.have.property('toDate');
        // expect(instance.toDate).to.be(expectedValueLiteral);
      });

      it('should have the property scheduleType (base name: "scheduleType")', function() {
        // TODO: update the code to test the property scheduleType
        expect(instance).to.have.property('scheduleType');
        // expect(instance.scheduleType).to.be(expectedValueLiteral);
      });

      it('should have the property name (base name: "name")', function() {
        // TODO: update the code to test the property name
        expect(instance).to.have.property('name');
        // expect(instance.name).to.be(expectedValueLiteral);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property interval (base name: "interval")', function() {
        // TODO: update the code to test the property interval
        expect(instance).to.have.property('interval');
        // expect(instance.interval).to.be(expectedValueLiteral);
      });

      it('should have the property createdAt (base name: "createdAt")', function() {
        // TODO: update the code to test the property createdAt
        expect(instance).to.have.property('createdAt');
        // expect(instance.createdAt).to.be(expectedValueLiteral);
      });

      it('should have the property creatorId (base name: "creatorId")', function() {
        // TODO: update the code to test the property creatorId
        expect(instance).to.have.property('creatorId');
        // expect(instance.creatorId).to.be(expectedValueLiteral);
      });

      it('should have the property sites (base name: "sites")', function() {
        // TODO: update the code to test the property sites
        expect(instance).to.have.property('sites');
        // expect(instance.sites).to.be(expectedValueLiteral);
      });

      it('should have the property insightTypes (base name: "insightTypes")', function() {
        // TODO: update the code to test the property insightTypes
        expect(instance).to.have.property('insightTypes');
        // expect(instance.insightTypes).to.be(expectedValueLiteral);
      });

      it('should have the property status (base name: "status")', function() {
        // TODO: update the code to test the property status
        expect(instance).to.have.property('status');
        // expect(instance.status).to.be(expectedValueLiteral);
      });

      it('should have the property frequency (base name: "frequency")', function() {
        // TODO: update the code to test the property frequency
        expect(instance).to.have.property('frequency');
        // expect(instance.frequency).to.be(expectedValueLiteral);
      });

      it('should have the property creatorName (base name: "creatorName")', function() {
        // TODO: update the code to test the property creatorName
        expect(instance).to.have.property('creatorName');
        // expect(instance.creatorName).to.be(expectedValueLiteral);
      });

      it('should have the property fromDate (base name: "fromDate")', function() {
        // TODO: update the code to test the property fromDate
        expect(instance).to.have.property('fromDate');
        // expect(instance.fromDate).to.be(expectedValueLiteral);
      });

      it('should have the property scope (base name: "scope")', function() {
        // TODO: update the code to test the property scope
        expect(instance).to.have.property('scope');
        // expect(instance.scope).to.be(expectedValueLiteral);
      });

    });
  });

}));
