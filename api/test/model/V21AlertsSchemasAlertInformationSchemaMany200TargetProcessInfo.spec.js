/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.S1MgmtApi);
  }
}(this, function(expect, S1MgmtApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('V21AlertsSchemasAlertInformationSchemaMany200TargetProcessInfo', function() {
      beforeEach(function() {
        instance = new S1MgmtApi.V21AlertsSchemasAlertInformationSchemaMany200TargetProcessInfo();
      });

      it('should create an instance of V21AlertsSchemasAlertInformationSchemaMany200TargetProcessInfo', function() {
        // TODO: update the code to test V21AlertsSchemasAlertInformationSchemaMany200TargetProcessInfo
        expect(instance).to.be.a(S1MgmtApi.V21AlertsSchemasAlertInformationSchemaMany200TargetProcessInfo);
      });

      it('should have the property tgtFileCreatedAt (base name: "tgtFileCreatedAt")', function() {
        // TODO: update the code to test the property tgtFileCreatedAt
        expect(instance).to.have.property('tgtFileCreatedAt');
        // expect(instance.tgtFileCreatedAt).to.be(expectedValueLiteral);
      });

      it('should have the property tgtProcSignedStatus (base name: "tgtProcSignedStatus")', function() {
        // TODO: update the code to test the property tgtProcSignedStatus
        expect(instance).to.have.property('tgtProcSignedStatus');
        // expect(instance.tgtProcSignedStatus).to.be(expectedValueLiteral);
      });

      it('should have the property tgtFilePath (base name: "tgtFilePath")', function() {
        // TODO: update the code to test the property tgtFilePath
        expect(instance).to.have.property('tgtFilePath');
        // expect(instance.tgtFilePath).to.be(expectedValueLiteral);
      });

      it('should have the property tgtFileHashSha256 (base name: "tgtFileHashSha256")', function() {
        // TODO: update the code to test the property tgtFileHashSha256
        expect(instance).to.have.property('tgtFileHashSha256');
        // expect(instance.tgtFileHashSha256).to.be(expectedValueLiteral);
      });

      it('should have the property tgtFileModifiedAt (base name: "tgtFileModifiedAt")', function() {
        // TODO: update the code to test the property tgtFileModifiedAt
        expect(instance).to.have.property('tgtFileModifiedAt');
        // expect(instance.tgtFileModifiedAt).to.be(expectedValueLiteral);
      });

      it('should have the property tgtProcName (base name: "tgtProcName")', function() {
        // TODO: update the code to test the property tgtProcName
        expect(instance).to.have.property('tgtProcName');
        // expect(instance.tgtProcName).to.be(expectedValueLiteral);
      });

      it('should have the property tgtProcImagePath (base name: "tgtProcImagePath")', function() {
        // TODO: update the code to test the property tgtProcImagePath
        expect(instance).to.have.property('tgtProcImagePath');
        // expect(instance.tgtProcImagePath).to.be(expectedValueLiteral);
      });

      it('should have the property tgtFileHashSha1 (base name: "tgtFileHashSha1")', function() {
        // TODO: update the code to test the property tgtFileHashSha1
        expect(instance).to.have.property('tgtFileHashSha1');
        // expect(instance.tgtFileHashSha1).to.be(expectedValueLiteral);
      });

      it('should have the property tgtFileIsSigned (base name: "tgtFileIsSigned")', function() {
        // TODO: update the code to test the property tgtFileIsSigned
        expect(instance).to.have.property('tgtFileIsSigned');
        // expect(instance.tgtFileIsSigned).to.be(expectedValueLiteral);
      });

      it('should have the property tgtProcStorylineId (base name: "tgtProcStorylineId")', function() {
        // TODO: update the code to test the property tgtProcStorylineId
        expect(instance).to.have.property('tgtProcStorylineId');
        // expect(instance.tgtProcStorylineId).to.be(expectedValueLiteral);
      });

      it('should have the property tgtProcPid (base name: "tgtProcPid")', function() {
        // TODO: update the code to test the property tgtProcPid
        expect(instance).to.have.property('tgtProcPid');
        // expect(instance.tgtProcPid).to.be(expectedValueLiteral);
      });

      it('should have the property tgtProcIntegrityLevel (base name: "tgtProcIntegrityLevel")', function() {
        // TODO: update the code to test the property tgtProcIntegrityLevel
        expect(instance).to.have.property('tgtProcIntegrityLevel');
        // expect(instance.tgtProcIntegrityLevel).to.be(expectedValueLiteral);
      });

      it('should have the property tgtProcCmdLine (base name: "tgtProcCmdLine")', function() {
        // TODO: update the code to test the property tgtProcCmdLine
        expect(instance).to.have.property('tgtProcCmdLine');
        // expect(instance.tgtProcCmdLine).to.be(expectedValueLiteral);
      });

      it('should have the property tgtFileId (base name: "tgtFileId")', function() {
        // TODO: update the code to test the property tgtFileId
        expect(instance).to.have.property('tgtFileId');
        // expect(instance.tgtFileId).to.be(expectedValueLiteral);
      });

      it('should have the property tgtProcUid (base name: "tgtProcUid")', function() {
        // TODO: update the code to test the property tgtProcUid
        expect(instance).to.have.property('tgtProcUid');
        // expect(instance.tgtProcUid).to.be(expectedValueLiteral);
      });

      it('should have the property tgtProcessStartTime (base name: "tgtProcessStartTime")', function() {
        // TODO: update the code to test the property tgtProcessStartTime
        expect(instance).to.have.property('tgtProcessStartTime');
        // expect(instance.tgtProcessStartTime).to.be(expectedValueLiteral);
      });

      it('should have the property tgtFileOldPath (base name: "tgtFileOldPath")', function() {
        // TODO: update the code to test the property tgtFileOldPath
        expect(instance).to.have.property('tgtFileOldPath');
        // expect(instance.tgtFileOldPath).to.be(expectedValueLiteral);
      });

    });
  });

}));
