/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.S1MgmtApi);
  }
}(this, function(expect, S1MgmtApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('AgentsSchemasAgentViewSchemaMany200NetworkInterfaces', function() {
      beforeEach(function() {
        instance = new S1MgmtApi.AgentsSchemasAgentViewSchemaMany200NetworkInterfaces();
      });

      it('should create an instance of AgentsSchemasAgentViewSchemaMany200NetworkInterfaces', function() {
        // TODO: update the code to test AgentsSchemasAgentViewSchemaMany200NetworkInterfaces
        expect(instance).to.be.a(S1MgmtApi.AgentsSchemasAgentViewSchemaMany200NetworkInterfaces);
      });

      it('should have the property name (base name: "name")', function() {
        // TODO: update the code to test the property name
        expect(instance).to.have.property('name');
        // expect(instance.name).to.be(expectedValueLiteral);
      });

      it('should have the property physical (base name: "physical")', function() {
        // TODO: update the code to test the property physical
        expect(instance).to.have.property('physical');
        // expect(instance.physical).to.be(expectedValueLiteral);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property gatewayMacAddress (base name: "gatewayMacAddress")', function() {
        // TODO: update the code to test the property gatewayMacAddress
        expect(instance).to.have.property('gatewayMacAddress');
        // expect(instance.gatewayMacAddress).to.be(expectedValueLiteral);
      });

      it('should have the property gatewayIp (base name: "gatewayIp")', function() {
        // TODO: update the code to test the property gatewayIp
        expect(instance).to.have.property('gatewayIp');
        // expect(instance.gatewayIp).to.be(expectedValueLiteral);
      });

      it('should have the property inet (base name: "inet")', function() {
        // TODO: update the code to test the property inet
        expect(instance).to.have.property('inet');
        // expect(instance.inet).to.be(expectedValueLiteral);
      });

      it('should have the property inet6 (base name: "inet6")', function() {
        // TODO: update the code to test the property inet6
        expect(instance).to.have.property('inet6');
        // expect(instance.inet6).to.be(expectedValueLiteral);
      });

    });
  });

}));
