/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.S1MgmtApi);
  }
}(this, function(expect, S1MgmtApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('RangerEnablementSchemasUpdateSelfEnablementFeaturesSchemaFilter', function() {
      beforeEach(function() {
        instance = new S1MgmtApi.RangerEnablementSchemasUpdateSelfEnablementFeaturesSchemaFilter();
      });

      it('should create an instance of RangerEnablementSchemasUpdateSelfEnablementFeaturesSchemaFilter', function() {
        // TODO: update the code to test RangerEnablementSchemasUpdateSelfEnablementFeaturesSchemaFilter
        expect(instance).to.be.a(S1MgmtApi.RangerEnablementSchemasUpdateSelfEnablementFeaturesSchemaFilter);
      });

      it('should have the property activeAgentsGt (base name: "activeAgents__gt")', function() {
        // TODO: update the code to test the property activeAgentsGt
        expect(instance).to.have.property('activeAgentsGt');
        // expect(instance.activeAgentsGt).to.be(expectedValueLiteral);
      });

      it('should have the property rangerProEnabled (base name: "rangerProEnabled")', function() {
        // TODO: update the code to test the property rangerProEnabled
        expect(instance).to.have.property('rangerProEnabled');
        // expect(instance.rangerProEnabled).to.be(expectedValueLiteral);
      });

      it('should have the property activeAgentsGte (base name: "activeAgents__gte")', function() {
        // TODO: update the code to test the property activeAgentsGte
        expect(instance).to.have.property('activeAgentsGte');
        // expect(instance.activeAgentsGte).to.be(expectedValueLiteral);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property accountIds (base name: "accountIds")', function() {
        // TODO: update the code to test the property accountIds
        expect(instance).to.have.property('accountIds');
        // expect(instance.accountIds).to.be(expectedValueLiteral);
      });

      it('should have the property siteIds (base name: "siteIds")', function() {
        // TODO: update the code to test the property siteIds
        expect(instance).to.have.property('siteIds');
        // expect(instance.siteIds).to.be(expectedValueLiteral);
      });

      it('should have the property activeAgents (base name: "activeAgents")', function() {
        // TODO: update the code to test the property activeAgents
        expect(instance).to.have.property('activeAgents');
        // expect(instance.activeAgents).to.be(expectedValueLiteral);
      });

      it('should have the property activeAgentsLte (base name: "activeAgents__lte")', function() {
        // TODO: update the code to test the property activeAgentsLte
        expect(instance).to.have.property('activeAgentsLte');
        // expect(instance.activeAgentsLte).to.be(expectedValueLiteral);
      });

      it('should have the property activeAgentsLt (base name: "activeAgents__lt")', function() {
        // TODO: update the code to test the property activeAgentsLt
        expect(instance).to.have.property('activeAgentsLt');
        // expect(instance.activeAgentsLt).to.be(expectedValueLiteral);
      });

      it('should have the property roguesEnabled (base name: "roguesEnabled")', function() {
        // TODO: update the code to test the property roguesEnabled
        expect(instance).to.have.property('roguesEnabled');
        // expect(instance.roguesEnabled).to.be(expectedValueLiteral);
      });

      it('should have the property siteName (base name: "siteName")', function() {
        // TODO: update the code to test the property siteName
        expect(instance).to.have.property('siteName');
        // expect(instance.siteName).to.be(expectedValueLiteral);
      });

      it('should have the property ids (base name: "ids")', function() {
        // TODO: update the code to test the property ids
        expect(instance).to.have.property('ids');
        // expect(instance.ids).to.be(expectedValueLiteral);
      });

      it('should have the property siteNameContains (base name: "siteName__contains")', function() {
        // TODO: update the code to test the property siteNameContains
        expect(instance).to.have.property('siteNameContains');
        // expect(instance.siteNameContains).to.be(expectedValueLiteral);
      });

      it('should have the property activeAgentsBetween (base name: "activeAgents__between")', function() {
        // TODO: update the code to test the property activeAgentsBetween
        expect(instance).to.have.property('activeAgentsBetween');
        // expect(instance.activeAgentsBetween).to.be(expectedValueLiteral);
      });

      it('should have the property tenant (base name: "tenant")', function() {
        // TODO: update the code to test the property tenant
        expect(instance).to.have.property('tenant');
        // expect(instance.tenant).to.be(expectedValueLiteral);
      });

      it('should have the property groupIds (base name: "groupIds")', function() {
        // TODO: update the code to test the property groupIds
        expect(instance).to.have.property('groupIds');
        // expect(instance.groupIds).to.be(expectedValueLiteral);
      });

      it('should have the property rangerEnabled (base name: "rangerEnabled")', function() {
        // TODO: update the code to test the property rangerEnabled
        expect(instance).to.have.property('rangerEnabled');
        // expect(instance.rangerEnabled).to.be(expectedValueLiteral);
      });

    });
  });

}));
