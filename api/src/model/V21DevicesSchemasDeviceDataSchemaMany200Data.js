/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/V21DevicesSchemasDeviceDataSchemaMany200AlertCounts', 'model/V21DevicesSchemasDeviceDataSchemaMany200ThreatCounts'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./V21DevicesSchemasDeviceDataSchemaMany200AlertCounts'), require('./V21DevicesSchemasDeviceDataSchemaMany200ThreatCounts'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.V21DevicesSchemasDeviceDataSchemaMany200Data = factory(root.S1MgmtApi.ApiClient, root.S1MgmtApi.V21DevicesSchemasDeviceDataSchemaMany200AlertCounts, root.S1MgmtApi.V21DevicesSchemasDeviceDataSchemaMany200ThreatCounts);
  }
}(this, function(ApiClient, V21DevicesSchemasDeviceDataSchemaMany200AlertCounts, V21DevicesSchemasDeviceDataSchemaMany200ThreatCounts) {
  'use strict';

  /**
   * The V21DevicesSchemasDeviceDataSchemaMany200Data model module.
   * @module model/V21DevicesSchemasDeviceDataSchemaMany200Data
   * @version 2.1
   */

  /**
   * Constructs a new <code>V21DevicesSchemasDeviceDataSchemaMany200Data</code>.
   * @alias module:model/V21DevicesSchemasDeviceDataSchemaMany200Data
   * @class
   * @param siteId {String} A reference to the containing site
   * @param accountId {String} A reference to the containing account
   * @param id {Number} Id
   * @param alertCounts {module:model/V21DevicesSchemasDeviceDataSchemaMany200AlertCounts} 
   * @param groupId {String} A reference to the containing network group
   * @param accountName {String} Name of the containing account
   * @param siteName {String} Name of the containing site
   * @param registrationSource {String} MDM name or initiator in case of activations
   * @param deviceId {String} MDM device ID
   * @param groupName {String} Name of the containing network group
   * @param registrationType {module:model/V21DevicesSchemasDeviceDataSchemaMany200Data.RegistrationTypeEnum} Registration type
   * @param threatCounts {module:model/V21DevicesSchemasDeviceDataSchemaMany200ThreatCounts} 
   */
  var exports = function(siteId, accountId, id, alertCounts, groupId, accountName, siteName, registrationSource, deviceId, groupName, registrationType, threatCounts) {
    this.siteId = siteId;
    this.accountId = accountId;
    this.id = id;
    this.alertCounts = alertCounts;
    this.groupId = groupId;
    this.accountName = accountName;
    this.siteName = siteName;
    this.registrationSource = registrationSource;
    this.deviceId = deviceId;
    this.groupName = groupName;
    this.registrationType = registrationType;
    this.threatCounts = threatCounts;
  };

  /**
   * Constructs a <code>V21DevicesSchemasDeviceDataSchemaMany200Data</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/V21DevicesSchemasDeviceDataSchemaMany200Data} obj Optional instance to populate.
   * @return {module:model/V21DevicesSchemasDeviceDataSchemaMany200Data} The populated <code>V21DevicesSchemasDeviceDataSchemaMany200Data</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('stagefreightVulnerable'))
        obj.stagefreightVulnerable = ApiClient.convertToType(data['stagefreightVulnerable'], 'Boolean');
      if (data.hasOwnProperty('appState'))
        obj.appState = ApiClient.convertToType(data['appState'], 'String');
      if (data.hasOwnProperty('lastActiveOn'))
        obj.lastActiveOn = ApiClient.convertToType(data['lastActiveOn'], 'String');
      if (data.hasOwnProperty('siteId'))
        obj.siteId = ApiClient.convertToType(data['siteId'], 'String');
      if (data.hasOwnProperty('owner'))
        obj.owner = ApiClient.convertToType(data['owner'], 'String');
      if (data.hasOwnProperty('accountId'))
        obj.accountId = ApiClient.convertToType(data['accountId'], 'String');
      if (data.hasOwnProperty('encrypted'))
        obj.encrypted = ApiClient.convertToType(data['encrypted'], 'Boolean');
      if (data.hasOwnProperty('screenLocked'))
        obj.screenLocked = ApiClient.convertToType(data['screenLocked'], 'Boolean');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('alertCounts'))
        obj.alertCounts = V21DevicesSchemasDeviceDataSchemaMany200AlertCounts.constructFromObject(data['alertCounts']);
      if (data.hasOwnProperty('groupId'))
        obj.groupId = ApiClient.convertToType(data['groupId'], 'String');
      if (data.hasOwnProperty('privileges'))
        obj.privileges = ApiClient.convertToType(data['privileges'], 'String');
      if (data.hasOwnProperty('accountName'))
        obj.accountName = ApiClient.convertToType(data['accountName'], 'String');
      if (data.hasOwnProperty('siteName'))
        obj.siteName = ApiClient.convertToType(data['siteName'], 'String');
      if (data.hasOwnProperty('registrationDate'))
        obj.registrationDate = ApiClient.convertToType(data['registrationDate'], 'String');
      if (data.hasOwnProperty('debugMode'))
        obj.debugMode = ApiClient.convertToType(data['debugMode'], 'Boolean');
      if (data.hasOwnProperty('registrationSource'))
        obj.registrationSource = ApiClient.convertToType(data['registrationSource'], 'String');
      if (data.hasOwnProperty('model'))
        obj.model = ApiClient.convertToType(data['model'], 'String');
      if (data.hasOwnProperty('deviceId'))
        obj.deviceId = ApiClient.convertToType(data['deviceId'], 'String');
      if (data.hasOwnProperty('policyUpdatedAt'))
        obj.policyUpdatedAt = ApiClient.convertToType(data['policyUpdatedAt'], 'String');
      if (data.hasOwnProperty('healthState'))
        obj.healthState = ApiClient.convertToType(data['healthState'], 'String');
      if (data.hasOwnProperty('appVersion'))
        obj.appVersion = ApiClient.convertToType(data['appVersion'], 'String');
      if (data.hasOwnProperty('unofficialAppstore'))
        obj.unofficialAppstore = ApiClient.convertToType(data['unofficialAppstore'], 'Boolean');
      if (data.hasOwnProperty('protected'))
        obj._protected = ApiClient.convertToType(data['protected'], 'Boolean');
      if (data.hasOwnProperty('trackingId1'))
        obj.trackingId1 = ApiClient.convertToType(data['trackingId1'], 'String');
      if (data.hasOwnProperty('developerMode'))
        obj.developerMode = ApiClient.convertToType(data['developerMode'], 'Boolean');
      if (data.hasOwnProperty('groupName'))
        obj.groupName = ApiClient.convertToType(data['groupName'], 'String');
      if (data.hasOwnProperty('trackingId2'))
        obj.trackingId2 = ApiClient.convertToType(data['trackingId2'], 'String');
      if (data.hasOwnProperty('managedState'))
        obj.managedState = ApiClient.convertToType(data['managedState'], 'String');
      if (data.hasOwnProperty('registrationType'))
        obj.registrationType = ApiClient.convertToType(data['registrationType'], 'String');
      if (data.hasOwnProperty('threatCounts'))
        obj.threatCounts = V21DevicesSchemasDeviceDataSchemaMany200ThreatCounts.constructFromObject(data['threatCounts']);
      if (data.hasOwnProperty('osVersion'))
        obj.osVersion = ApiClient.convertToType(data['osVersion'], 'String');
      if (data.hasOwnProperty('registeredOn'))
        obj.registeredOn = ApiClient.convertToType(data['registeredOn'], 'String');
      if (data.hasOwnProperty('platform'))
        obj.platform = ApiClient.convertToType(data['platform'], 'String');
    }
    return obj;
  }

  /**
   * Stagefreightvulnerable
   * @member {Boolean} stagefreightVulnerable
   */
  exports.prototype.stagefreightVulnerable = undefined;

  /**
   * ZipApp state
   * @member {module:model/V21DevicesSchemasDeviceDataSchemaMany200Data.AppStateEnum} appState
   */
  exports.prototype.appState = undefined;

  /**
   * When we received last heartbeat
   * @member {String} lastActiveOn
   */
  exports.prototype.lastActiveOn = undefined;

  /**
   * A reference to the containing site
   * @member {String} siteId
   */
  exports.prototype.siteId = undefined;

  /**
   * User email
   * @member {String} owner
   */
  exports.prototype.owner = undefined;

  /**
   * A reference to the containing account
   * @member {String} accountId
   */
  exports.prototype.accountId = undefined;

  /**
   * Encrypted
   * @member {Boolean} encrypted
   */
  exports.prototype.encrypted = undefined;

  /**
   * Screenlocked
   * @member {Boolean} screenLocked
   */
  exports.prototype.screenLocked = undefined;

  /**
   * Id
   * @member {Number} id
   */
  exports.prototype.id = undefined;

  /**
   * @member {module:model/V21DevicesSchemasDeviceDataSchemaMany200AlertCounts} alertCounts
   */
  exports.prototype.alertCounts = undefined;

  /**
   * A reference to the containing network group
   * @member {String} groupId
   */
  exports.prototype.groupId = undefined;

  /**
   * Either rooted or jailbroken for devices with privileges. Otherwise none
   * @member {module:model/V21DevicesSchemasDeviceDataSchemaMany200Data.PrivilegesEnum} privileges
   */
  exports.prototype.privileges = undefined;

  /**
   * Name of the containing account
   * @member {String} accountName
   */
  exports.prototype.accountName = undefined;

  /**
   * Name of the containing site
   * @member {String} siteName
   */
  exports.prototype.siteName = undefined;

  /**
   * When the activation for this device was created
   * @member {String} registrationDate
   */
  exports.prototype.registrationDate = undefined;

  /**
   * Debugmode
   * @member {Boolean} debugMode
   */
  exports.prototype.debugMode = undefined;

  /**
   * MDM name or initiator in case of activations
   * @member {String} registrationSource
   */
  exports.prototype.registrationSource = undefined;

  /**
   * Device manufacturer and model
   * @member {String} model
   */
  exports.prototype.model = undefined;

  /**
   * MDM device ID
   * @member {String} deviceId
   */
  exports.prototype.deviceId = undefined;

  /**
   * When the corresponding policy was updated
   * @member {String} policyUpdatedAt
   */
  exports.prototype.policyUpdatedAt = undefined;

  /**
   * Highest health state of the device
   * @member {module:model/V21DevicesSchemasDeviceDataSchemaMany200Data.HealthStateEnum} healthState
   */
  exports.prototype.healthState = undefined;

  /**
   * Version of the ZippApp
   * @member {String} appVersion
   */
  exports.prototype.appVersion = undefined;

  /**
   * Unofficialappstore
   * @member {Boolean} unofficialAppstore
   */
  exports.prototype.unofficialAppstore = undefined;

  /**
   * Protected
   * @member {Boolean} _protected
   */
  exports.prototype._protected = undefined;

  /**
   * External tracking ID of device
   * @member {String} trackingId1
   */
  exports.prototype.trackingId1 = undefined;

  /**
   * Developermode
   * @member {Boolean} developerMode
   */
  exports.prototype.developerMode = undefined;

  /**
   * Name of the containing network group
   * @member {String} groupName
   */
  exports.prototype.groupName = undefined;

  /**
   * Another external tracking ID of device
   * @member {String} trackingId2
   */
  exports.prototype.trackingId2 = undefined;

  /**
   * UEM state of the device
   * @member {module:model/V21DevicesSchemasDeviceDataSchemaMany200Data.ManagedStateEnum} managedState
   */
  exports.prototype.managedState = undefined;

  /**
   * Registration type
   * @member {module:model/V21DevicesSchemasDeviceDataSchemaMany200Data.RegistrationTypeEnum} registrationType
   */
  exports.prototype.registrationType = undefined;

  /**
   * @member {module:model/V21DevicesSchemasDeviceDataSchemaMany200ThreatCounts} threatCounts
   */
  exports.prototype.threatCounts = undefined;

  /**
   * Device os version
   * @member {String} osVersion
   */
  exports.prototype.osVersion = undefined;

  /**
   * When the ZippApp registered
   * @member {String} registeredOn
   */
  exports.prototype.registeredOn = undefined;

  /**
   * Device platform
   * @member {module:model/V21DevicesSchemasDeviceDataSchemaMany200Data.PlatformEnum} platform
   */
  exports.prototype.platform = undefined;



  /**
   * Allowed values for the <code>appState</code> property.
   * @enum {String}
   * @readonly
   */
  exports.AppStateEnum = {
    /**
     * value: "unknown"
     * @const
     */
    unknown: "unknown",

    /**
     * value: "registered"
     * @const
     */
    registered: "registered"
  };


  /**
   * Allowed values for the <code>privileges</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PrivilegesEnum = {
    /**
     * value: "none"
     * @const
     */
    none: "none",

    /**
     * value: "rooted"
     * @const
     */
    rooted: "rooted",

    /**
     * value: "jailbroken"
     * @const
     */
    jailbroken: "jailbroken"
  };


  /**
   * Allowed values for the <code>healthState</code> property.
   * @enum {String}
   * @readonly
   */
  exports.HealthStateEnum = {
    /**
     * value: "normal"
     * @const
     */
    normal: "normal",

    /**
     * value: "low"
     * @const
     */
    low: "low",

    /**
     * value: "medium"
     * @const
     */
    medium: "medium",

    /**
     * value: "high"
     * @const
     */
    high: "high",

    /**
     * value: "critical"
     * @const
     */
    critical: "critical",

    /**
     * value: "not_activated"
     * @const
     */
    notActivated: "not_activated"
  };


  /**
   * Allowed values for the <code>managedState</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ManagedStateEnum = {
    /**
     * value: "unknown"
     * @const
     */
    unknown: "unknown",

    /**
     * value: "synced"
     * @const
     */
    synced: "synced",

    /**
     * value: "deleted"
     * @const
     */
    deleted: "deleted"
  };


  /**
   * Allowed values for the <code>registrationType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.RegistrationTypeEnum = {
    /**
     * value: "mdm"
     * @const
     */
    mdm: "mdm",

    /**
     * value: "invite"
     * @const
     */
    invite: "invite",

    /**
     * value: "global_link"
     * @const
     */
    globalLink: "global_link"
  };


  /**
   * Allowed values for the <code>platform</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PlatformEnum = {
    /**
     * value: "android"
     * @const
     */
    android: "android",

    /**
     * value: "ios"
     * @const
     */
    ios: "ios",

    /**
     * value: "chrome_os"
     * @const
     */
    chromeOs: "chrome_os"
  };

  return exports;

}));
