/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AgentsSchemasStartRemoteShellSchemaDataPasswordFromScope'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AgentsSchemasStartRemoteShellSchemaDataPasswordFromScope'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.AgentsSchemasStartRemoteShellSchemaData = factory(root.S1MgmtApi.ApiClient, root.S1MgmtApi.AgentsSchemasStartRemoteShellSchemaDataPasswordFromScope);
  }
}(this, function(ApiClient, AgentsSchemasStartRemoteShellSchemaDataPasswordFromScope) {
  'use strict';

  /**
   * The AgentsSchemasStartRemoteShellSchemaData model module.
   * @module model/AgentsSchemasStartRemoteShellSchemaData
   * @version 2.1
   */

  /**
   * Constructs a new <code>AgentsSchemasStartRemoteShellSchemaData</code>.
   * Data
   * @alias module:model/AgentsSchemasStartRemoteShellSchemaData
   * @class
   * @param twoFaCode {String} The 2FA code to authenticate the user
   * @param columns {Number} Number of columns of the console shell
   * @param rows {Number} Number of rows of the console shell
   */
  var exports = function(twoFaCode, columns, rows) {
    this.twoFaCode = twoFaCode;
    this.columns = columns;
    this.rows = rows;
  };

  /**
   * Constructs a <code>AgentsSchemasStartRemoteShellSchemaData</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AgentsSchemasStartRemoteShellSchemaData} obj Optional instance to populate.
   * @return {module:model/AgentsSchemasStartRemoteShellSchemaData} The populated <code>AgentsSchemasStartRemoteShellSchemaData</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('historyPassword'))
        obj.historyPassword = ApiClient.convertToType(data['historyPassword'], 'String');
      if (data.hasOwnProperty('twoFaCode'))
        obj.twoFaCode = ApiClient.convertToType(data['twoFaCode'], 'String');
      if (data.hasOwnProperty('columns'))
        obj.columns = ApiClient.convertToType(data['columns'], 'Number');
      if (data.hasOwnProperty('rows'))
        obj.rows = ApiClient.convertToType(data['rows'], 'Number');
      if (data.hasOwnProperty('passwordFromScope'))
        obj.passwordFromScope = AgentsSchemasStartRemoteShellSchemaDataPasswordFromScope.constructFromObject(data['passwordFromScope']);
    }
    return obj;
  }

  /**
   * Password to zip the shell history file at end of session
   * @member {String} historyPassword
   */
  exports.prototype.historyPassword = undefined;

  /**
   * The 2FA code to authenticate the user
   * @member {String} twoFaCode
   */
  exports.prototype.twoFaCode = undefined;

  /**
   * Number of columns of the console shell
   * @member {Number} columns
   */
  exports.prototype.columns = undefined;

  /**
   * Number of rows of the console shell
   * @member {Number} rows
   */
  exports.prototype.rows = undefined;

  /**
   * @member {module:model/AgentsSchemasStartRemoteShellSchemaDataPasswordFromScope} passwordFromScope
   */
  exports.prototype.passwordFromScope = undefined;


  return exports;

}));
