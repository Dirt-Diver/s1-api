/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.ReportsReportTaskDeleteSchemaFilter = factory(root.S1MgmtApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The ReportsReportTaskDeleteSchemaFilter model module.
   * @module model/ReportsReportTaskDeleteSchemaFilter
   * @version 2.1
   */

  /**
   * Constructs a new <code>ReportsReportTaskDeleteSchemaFilter</code>.
   * Filter
   * @alias module:model/ReportsReportTaskDeleteSchemaFilter
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>ReportsReportTaskDeleteSchemaFilter</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ReportsReportTaskDeleteSchemaFilter} obj Optional instance to populate.
   * @return {module:model/ReportsReportTaskDeleteSchemaFilter} The populated <code>ReportsReportTaskDeleteSchemaFilter</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('createdAt__gte'))
        obj.createdAtGte = ApiClient.convertToType(data['createdAt__gte'], 'Date');
      if (data.hasOwnProperty('scheduleType'))
        obj.scheduleType = ApiClient.convertToType(data['scheduleType'], 'String');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('accountIds'))
        obj.accountIds = ApiClient.convertToType(data['accountIds'], ['String']);
      if (data.hasOwnProperty('siteIds'))
        obj.siteIds = ApiClient.convertToType(data['siteIds'], ['String']);
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('interval'))
        obj.interval = ApiClient.convertToType(data['interval'], 'String');
      if (data.hasOwnProperty('sites'))
        obj.sites = ApiClient.convertToType(data['sites'], 'String');
      if (data.hasOwnProperty('ids'))
        obj.ids = ApiClient.convertToType(data['ids'], ['String']);
      if (data.hasOwnProperty('createdAt__lte'))
        obj.createdAtLte = ApiClient.convertToType(data['createdAt__lte'], 'Date');
      if (data.hasOwnProperty('query'))
        obj.query = ApiClient.convertToType(data['query'], 'String');
      if (data.hasOwnProperty('frequency'))
        obj.frequency = ApiClient.convertToType(data['frequency'], 'String');
      if (data.hasOwnProperty('groupIds'))
        obj.groupIds = ApiClient.convertToType(data['groupIds'], ['String']);
      if (data.hasOwnProperty('scope'))
        obj.scope = ApiClient.convertToType(data['scope'], 'String');
      if (data.hasOwnProperty('isTrend'))
        obj.isTrend = ApiClient.convertToType(data['isTrend'], 'Boolean');
    }
    return obj;
  }

  /**
   * Created at gte
   * @member {Date} createdAtGte
   */
  exports.prototype.createdAtGte = undefined;

  /**
   * Report type
   * @member {module:model/ReportsReportTaskDeleteSchemaFilter.ScheduleTypeEnum} scheduleType
   */
  exports.prototype.scheduleType = undefined;

  /**
   * Id
   * @member {String} id
   */
  exports.prototype.id = undefined;

  /**
   * List of Account IDs to filter by
   * @member {Array.<String>} accountIds
   */
  exports.prototype.accountIds = undefined;

  /**
   * List of Site IDs to filter by
   * @member {Array.<String>} siteIds
   */
  exports.prototype.siteIds = undefined;

  /**
   * Name
   * @member {String} name
   */
  exports.prototype.name = undefined;

  /**
   * Interval
   * @member {String} interval
   */
  exports.prototype.interval = undefined;

  /**
   * Sites
   * @member {String} sites
   */
  exports.prototype.sites = undefined;

  /**
   * Id in
   * @member {Array.<String>} ids
   */
  exports.prototype.ids = undefined;

  /**
   * Created at lte
   * @member {Date} createdAtLte
   */
  exports.prototype.createdAtLte = undefined;

  /**
   * Query
   * @member {String} query
   */
  exports.prototype.query = undefined;

  /**
   * Frequency
   * @member {module:model/ReportsReportTaskDeleteSchemaFilter.FrequencyEnum} frequency
   */
  exports.prototype.frequency = undefined;

  /**
   * List of Group IDs to filter by
   * @member {Array.<String>} groupIds
   */
  exports.prototype.groupIds = undefined;

  /**
   * Scope
   * @member {module:model/ReportsReportTaskDeleteSchemaFilter.ScopeEnum} scope
   */
  exports.prototype.scope = undefined;

  /**
   * Is trend
   * @member {Boolean} isTrend
   */
  exports.prototype.isTrend = undefined;



  /**
   * Allowed values for the <code>scheduleType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ScheduleTypeEnum = {
    /**
     * value: "manually"
     * @const
     */
    manually: "manually",

    /**
     * value: "scheduled"
     * @const
     */
    scheduled: "scheduled"
  };


  /**
   * Allowed values for the <code>frequency</code> property.
   * @enum {String}
   * @readonly
   */
  exports.FrequencyEnum = {
    /**
     * value: "manually"
     * @const
     */
    manually: "manually",

    /**
     * value: "weekly"
     * @const
     */
    weekly: "weekly",

    /**
     * value: "monthly"
     * @const
     */
    monthly: "monthly"
  };


  /**
   * Allowed values for the <code>scope</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ScopeEnum = {
    /**
     * value: "group"
     * @const
     */
    group: "group",

    /**
     * value: "site"
     * @const
     */
    site: "site",

    /**
     * value: "account"
     * @const
     */
    account: "account",

    /**
     * value: "tenant"
     * @const
     */
    tenant: "tenant"
  };

  return exports;

}));
