/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.SitesSiteWithUserSchema200DataUser = factory(root.S1MgmtApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The SitesSiteWithUserSchema200DataUser model module.
   * @module model/SitesSiteWithUserSchema200DataUser
   * @version 2.1
   */

  /**
   * Constructs a new <code>SitesSiteWithUserSchema200DataUser</code>.
   * The data of the newly created site admin
   * @alias module:model/SitesSiteWithUserSchema200DataUser
   * @class
   * @param fullName {String} Full name
   * @param email {String} Email
   */
  var exports = function(fullName, email) {
    this.fullName = fullName;
    this.email = email;
  };

  /**
   * Constructs a <code>SitesSiteWithUserSchema200DataUser</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SitesSiteWithUserSchema200DataUser} obj Optional instance to populate.
   * @return {module:model/SitesSiteWithUserSchema200DataUser} The populated <code>SitesSiteWithUserSchema200DataUser</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('primaryTwoFaMethod'))
        obj.primaryTwoFaMethod = ApiClient.convertToType(data['primaryTwoFaMethod'], 'String');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('fullName'))
        obj.fullName = ApiClient.convertToType(data['fullName'], 'String');
      if (data.hasOwnProperty('twoFaEnabled'))
        obj.twoFaEnabled = ApiClient.convertToType(data['twoFaEnabled'], 'Boolean');
      if (data.hasOwnProperty('email'))
        obj.email = ApiClient.convertToType(data['email'], 'String');
    }
    return obj;
  }

  /**
   * Primary two fa method
   * @member {String} primaryTwoFaMethod
   */
  exports.prototype.primaryTwoFaMethod = undefined;

  /**
   * Id
   * @member {String} id
   */
  exports.prototype.id = undefined;

  /**
   * Full name
   * @member {String} fullName
   */
  exports.prototype.fullName = undefined;

  /**
   * Two fa enabled
   * @member {Boolean} twoFaEnabled
   */
  exports.prototype.twoFaEnabled = undefined;

  /**
   * Email
   * @member {String} email
   */
  exports.prototype.email = undefined;


  return exports;

}));
