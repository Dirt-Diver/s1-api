/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.ForensicsApplicationContentFields200DataResultProcess = factory(root.S1MgmtApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The ForensicsApplicationContentFields200DataResultProcess model module.
   * @module model/ForensicsApplicationContentFields200DataResultProcess
   * @version 2.1
   */

  /**
   * Constructs a new <code>ForensicsApplicationContentFields200DataResultProcess</code>.
   * Process
   * @alias module:model/ForensicsApplicationContentFields200DataResultProcess
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>ForensicsApplicationContentFields200DataResultProcess</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ForensicsApplicationContentFields200DataResultProcess} obj Optional instance to populate.
   * @return {module:model/ForensicsApplicationContentFields200DataResultProcess} The populated <code>ForensicsApplicationContentFields200DataResultProcess</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('bundle_id'))
        obj.bundleId = ApiClient.convertToType(data['bundle_id'], 'String');
      if (data.hasOwnProperty('is_primary'))
        obj.isPrimary = ApiClient.convertToType(data['is_primary'], 'Boolean');
      if (data.hasOwnProperty('username'))
        obj.username = ApiClient.convertToType(data['username'], 'String');
      if (data.hasOwnProperty('created_date'))
        obj.createdDate = ApiClient.convertToType(data['created_date'], 'String');
      if (data.hasOwnProperty('pid'))
        obj.pid = ApiClient.convertToType(data['pid'], 'Number');
      if (data.hasOwnProperty('object_id'))
        obj.objectId = ApiClient.convertToType(data['object_id'], 'String');
      if (data.hasOwnProperty('is_root'))
        obj.isRoot = ApiClient.convertToType(data['is_root'], 'Boolean');
      if (data.hasOwnProperty('executable_file_id'))
        obj.executableFileId = ApiClient.convertToType(data['executable_file_id'], 'String');
      if (data.hasOwnProperty('display_name'))
        obj.displayName = ApiClient.convertToType(data['display_name'], 'String');
    }
    return obj;
  }

  /**
   * Bundle id
   * @member {String} bundleId
   */
  exports.prototype.bundleId = undefined;

  /**
   * Is primary
   * @member {Boolean} isPrimary
   */
  exports.prototype.isPrimary = undefined;

  /**
   * Username
   * @member {String} username
   */
  exports.prototype.username = undefined;

  /**
   * Created date
   * @member {String} createdDate
   */
  exports.prototype.createdDate = undefined;

  /**
   * Pid
   * @member {Number} pid
   */
  exports.prototype.pid = undefined;

  /**
   * Object id
   * @member {String} objectId
   */
  exports.prototype.objectId = undefined;

  /**
   * Is root
   * @member {Boolean} isRoot
   */
  exports.prototype.isRoot = undefined;

  /**
   * Executable file id
   * @member {String} executableFileId
   */
  exports.prototype.executableFileId = undefined;

  /**
   * Display name
   * @member {String} displayName
   */
  exports.prototype.displayName = undefined;


  return exports;

}));
