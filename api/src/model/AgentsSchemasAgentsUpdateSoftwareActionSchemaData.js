/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.AgentsSchemasAgentsUpdateSoftwareActionSchemaData = factory(root.S1MgmtApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The AgentsSchemasAgentsUpdateSoftwareActionSchemaData model module.
   * @module model/AgentsSchemasAgentsUpdateSoftwareActionSchemaData
   * @version 2.1
   */

  /**
   * Constructs a new <code>AgentsSchemasAgentsUpdateSoftwareActionSchemaData</code>.
   * Data
   * @alias module:model/AgentsSchemasAgentsUpdateSoftwareActionSchemaData
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>AgentsSchemasAgentsUpdateSoftwareActionSchemaData</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AgentsSchemasAgentsUpdateSoftwareActionSchemaData} obj Optional instance to populate.
   * @return {module:model/AgentsSchemasAgentsUpdateSoftwareActionSchemaData} The populated <code>AgentsSchemasAgentsUpdateSoftwareActionSchemaData</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('fileName'))
        obj.fileName = ApiClient.convertToType(data['fileName'], 'String');
      if (data.hasOwnProperty('osType'))
        obj.osType = ApiClient.convertToType(data['osType'], 'String');
      if (data.hasOwnProperty('path'))
        obj.path = ApiClient.convertToType(data['path'], 'String');
      if (data.hasOwnProperty('ignoreConflicts'))
        obj.ignoreConflicts = ApiClient.convertToType(data['ignoreConflicts'], 'Boolean');
      if (data.hasOwnProperty('isScheduled'))
        obj.isScheduled = ApiClient.convertToType(data['isScheduled'], 'Boolean');
      if (data.hasOwnProperty('packageId'))
        obj.packageId = ApiClient.convertToType(data['packageId'], 'String');
      if (data.hasOwnProperty('allowDowngrade'))
        obj.allowDowngrade = ApiClient.convertToType(data['allowDowngrade'], 'Boolean');
      if (data.hasOwnProperty('packageType'))
        obj.packageType = ApiClient.convertToType(data['packageType'], 'String');
    }
    return obj;
  }

  /**
   * Upgrade with a given uploaded package, locate package by its filename
   * @member {String} fileName
   */
  exports.prototype.fileName = undefined;

  /**
   * Filter by specific OS type, can be used in conjunction with \"fileName\" or \"path\"
   * @member {module:model/AgentsSchemasAgentsUpdateSoftwareActionSchemaData.OsTypeEnum} osType
   */
  exports.prototype.osType = undefined;

  /**
   * Upgrade from local path at the endpoint
   * @member {String} path
   */
  exports.prototype.path = undefined;

  /**
   * Ignore conflicts that may arise when you upgrade an Agent that has an active Upgrade Policy
   * @member {Boolean} ignoreConflicts
   * @default false
   */
  exports.prototype.ignoreConflicts = false;

  /**
   * Upgrade according to the defined scheduled in agent upgrade configuration
   * @member {Boolean} isScheduled
   */
  exports.prototype.isScheduled = undefined;

  /**
   * Upgrade with a given uploaded package, located package by its ID
   * @member {String} packageId
   */
  exports.prototype.packageId = undefined;

  /**
   * Allows or disallows downgrading the Agent version
   * @member {Boolean} allowDowngrade
   */
  exports.prototype.allowDowngrade = undefined;

  /**
   * Package type
   * @member {module:model/AgentsSchemasAgentsUpdateSoftwareActionSchemaData.PackageTypeEnum} packageType
   * @default 'AgentAndRanger'
   */
  exports.prototype.packageType = 'AgentAndRanger';



  /**
   * Allowed values for the <code>osType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.OsTypeEnum = {
    /**
     * value: "windows"
     * @const
     */
    windows: "windows",

    /**
     * value: "macos"
     * @const
     */
    macos: "macos",

    /**
     * value: "linux"
     * @const
     */
    linux: "linux",

    /**
     * value: "windows_legacy"
     * @const
     */
    windowsLegacy: "windows_legacy",

    /**
     * value: "threat_detection_netapp"
     * @const
     */
    threatDetectionNetapp: "threat_detection_netapp"
  };


  /**
   * Allowed values for the <code>packageType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PackageTypeEnum = {
    /**
     * value: "Agent"
     * @const
     */
    agent: "Agent",

    /**
     * value: "Ranger"
     * @const
     */
    ranger: "Ranger",

    /**
     * value: "AgentAndRanger"
     * @const
     */
    agentAndRanger: "AgentAndRanger"
  };

  return exports;

}));
