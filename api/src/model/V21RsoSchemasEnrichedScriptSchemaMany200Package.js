/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.V21RsoSchemasEnrichedScriptSchemaMany200Package = factory(root.S1MgmtApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The V21RsoSchemasEnrichedScriptSchemaMany200Package model module.
   * @module model/V21RsoSchemasEnrichedScriptSchemaMany200Package
   * @version 2.1
   */

  /**
   * Constructs a new <code>V21RsoSchemasEnrichedScriptSchemaMany200Package</code>.
   * Package
   * @alias module:model/V21RsoSchemasEnrichedScriptSchemaMany200Package
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>V21RsoSchemasEnrichedScriptSchemaMany200Package</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/V21RsoSchemasEnrichedScriptSchemaMany200Package} obj Optional instance to populate.
   * @return {module:model/V21RsoSchemasEnrichedScriptSchemaMany200Package} The populated <code>V21RsoSchemasEnrichedScriptSchemaMany200Package</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('fileName'))
        obj.fileName = ApiClient.convertToType(data['fileName'], 'String');
      if (data.hasOwnProperty('bucketName'))
        obj.bucketName = ApiClient.convertToType(data['bucketName'], 'String');
      if (data.hasOwnProperty('endpointExpiration'))
        obj.endpointExpiration = ApiClient.convertToType(data['endpointExpiration'], 'String');
      if (data.hasOwnProperty('fileSize'))
        obj.fileSize = ApiClient.convertToType(data['fileSize'], 'Number');
      if (data.hasOwnProperty('signature'))
        obj.signature = ApiClient.convertToType(data['signature'], 'String');
      if (data.hasOwnProperty('endpointExpirationSeconds'))
        obj.endpointExpirationSeconds = ApiClient.convertToType(data['endpointExpirationSeconds'], 'Number');
      if (data.hasOwnProperty('signatureType'))
        obj.signatureType = ApiClient.convertToType(data['signatureType'], 'String');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
    }
    return obj;
  }

  /**
   * File name with full path
   * @member {String} fileName
   */
  exports.prototype.fileName = undefined;

  /**
   * Bucket name
   * @member {String} bucketName
   */
  exports.prototype.bucketName = undefined;

  /**
   * Package expiration option on endpoint
   * @member {String} endpointExpiration
   */
  exports.prototype.endpointExpiration = undefined;

  /**
   * File size
   * @member {Number} fileSize
   */
  exports.prototype.fileSize = undefined;

  /**
   * Signature
   * @member {String} signature
   */
  exports.prototype.signature = undefined;

  /**
   * Package expiration time on endpoint
   * @member {Number} endpointExpirationSeconds
   */
  exports.prototype.endpointExpirationSeconds = undefined;

  /**
   * Signature type
   * @member {String} signatureType
   */
  exports.prototype.signatureType = undefined;

  /**
   * Package ID
   * @member {String} id
   */
  exports.prototype.id = undefined;


  return exports;

}));
