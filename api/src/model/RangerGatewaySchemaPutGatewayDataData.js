/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/SchemasRangerSettingsSchema200DataRestrictions'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./SchemasRangerSettingsSchema200DataRestrictions'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.RangerGatewaySchemaPutGatewayDataData = factory(root.S1MgmtApi.ApiClient, root.S1MgmtApi.SchemasRangerSettingsSchema200DataRestrictions);
  }
}(this, function(ApiClient, SchemasRangerSettingsSchema200DataRestrictions) {
  'use strict';

  /**
   * The RangerGatewaySchemaPutGatewayDataData model module.
   * @module model/RangerGatewaySchemaPutGatewayDataData
   * @version 2.1
   */

  /**
   * Constructs a new <code>RangerGatewaySchemaPutGatewayDataData</code>.
   * Data
   * @alias module:model/RangerGatewaySchemaPutGatewayDataData
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>RangerGatewaySchemaPutGatewayDataData</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/RangerGatewaySchemaPutGatewayDataData} obj Optional instance to populate.
   * @return {module:model/RangerGatewaySchemaPutGatewayDataData} The populated <code>RangerGatewaySchemaPutGatewayDataData</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('allowScan'))
        obj.allowScan = ApiClient.convertToType(data['allowScan'], 'Boolean');
      if (data.hasOwnProperty('snmpScan'))
        obj.snmpScan = ApiClient.convertToType(data['snmpScan'], 'Boolean');
      if (data.hasOwnProperty('accountId'))
        obj.accountId = ApiClient.convertToType(data['accountId'], 'Number');
      if (data.hasOwnProperty('udpPorts'))
        obj.udpPorts = ApiClient.convertToType(data['udpPorts'], ['Number']);
      if (data.hasOwnProperty('udpPortScan'))
        obj.udpPortScan = ApiClient.convertToType(data['udpPortScan'], 'Boolean');
      if (data.hasOwnProperty('icmpScan'))
        obj.icmpScan = ApiClient.convertToType(data['icmpScan'], 'Boolean');
      if (data.hasOwnProperty('tcpPorts'))
        obj.tcpPorts = ApiClient.convertToType(data['tcpPorts'], ['Number']);
      if (data.hasOwnProperty('tcpPortScan'))
        obj.tcpPortScan = ApiClient.convertToType(data['tcpPortScan'], 'Boolean');
      if (data.hasOwnProperty('siteId'))
        obj.siteId = ApiClient.convertToType(data['siteId'], 'Number');
      if (data.hasOwnProperty('scanOnlyLocalSubnets'))
        obj.scanOnlyLocalSubnets = ApiClient.convertToType(data['scanOnlyLocalSubnets'], 'Boolean');
      if (data.hasOwnProperty('networkName'))
        obj.networkName = ApiClient.convertToType(data['networkName'], 'String');
      if (data.hasOwnProperty('restrictions'))
        obj.restrictions = ApiClient.convertToType(data['restrictions'], [SchemasRangerSettingsSchema200DataRestrictions]);
      if (data.hasOwnProperty('multiCastSsdpScan'))
        obj.multiCastSsdpScan = ApiClient.convertToType(data['multiCastSsdpScan'], 'Boolean');
      if (data.hasOwnProperty('rdnsScan'))
        obj.rdnsScan = ApiClient.convertToType(data['rdnsScan'], 'Boolean');
      if (data.hasOwnProperty('archived'))
        obj.archived = ApiClient.convertToType(data['archived'], 'Boolean');
      if (data.hasOwnProperty('inheritSettings'))
        obj.inheritSettings = ApiClient.convertToType(data['inheritSettings'], 'Boolean');
      if (data.hasOwnProperty('mdnsScan'))
        obj.mdnsScan = ApiClient.convertToType(data['mdnsScan'], 'Boolean');
      if (data.hasOwnProperty('smbScan'))
        obj.smbScan = ApiClient.convertToType(data['smbScan'], 'Boolean');
    }
    return obj;
  }

  /**
   * Do we allow scanning in this network
   * @member {Boolean} allowScan
   */
  exports.prototype.allowScan = undefined;

  /**
   * SNMP scan enabled
   * @member {Boolean} snmpScan
   */
  exports.prototype.snmpScan = undefined;

  /**
   * The Account Id
   * @member {Number} accountId
   */
  exports.prototype.accountId = undefined;

  /**
   * Allowed UDP ports
   * @member {Array.<Number>} udpPorts
   */
  exports.prototype.udpPorts = undefined;

  /**
   * UDP Port scan enabled
   * @member {Boolean} udpPortScan
   */
  exports.prototype.udpPortScan = undefined;

  /**
   * ICMP scan enabled
   * @member {Boolean} icmpScan
   */
  exports.prototype.icmpScan = undefined;

  /**
   * Allowed TCP ports
   * @member {Array.<Number>} tcpPorts
   */
  exports.prototype.tcpPorts = undefined;

  /**
   * TCP Port scan enabled
   * @member {Boolean} tcpPortScan
   */
  exports.prototype.tcpPortScan = undefined;

  /**
   * The Site Id
   * @member {Number} siteId
   */
  exports.prototype.siteId = undefined;

  /**
   * Can we scan remote networks from this gateway
   * @member {Boolean} scanOnlyLocalSubnets
   */
  exports.prototype.scanOnlyLocalSubnets = undefined;

  /**
   * The network name
   * @member {String} networkName
   */
  exports.prototype.networkName = undefined;

  /**
   * A set of IP addresses that should not be scanned in the specific network
   * @member {Array.<module:model/SchemasRangerSettingsSchema200DataRestrictions>} restrictions
   */
  exports.prototype.restrictions = undefined;

  /**
   * Multicast SSDP scan enabled
   * @member {Boolean} multiCastSsdpScan
   */
  exports.prototype.multiCastSsdpScan = undefined;

  /**
   * RDNS scan enabled
   * @member {Boolean} rdnsScan
   */
  exports.prototype.rdnsScan = undefined;

  /**
   * Archived network
   * @member {Boolean} archived
   */
  exports.prototype.archived = undefined;

  /**
   * True if inherited values are taken from account settings
   * @member {Boolean} inheritSettings
   */
  exports.prototype.inheritSettings = undefined;

  /**
   * MDNS scan enabled
   * @member {Boolean} mdnsScan
   */
  exports.prototype.mdnsScan = undefined;

  /**
   * SMB scan enabled
   * @member {Boolean} smbScan
   */
  exports.prototype.smbScan = undefined;


  return exports;

}));
