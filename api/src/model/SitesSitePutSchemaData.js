/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/SitesSitePutSchemaDataLicenses', 'model/SitesSitePutSchemaDataPolicy'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./SitesSitePutSchemaDataLicenses'), require('./SitesSitePutSchemaDataPolicy'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.SitesSitePutSchemaData = factory(root.S1MgmtApi.ApiClient, root.S1MgmtApi.SitesSitePutSchemaDataLicenses, root.S1MgmtApi.SitesSitePutSchemaDataPolicy);
  }
}(this, function(ApiClient, SitesSitePutSchemaDataLicenses, SitesSitePutSchemaDataPolicy) {
  'use strict';

  /**
   * The SitesSitePutSchemaData model module.
   * @module model/SitesSitePutSchemaData
   * @version 2.1
   */

  /**
   * Constructs a new <code>SitesSitePutSchemaData</code>.
   * Data
   * @alias module:model/SitesSitePutSchemaData
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>SitesSitePutSchemaData</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SitesSitePutSchemaData} obj Optional instance to populate.
   * @return {module:model/SitesSitePutSchemaData} The populated <code>SitesSitePutSchemaData</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('externalId'))
        obj.externalId = ApiClient.convertToType(data['externalId'], 'String');
      if (data.hasOwnProperty('suite'))
        obj.suite = ApiClient.convertToType(data['suite'], 'String');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('unlimitedExpiration'))
        obj.unlimitedExpiration = ApiClient.convertToType(data['unlimitedExpiration'], 'Boolean');
      if (data.hasOwnProperty('licenses'))
        obj.licenses = SitesSitePutSchemaDataLicenses.constructFromObject(data['licenses']);
      if (data.hasOwnProperty('unlimitedLicenses'))
        obj.unlimitedLicenses = ApiClient.convertToType(data['unlimitedLicenses'], 'Boolean');
      if (data.hasOwnProperty('policy'))
        obj.policy = SitesSitePutSchemaDataPolicy.constructFromObject(data['policy']);
      if (data.hasOwnProperty('expiration'))
        obj.expiration = ApiClient.convertToType(data['expiration'], 'Date');
      if (data.hasOwnProperty('siteType'))
        obj.siteType = ApiClient.convertToType(data['siteType'], 'String');
      if (data.hasOwnProperty('totalLicenses'))
        obj.totalLicenses = ApiClient.convertToType(data['totalLicenses'], 'Number');
      if (data.hasOwnProperty('inherits'))
        obj.inherits = ApiClient.convertToType(data['inherits'], 'Boolean');
    }
    return obj;
  }

  /**
   * The user-defined description for the Site
   * @member {String} description
   */
  exports.prototype.description = undefined;

  /**
   * Id of CRM external system
   * @member {String} externalId
   * @default 'null'
   */
  exports.prototype.externalId = 'null';

  /**
   * [DEPRECATED] Use licenses instead
   * @member {module:model/SitesSitePutSchemaData.SuiteEnum} suite
   * @default 'null'
   */
  exports.prototype.suite = 'null';

  /**
   * Name
   * @member {String} name
   * @default 'null'
   */
  exports.prototype.name = 'null';

  /**
   * Site ID
   * @member {String} id
   */
  exports.prototype.id = undefined;

  /**
   * Is expiration unlimited, if not expiration should be supplied 
   * @member {Boolean} unlimitedExpiration
   */
  exports.prototype.unlimitedExpiration = undefined;

  /**
   * @member {module:model/SitesSitePutSchemaDataLicenses} licenses
   */
  exports.prototype.licenses = undefined;

  /**
   * [DEPRECATED] True if the Site has unlimited licenses.
   * @member {Boolean} unlimitedLicenses
   * @default false
   */
  exports.prototype.unlimitedLicenses = false;

  /**
   * @member {module:model/SitesSitePutSchemaDataPolicy} policy
   */
  exports.prototype.policy = undefined;

  /**
   * Expiration
   * @member {Date} expiration
   */
  exports.prototype.expiration = undefined;

  /**
   * Site type
   * @member {module:model/SitesSitePutSchemaData.SiteTypeEnum} siteType
   * @default 'null'
   */
  exports.prototype.siteType = 'null';

  /**
   * Total licenses
   * @member {Number} totalLicenses
   */
  exports.prototype.totalLicenses = undefined;

  /**
   * True if the policy is inherited from Tenant, False if the site has its own edited policy
   * @member {Boolean} inherits
   * @default false
   */
  exports.prototype.inherits = false;



  /**
   * Allowed values for the <code>suite</code> property.
   * @enum {String}
   * @readonly
   */
  exports.SuiteEnum = {
    /**
     * value: "Core"
     * @const
     */
    core: "Core",

    /**
     * value: "Control"
     * @const
     */
    control: "Control",

    /**
     * value: "Complete"
     * @const
     */
    complete: "Complete"
  };


  /**
   * Allowed values for the <code>siteType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.SiteTypeEnum = {
    /**
     * value: "Trial"
     * @const
     */
    trial: "Trial",

    /**
     * value: "Paid"
     * @const
     */
    paid: "Paid"
  };

  return exports;

}));
