/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/PackagesSchemasLatestPackagesSchema200DataOsTypesSites'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./PackagesSchemasLatestPackagesSchema200DataOsTypesSites'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.PackagesSchemasVersionUploadSchemaMany200Data = factory(root.S1MgmtApi.ApiClient, root.S1MgmtApi.PackagesSchemasLatestPackagesSchema200DataOsTypesSites);
  }
}(this, function(ApiClient, PackagesSchemasLatestPackagesSchema200DataOsTypesSites) {
  'use strict';

  /**
   * The PackagesSchemasVersionUploadSchemaMany200Data model module.
   * @module model/PackagesSchemasVersionUploadSchemaMany200Data
   * @version 2.1
   */

  /**
   * Constructs a new <code>PackagesSchemasVersionUploadSchemaMany200Data</code>.
   * @alias module:model/PackagesSchemasVersionUploadSchemaMany200Data
   * @class
   * @param sites {Array.<module:model/PackagesSchemasLatestPackagesSchema200DataOsTypesSites>} Sites where the update package is available for download
   * @param accounts {Array.<module:model/PackagesSchemasLatestPackagesSchema200DataOsTypesSites>} Accounts where the update package is available for download
   * @param status {module:model/PackagesSchemasVersionUploadSchemaMany200Data.StatusEnum} Status
   */
  var exports = function(sites, accounts, status) {
    this.sites = sites;
    this.accounts = accounts;
    this.status = status;
  };

  /**
   * Constructs a <code>PackagesSchemasVersionUploadSchemaMany200Data</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PackagesSchemasVersionUploadSchemaMany200Data} obj Optional instance to populate.
   * @return {module:model/PackagesSchemasVersionUploadSchemaMany200Data} The populated <code>PackagesSchemasVersionUploadSchemaMany200Data</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('fileName'))
        obj.fileName = ApiClient.convertToType(data['fileName'], 'String');
      if (data.hasOwnProperty('updatedAt'))
        obj.updatedAt = ApiClient.convertToType(data['updatedAt'], 'Date');
      if (data.hasOwnProperty('platformType'))
        obj.platformType = ApiClient.convertToType(data['platformType'], 'String');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('sites'))
        obj.sites = ApiClient.convertToType(data['sites'], [PackagesSchemasLatestPackagesSchema200DataOsTypesSites]);
      if (data.hasOwnProperty('fileExtension'))
        obj.fileExtension = ApiClient.convertToType(data['fileExtension'], 'String');
      if (data.hasOwnProperty('fileSize'))
        obj.fileSize = ApiClient.convertToType(data['fileSize'], 'Number');
      if (data.hasOwnProperty('sha1'))
        obj.sha1 = ApiClient.convertToType(data['sha1'], 'String');
      if (data.hasOwnProperty('osArch'))
        obj.osArch = ApiClient.convertToType(data['osArch'], 'String');
      if (data.hasOwnProperty('version'))
        obj.version = ApiClient.convertToType(data['version'], 'String');
      if (data.hasOwnProperty('accounts'))
        obj.accounts = ApiClient.convertToType(data['accounts'], [PackagesSchemasLatestPackagesSchema200DataOsTypesSites]);
      if (data.hasOwnProperty('packageType'))
        obj.packageType = ApiClient.convertToType(data['packageType'], 'String');
      if (data.hasOwnProperty('minorVersion'))
        obj.minorVersion = ApiClient.convertToType(data['minorVersion'], 'String');
      if (data.hasOwnProperty('createdAt'))
        obj.createdAt = ApiClient.convertToType(data['createdAt'], 'Date');
      if (data.hasOwnProperty('osType'))
        obj.osType = ApiClient.convertToType(data['osType'], 'String');
      if (data.hasOwnProperty('supportedOsVersions'))
        obj.supportedOsVersions = ApiClient.convertToType(data['supportedOsVersions'], 'String');
      if (data.hasOwnProperty('status'))
        obj.status = ApiClient.convertToType(data['status'], 'String');
      if (data.hasOwnProperty('scopeLevel'))
        obj.scopeLevel = ApiClient.convertToType(data['scopeLevel'], 'String');
      if (data.hasOwnProperty('link'))
        obj.link = ApiClient.convertToType(data['link'], Object);
      if (data.hasOwnProperty('rangerVersion'))
        obj.rangerVersion = ApiClient.convertToType(data['rangerVersion'], 'String');
    }
    return obj;
  }

  /**
   * File name
   * @member {String} fileName
   */
  exports.prototype.fileName = undefined;

  /**
   * Updated at
   * @member {Date} updatedAt
   */
  exports.prototype.updatedAt = undefined;

  /**
   * Platform type
   * @member {module:model/PackagesSchemasVersionUploadSchemaMany200Data.PlatformTypeEnum} platformType
   */
  exports.prototype.platformType = undefined;

  /**
   * Id
   * @member {String} id
   */
  exports.prototype.id = undefined;

  /**
   * Sites where the update package is available for download
   * @member {Array.<module:model/PackagesSchemasLatestPackagesSchema200DataOsTypesSites>} sites
   */
  exports.prototype.sites = undefined;

  /**
   * File extension
   * @member {module:model/PackagesSchemasVersionUploadSchemaMany200Data.FileExtensionEnum} fileExtension
   */
  exports.prototype.fileExtension = undefined;

  /**
   * File size (bytes)
   * @member {Number} fileSize
   */
  exports.prototype.fileSize = undefined;

  /**
   * Package hash
   * @member {String} sha1
   */
  exports.prototype.sha1 = undefined;

  /**
   * Package OS architecture (32/64 bit), applicable to Windows packages only
   * @member {module:model/PackagesSchemasVersionUploadSchemaMany200Data.OsArchEnum} osArch
   */
  exports.prototype.osArch = undefined;

  /**
   * Agent version
   * @member {String} version
   */
  exports.prototype.version = undefined;

  /**
   * Accounts where the update package is available for download
   * @member {Array.<module:model/PackagesSchemasLatestPackagesSchema200DataOsTypesSites>} accounts
   */
  exports.prototype.accounts = undefined;

  /**
   * Package type
   * @member {module:model/PackagesSchemasVersionUploadSchemaMany200Data.PackageTypeEnum} packageType
   */
  exports.prototype.packageType = undefined;

  /**
   * Minor version
   * @member {String} minorVersion
   */
  exports.prototype.minorVersion = undefined;

  /**
   * Created at
   * @member {Date} createdAt
   */
  exports.prototype.createdAt = undefined;

  /**
   * Platform type
   * @member {module:model/PackagesSchemasVersionUploadSchemaMany200Data.OsTypeEnum} osType
   */
  exports.prototype.osType = undefined;

  /**
   * Supported os versions
   * @member {String} supportedOsVersions
   */
  exports.prototype.supportedOsVersions = undefined;

  /**
   * Status
   * @member {module:model/PackagesSchemasVersionUploadSchemaMany200Data.StatusEnum} status
   */
  exports.prototype.status = undefined;

  /**
   * Package scope. If \"global\", it will be available in all sites. If \"site\", it will be available only to sites specified in the \"siteIds\" attribute.
   * @member {module:model/PackagesSchemasVersionUploadSchemaMany200Data.ScopeLevelEnum} scopeLevel
   */
  exports.prototype.scopeLevel = undefined;

  /**
   * Link
   * @member {Object} link
   */
  exports.prototype.link = undefined;

  /**
   * Ranger version if applicable
   * @member {String} rangerVersion
   */
  exports.prototype.rangerVersion = undefined;



  /**
   * Allowed values for the <code>platformType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PlatformTypeEnum = {
    /**
     * value: "sdk"
     * @const
     */
    sdk: "sdk",

    /**
     * value: "linux"
     * @const
     */
    linux: "linux",

    /**
     * value: "threat_detection_netapp"
     * @const
     */
    threatDetectionNetapp: "threat_detection_netapp",

    /**
     * value: "threat_detection_s3"
     * @const
     */
    threatDetectionS3: "threat_detection_s3",

    /**
     * value: "macos"
     * @const
     */
    macos: "macos",

    /**
     * value: "windows_legacy"
     * @const
     */
    windowsLegacy: "windows_legacy",

    /**
     * value: "linux_k8s"
     * @const
     */
    linuxK8s: "linux_k8s",

    /**
     * value: "windows"
     * @const
     */
    windows: "windows"
  };


  /**
   * Allowed values for the <code>fileExtension</code> property.
   * @enum {String}
   * @readonly
   */
  exports.FileExtensionEnum = {
    /**
     * value: ".msi"
     * @const
     */
    msi: ".msi",

    /**
     * value: ".exe"
     * @const
     */
    exe: ".exe",

    /**
     * value: ".deb"
     * @const
     */
    deb: ".deb",

    /**
     * value: ".rpm"
     * @const
     */
    rpm: ".rpm",

    /**
     * value: ".bsx"
     * @const
     */
    bsx: ".bsx",

    /**
     * value: ".pkg"
     * @const
     */
    pkg: ".pkg",

    /**
     * value: ".img"
     * @const
     */
    img: ".img",

    /**
     * value: "unknown"
     * @const
     */
    unknown: "unknown",

    /**
     * value: ".tar"
     * @const
     */
    tar: ".tar",

    /**
     * value: ".zip"
     * @const
     */
    zip: ".zip",

    /**
     * value: ".gz"
     * @const
     */
    gz: ".gz",

    /**
     * value: ".xz"
     * @const
     */
    xz: ".xz"
  };


  /**
   * Allowed values for the <code>osArch</code> property.
   * @enum {String}
   * @readonly
   */
  exports.OsArchEnum = {
    /**
     * value: "32 bit"
     * @const
     */
    _32Bit: "32 bit",

    /**
     * value: "64 bit"
     * @const
     */
    _64Bit: "64 bit",

    /**
     * value: "32/64 bit"
     * @const
     */
    _3264Bit: "32/64 bit",

    /**
     * value: "ARM64"
     * @const
     */
    aRM64: "ARM64",

    /**
     * value: "N/A"
     * @const
     */
    NA: "N/A"
  };


  /**
   * Allowed values for the <code>packageType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PackageTypeEnum = {
    /**
     * value: "Agent"
     * @const
     */
    agent: "Agent",

    /**
     * value: "Ranger"
     * @const
     */
    ranger: "Ranger",

    /**
     * value: "AgentAndRanger"
     * @const
     */
    agentAndRanger: "AgentAndRanger"
  };


  /**
   * Allowed values for the <code>osType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.OsTypeEnum = {
    /**
     * value: "sdk"
     * @const
     */
    sdk: "sdk",

    /**
     * value: "linux"
     * @const
     */
    linux: "linux",

    /**
     * value: "threat_detection_netapp"
     * @const
     */
    threatDetectionNetapp: "threat_detection_netapp",

    /**
     * value: "threat_detection_s3"
     * @const
     */
    threatDetectionS3: "threat_detection_s3",

    /**
     * value: "macos"
     * @const
     */
    macos: "macos",

    /**
     * value: "windows_legacy"
     * @const
     */
    windowsLegacy: "windows_legacy",

    /**
     * value: "linux_k8s"
     * @const
     */
    linuxK8s: "linux_k8s",

    /**
     * value: "windows"
     * @const
     */
    windows: "windows"
  };


  /**
   * Allowed values for the <code>status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: "ga"
     * @const
     */
    ga: "ga",

    /**
     * value: "ea"
     * @const
     */
    ea: "ea",

    /**
     * value: "other"
     * @const
     */
    other: "other",

    /**
     * value: "beta"
     * @const
     */
    beta: "beta"
  };


  /**
   * Allowed values for the <code>scopeLevel</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ScopeLevelEnum = {
    /**
     * value: "site"
     * @const
     */
    site: "site",

    /**
     * value: "account"
     * @const
     */
    account: "account",

    /**
     * value: "global"
     * @const
     */
    global: "global"
  };

  return exports;

}));
