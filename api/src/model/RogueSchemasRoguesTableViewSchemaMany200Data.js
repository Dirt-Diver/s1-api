/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.RogueSchemasRoguesTableViewSchemaMany200Data = factory(root.S1MgmtApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The RogueSchemasRoguesTableViewSchemaMany200Data model module.
   * @module model/RogueSchemasRoguesTableViewSchemaMany200Data
   * @version 2.1
   */

  /**
   * Constructs a new <code>RogueSchemasRoguesTableViewSchemaMany200Data</code>.
   * @alias module:model/RogueSchemasRoguesTableViewSchemaMany200Data
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>RogueSchemasRoguesTableViewSchemaMany200Data</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/RogueSchemasRoguesTableViewSchemaMany200Data} obj Optional instance to populate.
   * @return {module:model/RogueSchemasRoguesTableViewSchemaMany200Data} The populated <code>RogueSchemasRoguesTableViewSchemaMany200Data</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('manufacturer'))
        obj.manufacturer = ApiClient.convertToType(data['manufacturer'], 'String');
      if (data.hasOwnProperty('localIp'))
        obj.localIp = ApiClient.convertToType(data['localIp'], 'String');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('osType'))
        obj.osType = ApiClient.convertToType(data['osType'], 'String');
      if (data.hasOwnProperty('externalIp'))
        obj.externalIp = ApiClient.convertToType(data['externalIp'], 'String');
      if (data.hasOwnProperty('deviceFunction'))
        obj.deviceFunction = ApiClient.convertToType(data['deviceFunction'], 'String');
      if (data.hasOwnProperty('macAddress'))
        obj.macAddress = ApiClient.convertToType(data['macAddress'], 'String');
      if (data.hasOwnProperty('deviceType'))
        obj.deviceType = ApiClient.convertToType(data['deviceType'], 'String');
      if (data.hasOwnProperty('osVersion'))
        obj.osVersion = ApiClient.convertToType(data['osVersion'], 'String');
      if (data.hasOwnProperty('lastSeen'))
        obj.lastSeen = ApiClient.convertToType(data['lastSeen'], 'Date');
      if (data.hasOwnProperty('firstSeen'))
        obj.firstSeen = ApiClient.convertToType(data['firstSeen'], 'Date');
      if (data.hasOwnProperty('osName'))
        obj.osName = ApiClient.convertToType(data['osName'], 'String');
      if (data.hasOwnProperty('hostnames'))
        obj.hostnames = ApiClient.convertToType(data['hostnames'], ['String']);
    }
    return obj;
  }

  /**
   * Manufacturer of the device or network interface
   * @member {String} manufacturer
   */
  exports.prototype.manufacturer = undefined;

  /**
   * Local ip of the device
   * @member {String} localIp
   */
  exports.prototype.localIp = undefined;

  /**
   * Id of the device
   * @member {String} id
   */
  exports.prototype.id = undefined;

  /**
   * Os Type of the device
   * @member {String} osType
   */
  exports.prototype.osType = undefined;

  /**
   * Main Gateway Visible IP
   * @member {String} externalIp
   */
  exports.prototype.externalIp = undefined;

  /**
   * Function of the device
   * @member {String} deviceFunction
   */
  exports.prototype.deviceFunction = undefined;

  /**
   * Mac address of the device
   * @member {String} macAddress
   */
  exports.prototype.macAddress = undefined;

  /**
   * Role of the device
   * @member {String} deviceType
   */
  exports.prototype.deviceType = undefined;

  /**
   * OS Version of the device
   * @member {String} osVersion
   */
  exports.prototype.osVersion = undefined;

  /**
   * Time the device was last seen
   * @member {Date} lastSeen
   */
  exports.prototype.lastSeen = undefined;

  /**
   * Time the device was first seen
   * @member {Date} firstSeen
   */
  exports.prototype.firstSeen = undefined;

  /**
   * OS Name/Version of the device
   * @member {String} osName
   */
  exports.prototype.osName = undefined;

  /**
   * Array of host names
   * @member {Array.<String>} hostnames
   */
  exports.prototype.hostnames = undefined;


  return exports;

}));
