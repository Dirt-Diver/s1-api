/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AccountsSchemasAccountViewSchemaMany200Licenses', 'model/AccountsSchemasAccountViewSchemaMany200Skus'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AccountsSchemasAccountViewSchemaMany200Licenses'), require('./AccountsSchemasAccountViewSchemaMany200Skus'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.AccountsSchemasAccountViewSchema200Data = factory(root.S1MgmtApi.ApiClient, root.S1MgmtApi.AccountsSchemasAccountViewSchemaMany200Licenses, root.S1MgmtApi.AccountsSchemasAccountViewSchemaMany200Skus);
  }
}(this, function(ApiClient, AccountsSchemasAccountViewSchemaMany200Licenses, AccountsSchemasAccountViewSchemaMany200Skus) {
  'use strict';

  /**
   * The AccountsSchemasAccountViewSchema200Data model module.
   * @module model/AccountsSchemasAccountViewSchema200Data
   * @version 2.1
   */

  /**
   * Constructs a new <code>AccountsSchemasAccountViewSchema200Data</code>.
   * Response data
   * @alias module:model/AccountsSchemasAccountViewSchema200Data
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>AccountsSchemasAccountViewSchema200Data</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AccountsSchemasAccountViewSchema200Data} obj Optional instance to populate.
   * @return {module:model/AccountsSchemasAccountViewSchema200Data} The populated <code>AccountsSchemasAccountViewSchema200Data</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('numberOfSites'))
        obj.numberOfSites = ApiClient.convertToType(data['numberOfSites'], 'Number');
      if (data.hasOwnProperty('coreSites'))
        obj.coreSites = ApiClient.convertToType(data['coreSites'], 'Number');
      if (data.hasOwnProperty('completeSites'))
        obj.completeSites = ApiClient.convertToType(data['completeSites'], 'Number');
      if (data.hasOwnProperty('updatedAt'))
        obj.updatedAt = ApiClient.convertToType(data['updatedAt'], 'Date');
      if (data.hasOwnProperty('totalComplete'))
        obj.totalComplete = ApiClient.convertToType(data['totalComplete'], 'Number');
      if (data.hasOwnProperty('expiration'))
        obj.expiration = ApiClient.convertToType(data['expiration'], 'Date');
      if (data.hasOwnProperty('isDefault'))
        obj.isDefault = ApiClient.convertToType(data['isDefault'], 'Boolean');
      if (data.hasOwnProperty('controlSites'))
        obj.controlSites = ApiClient.convertToType(data['controlSites'], 'Number');
      if (data.hasOwnProperty('agentsInCoreSku'))
        obj.agentsInCoreSku = ApiClient.convertToType(data['agentsInCoreSku'], 'Number');
      if (data.hasOwnProperty('state'))
        obj.state = ApiClient.convertToType(data['state'], 'String');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('creatorId'))
        obj.creatorId = ApiClient.convertToType(data['creatorId'], 'String');
      if (data.hasOwnProperty('accountType'))
        obj.accountType = ApiClient.convertToType(data['accountType'], 'String');
      if (data.hasOwnProperty('unlimitedComplete'))
        obj.unlimitedComplete = ApiClient.convertToType(data['unlimitedComplete'], 'Boolean');
      if (data.hasOwnProperty('salesforceId'))
        obj.salesforceId = ApiClient.convertToType(data['salesforceId'], 'String');
      if (data.hasOwnProperty('unlimitedControl'))
        obj.unlimitedControl = ApiClient.convertToType(data['unlimitedControl'], 'Boolean');
      if (data.hasOwnProperty('totalControl'))
        obj.totalControl = ApiClient.convertToType(data['totalControl'], 'Number');
      if (data.hasOwnProperty('skus'))
        obj.skus = ApiClient.convertToType(data['skus'], [AccountsSchemasAccountViewSchemaMany200Skus]);
      if (data.hasOwnProperty('totalLicenses'))
        obj.totalLicenses = ApiClient.convertToType(data['totalLicenses'], 'Number');
      if (data.hasOwnProperty('usageType'))
        obj.usageType = ApiClient.convertToType(data['usageType'], 'String');
      if (data.hasOwnProperty('totalCore'))
        obj.totalCore = ApiClient.convertToType(data['totalCore'], 'Number');
      if (data.hasOwnProperty('billingMode'))
        obj.billingMode = ApiClient.convertToType(data['billingMode'], 'String');
      if (data.hasOwnProperty('agentsInCompleteSku'))
        obj.agentsInCompleteSku = ApiClient.convertToType(data['agentsInCompleteSku'], 'Number');
      if (data.hasOwnProperty('externalId'))
        obj.externalId = ApiClient.convertToType(data['externalId'], 'String');
      if (data.hasOwnProperty('unlimitedExpiration'))
        obj.unlimitedExpiration = ApiClient.convertToType(data['unlimitedExpiration'], 'Boolean');
      if (data.hasOwnProperty('licenses'))
        obj.licenses = AccountsSchemasAccountViewSchemaMany200Licenses.constructFromObject(data['licenses']);
      if (data.hasOwnProperty('activeAgents'))
        obj.activeAgents = ApiClient.convertToType(data['activeAgents'], 'Number');
      if (data.hasOwnProperty('agentsInControlSku'))
        obj.agentsInControlSku = ApiClient.convertToType(data['agentsInControlSku'], 'Number');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('createdAt'))
        obj.createdAt = ApiClient.convertToType(data['createdAt'], 'Date');
      if (data.hasOwnProperty('creator'))
        obj.creator = ApiClient.convertToType(data['creator'], 'String');
      if (data.hasOwnProperty('unlimitedCore'))
        obj.unlimitedCore = ApiClient.convertToType(data['unlimitedCore'], 'Boolean');
    }
    return obj;
  }

  /**
   * Total number of Sites in this Account
   * @member {Number} numberOfSites
   */
  exports.prototype.numberOfSites = undefined;

  /**
   * [DEPRECATED] Number of Sites in suite Core
   * @member {Number} coreSites
   */
  exports.prototype.coreSites = undefined;

  /**
   * [DEPRECATED] Number of Sites in suite Complete
   * @member {Number} completeSites
   */
  exports.prototype.completeSites = undefined;

  /**
   * Timestamp of last update
   * @member {Date} updatedAt
   */
  exports.prototype.updatedAt = undefined;

  /**
   * [DEPRECATED] Total Number of Complete licenses
   * @member {Number} totalComplete
   */
  exports.prototype.totalComplete = undefined;

  /**
   * Expiration
   * @member {Date} expiration
   */
  exports.prototype.expiration = undefined;

  /**
   * Is default
   * @member {Boolean} isDefault
   */
  exports.prototype.isDefault = undefined;

  /**
   * [DEPRECATED] Number of Sites in suite Control
   * @member {Number} controlSites
   */
  exports.prototype.controlSites = undefined;

  /**
   * [DEPRECATED] Number of Agents connected to a Core site
   * @member {Number} agentsInCoreSku
   */
  exports.prototype.agentsInCoreSku = undefined;

  /**
   * Account state
   * @member {module:model/AccountsSchemasAccountViewSchema200Data.StateEnum} state
   */
  exports.prototype.state = undefined;

  /**
   * Account ID
   * @member {String} id
   */
  exports.prototype.id = undefined;

  /**
   * The ID of the user that created the group
   * @member {String} creatorId
   */
  exports.prototype.creatorId = undefined;

  /**
   * Account type
   * @member {String} accountType
   */
  exports.prototype.accountType = undefined;

  /**
   * [DEPRECATED] True if Complete licenses count is unlimited
   * @member {Boolean} unlimitedComplete
   */
  exports.prototype.unlimitedComplete = undefined;

  /**
   * @member {String} salesforceId
   */
  exports.prototype.salesforceId = undefined;

  /**
   * [DEPRECATED] True if Control licenses count is unlimited
   * @member {Boolean} unlimitedControl
   */
  exports.prototype.unlimitedControl = undefined;

  /**
   * [DEPRECATED] Total Number of Control licenses
   * @member {Number} totalControl
   */
  exports.prototype.totalControl = undefined;

  /**
   * [DEPRECATED] The list of SKUs for the Account.
   * @member {Array.<module:model/AccountsSchemasAccountViewSchemaMany200Skus>} skus
   */
  exports.prototype.skus = undefined;

  /**
   * The total number of licenses on all Surfaces for all Bundles.
   * @member {Number} totalLicenses
   */
  exports.prototype.totalLicenses = undefined;

  /**
   * Usage type
   * @member {module:model/AccountsSchemasAccountViewSchema200Data.UsageTypeEnum} usageType
   */
  exports.prototype.usageType = undefined;

  /**
   * [DEPRECATED] Total Number of Core licenses
   * @member {Number} totalCore
   */
  exports.prototype.totalCore = undefined;

  /**
   * Billing mode
   * @member {module:model/AccountsSchemasAccountViewSchema200Data.BillingModeEnum} billingMode
   */
  exports.prototype.billingMode = undefined;

  /**
   * [DEPRECATED] Number of Agents connected to a Complete site
   * @member {Number} agentsInCompleteSku
   */
  exports.prototype.agentsInCompleteSku = undefined;

  /**
   * ID of CRM external system
   * @member {String} externalId
   */
  exports.prototype.externalId = undefined;

  /**
   * The Account does not expire
   * @member {Boolean} unlimitedExpiration
   */
  exports.prototype.unlimitedExpiration = undefined;

  /**
   * @member {module:model/AccountsSchemasAccountViewSchemaMany200Licenses} licenses
   */
  exports.prototype.licenses = undefined;

  /**
   * Total Agents in the Account
   * @member {Number} activeAgents
   */
  exports.prototype.activeAgents = undefined;

  /**
   * [DEPRECATED] Number of Agents connected to a Control site
   * @member {Number} agentsInControlSku
   */
  exports.prototype.agentsInControlSku = undefined;

  /**
   * Name
   * @member {String} name
   */
  exports.prototype.name = undefined;

  /**
   * Timestamp of Account creation
   * @member {Date} createdAt
   */
  exports.prototype.createdAt = undefined;

  /**
   * The user that created the group
   * @member {String} creator
   */
  exports.prototype.creator = undefined;

  /**
   * [DEPRECATED] True if Core licenses count is unlimited
   * @member {Boolean} unlimitedCore
   */
  exports.prototype.unlimitedCore = undefined;



  /**
   * Allowed values for the <code>state</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StateEnum = {
    /**
     * value: "active"
     * @const
     */
    active: "active",

    /**
     * value: "expired"
     * @const
     */
    expired: "expired",

    /**
     * value: "deleted"
     * @const
     */
    deleted: "deleted"
  };


  /**
   * Allowed values for the <code>usageType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.UsageTypeEnum = {
    /**
     * value: "customer"
     * @const
     */
    customer: "customer",

    /**
     * value: "mssp"
     * @const
     */
    mssp: "mssp"
  };


  /**
   * Allowed values for the <code>billingMode</code> property.
   * @enum {String}
   * @readonly
   */
  exports.BillingModeEnum = {
    /**
     * value: "subscription"
     * @const
     */
    subscription: "subscription",

    /**
     * value: "consumption"
     * @const
     */
    consumption: "consumption"
  };

  return exports;

}));
