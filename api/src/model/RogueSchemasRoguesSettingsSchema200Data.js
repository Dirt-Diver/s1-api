/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/SchemasRangerSettingsSchema200DataRestrictions', 'model/SchemasRangerSettingsSchema200DataSpecificPorts'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./SchemasRangerSettingsSchema200DataRestrictions'), require('./SchemasRangerSettingsSchema200DataSpecificPorts'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.RogueSchemasRoguesSettingsSchema200Data = factory(root.S1MgmtApi.ApiClient, root.S1MgmtApi.SchemasRangerSettingsSchema200DataRestrictions, root.S1MgmtApi.SchemasRangerSettingsSchema200DataSpecificPorts);
  }
}(this, function(ApiClient, SchemasRangerSettingsSchema200DataRestrictions, SchemasRangerSettingsSchema200DataSpecificPorts) {
  'use strict';

  /**
   * The RogueSchemasRoguesSettingsSchema200Data model module.
   * @module model/RogueSchemasRoguesSettingsSchema200Data
   * @version 2.1
   */

  /**
   * Constructs a new <code>RogueSchemasRoguesSettingsSchema200Data</code>.
   * Response data
   * @alias module:model/RogueSchemasRoguesSettingsSchema200Data
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>RogueSchemasRoguesSettingsSchema200Data</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/RogueSchemasRoguesSettingsSchema200Data} obj Optional instance to populate.
   * @return {module:model/RogueSchemasRoguesSettingsSchema200Data} The populated <code>RogueSchemasRoguesSettingsSchema200Data</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('accountId'))
        obj.accountId = ApiClient.convertToType(data['accountId'], 'String');
      if (data.hasOwnProperty('specificPorts'))
        obj.specificPorts = ApiClient.convertToType(data['specificPorts'], [SchemasRangerSettingsSchema200DataSpecificPorts]);
      if (data.hasOwnProperty('restrictions'))
        obj.restrictions = ApiClient.convertToType(data['restrictions'], [SchemasRangerSettingsSchema200DataRestrictions]);
      if (data.hasOwnProperty('enabled'))
        obj.enabled = ApiClient.convertToType(data['enabled'], 'Boolean');
      if (data.hasOwnProperty('minAgentsInNetworkToScan'))
        obj.minAgentsInNetworkToScan = ApiClient.convertToType(data['minAgentsInNetworkToScan'], 'Number');
      if (data.hasOwnProperty('useSpecificPorts'))
        obj.useSpecificPorts = ApiClient.convertToType(data['useSpecificPorts'], 'Boolean');
    }
    return obj;
  }

  /**
   * Account id
   * @member {String} accountId
   */
  exports.prototype.accountId = undefined;

  /**
   * [FUTURE] A set of specific ports allowed to be used as source ports for an active scan
   * @member {Array.<module:model/SchemasRangerSettingsSchema200DataSpecificPorts>} specificPorts
   */
  exports.prototype.specificPorts = undefined;

  /**
   * A set of IP addresses that should not be scanned in the specific network
   * @member {Array.<module:model/SchemasRangerSettingsSchema200DataRestrictions>} restrictions
   */
  exports.prototype.restrictions = undefined;

  /**
   * Is the ranger collection enabled for the account
   * @member {Boolean} enabled
   */
  exports.prototype.enabled = undefined;

  /**
   * Minimum agents required in a network to be listed as selectable for scan.Valid values are 2, 10 and 100 if rogues is enabled
   * @member {Number} minAgentsInNetworkToScan
   */
  exports.prototype.minAgentsInNetworkToScan = undefined;

  /**
   * [FUTURE] Use only specific ports defined in specific ports as source ports of active scans
   * @member {Boolean} useSpecificPorts
   */
  exports.prototype.useSpecificPorts = undefined;


  return exports;

}));
