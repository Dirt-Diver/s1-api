/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.DeviceControlSchemasDeviceEventResponseSchemaMany200Data = factory(root.S1MgmtApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The DeviceControlSchemasDeviceEventResponseSchemaMany200Data model module.
   * @module model/DeviceControlSchemasDeviceEventResponseSchemaMany200Data
   * @version 2.1
   */

  /**
   * Constructs a new <code>DeviceControlSchemasDeviceEventResponseSchemaMany200Data</code>.
   * @alias module:model/DeviceControlSchemasDeviceEventResponseSchemaMany200Data
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>DeviceControlSchemasDeviceEventResponseSchemaMany200Data</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DeviceControlSchemasDeviceEventResponseSchemaMany200Data} obj Optional instance to populate.
   * @return {module:model/DeviceControlSchemasDeviceEventResponseSchemaMany200Data} The populated <code>DeviceControlSchemasDeviceEventResponseSchemaMany200Data</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('profileUuids'))
        obj.profileUuids = ApiClient.convertToType(data['profileUuids'], 'String');
      if (data.hasOwnProperty('updatedAt'))
        obj.updatedAt = ApiClient.convertToType(data['updatedAt'], 'Date');
      if (data.hasOwnProperty('eventType'))
        obj.eventType = ApiClient.convertToType(data['eventType'], 'String');
      if (data.hasOwnProperty('uId'))
        obj.uId = ApiClient.convertToType(data['uId'], 'String');
      if (data.hasOwnProperty('productId'))
        obj.productId = ApiClient.convertToType(data['productId'], 'String');
      if (data.hasOwnProperty('serviceClass'))
        obj.serviceClass = ApiClient.convertToType(data['serviceClass'], 'String');
      if (data.hasOwnProperty('vendorId'))
        obj.vendorId = ApiClient.convertToType(data['vendorId'], 'String');
      if (data.hasOwnProperty('computerName'))
        obj.computerName = ApiClient.convertToType(data['computerName'], 'String');
      if (data.hasOwnProperty('eventId'))
        obj.eventId = ApiClient.convertToType(data['eventId'], 'String');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('minorClass'))
        obj.minorClass = ApiClient.convertToType(data['minorClass'], 'String');
      if (data.hasOwnProperty('deviceClass'))
        obj.deviceClass = ApiClient.convertToType(data['deviceClass'], 'String');
      if (data.hasOwnProperty('agentId'))
        obj.agentId = ApiClient.convertToType(data['agentId'], 'String');
      if (data.hasOwnProperty('lmpVersion'))
        obj.lmpVersion = ApiClient.convertToType(data['lmpVersion'], 'String');
      if (data.hasOwnProperty('eventTime'))
        obj.eventTime = ApiClient.convertToType(data['eventTime'], 'Date');
      if (data.hasOwnProperty('deviceId'))
        obj.deviceId = ApiClient.convertToType(data['deviceId'], 'String');
      if (data.hasOwnProperty('ruleId'))
        obj.ruleId = ApiClient.convertToType(data['ruleId'], 'String');
      if (data.hasOwnProperty('deviceName'))
        obj.deviceName = ApiClient.convertToType(data['deviceName'], 'String');
      if (data.hasOwnProperty('lastLoggedInUserName'))
        obj.lastLoggedInUserName = ApiClient.convertToType(data['lastLoggedInUserName'], 'String');
      if (data.hasOwnProperty('createdAt'))
        obj.createdAt = ApiClient.convertToType(data['createdAt'], 'Date');
      if (data.hasOwnProperty('interface'))
        obj._interface = ApiClient.convertToType(data['interface'], 'String');
      if (data.hasOwnProperty('accessPermission'))
        obj.accessPermission = ApiClient.convertToType(data['accessPermission'], 'String');
    }
    return obj;
  }

  /**
   * Profile uuids
   * @member {String} profileUuids
   */
  exports.prototype.profileUuids = undefined;

  /**
   * Updated at
   * @member {Date} updatedAt
   */
  exports.prototype.updatedAt = undefined;

  /**
   * Event type
   * @member {String} eventType
   */
  exports.prototype.eventType = undefined;

  /**
   * U id
   * @member {String} uId
   */
  exports.prototype.uId = undefined;

  /**
   * Product id
   * @member {String} productId
   */
  exports.prototype.productId = undefined;

  /**
   * Service class
   * @member {String} serviceClass
   */
  exports.prototype.serviceClass = undefined;

  /**
   * Vendor id
   * @member {String} vendorId
   */
  exports.prototype.vendorId = undefined;

  /**
   * Computer name
   * @member {String} computerName
   */
  exports.prototype.computerName = undefined;

  /**
   * Event id
   * @member {String} eventId
   */
  exports.prototype.eventId = undefined;

  /**
   * Id
   * @member {String} id
   */
  exports.prototype.id = undefined;

  /**
   * Minor class
   * @member {String} minorClass
   */
  exports.prototype.minorClass = undefined;

  /**
   * Device class
   * @member {String} deviceClass
   */
  exports.prototype.deviceClass = undefined;

  /**
   * Agent id
   * @member {String} agentId
   */
  exports.prototype.agentId = undefined;

  /**
   * Lmp version
   * @member {String} lmpVersion
   */
  exports.prototype.lmpVersion = undefined;

  /**
   * Event time
   * @member {Date} eventTime
   */
  exports.prototype.eventTime = undefined;

  /**
   * Device id
   * @member {String} deviceId
   */
  exports.prototype.deviceId = undefined;

  /**
   * Rule id
   * @member {String} ruleId
   */
  exports.prototype.ruleId = undefined;

  /**
   * Device name
   * @member {String} deviceName
   */
  exports.prototype.deviceName = undefined;

  /**
   * Last logged in user name
   * @member {String} lastLoggedInUserName
   */
  exports.prototype.lastLoggedInUserName = undefined;

  /**
   * Created at
   * @member {Date} createdAt
   */
  exports.prototype.createdAt = undefined;

  /**
   * Interface
   * @member {module:model/DeviceControlSchemasDeviceEventResponseSchemaMany200Data.InterfaceEnum} _interface
   */
  exports.prototype._interface = undefined;

  /**
   * Access permission
   * @member {module:model/DeviceControlSchemasDeviceEventResponseSchemaMany200Data.AccessPermissionEnum} accessPermission
   */
  exports.prototype.accessPermission = undefined;



  /**
   * Allowed values for the <code>_interface</code> property.
   * @enum {String}
   * @readonly
   */
  exports.InterfaceEnum = {
    /**
     * value: "USB"
     * @const
     */
    USB: "USB",

    /**
     * value: "Bluetooth"
     * @const
     */
    bluetooth: "Bluetooth",

    /**
     * value: "Thunderbolt"
     * @const
     */
    thunderbolt: "Thunderbolt"
  };


  /**
   * Allowed values for the <code>accessPermission</code> property.
   * @enum {String}
   * @readonly
   */
  exports.AccessPermissionEnum = {
    /**
     * value: "Read-Only"
     * @const
     */
    readOnly: "Read-Only",

    /**
     * value: "Read-Write"
     * @const
     */
    readWrite: "Read-Write",

    /**
     * value: "Not-Applicable"
     * @const
     */
    notApplicable: "Not-Applicable"
  };

  return exports;

}));
