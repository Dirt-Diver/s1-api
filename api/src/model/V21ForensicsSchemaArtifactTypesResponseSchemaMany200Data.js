/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/V21ForensicsSchemaArtifactTypesResponseSchemaMany200Parameters'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./V21ForensicsSchemaArtifactTypesResponseSchemaMany200Parameters'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.V21ForensicsSchemaArtifactTypesResponseSchemaMany200Data = factory(root.S1MgmtApi.ApiClient, root.S1MgmtApi.V21ForensicsSchemaArtifactTypesResponseSchemaMany200Parameters);
  }
}(this, function(ApiClient, V21ForensicsSchemaArtifactTypesResponseSchemaMany200Parameters) {
  'use strict';

  /**
   * The V21ForensicsSchemaArtifactTypesResponseSchemaMany200Data model module.
   * @module model/V21ForensicsSchemaArtifactTypesResponseSchemaMany200Data
   * @version 2.1
   */

  /**
   * Constructs a new <code>V21ForensicsSchemaArtifactTypesResponseSchemaMany200Data</code>.
   * @alias module:model/V21ForensicsSchemaArtifactTypesResponseSchemaMany200Data
   * @class
   * @param artifactType {String} Artifact type code name, used as identifier of the artifact
   * @param osTypes {Array.<module:model/V21ForensicsSchemaArtifactTypesResponseSchemaMany200Data.OsTypesEnum>} Os types
   * @param category {String} Category of the artifact type
   * @param name {String} User-readable name of the artifact
   */
  var exports = function(artifactType, osTypes, category, name) {
    this.artifactType = artifactType;
    this.osTypes = osTypes;
    this.category = category;
    this.name = name;
  };

  /**
   * Constructs a <code>V21ForensicsSchemaArtifactTypesResponseSchemaMany200Data</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/V21ForensicsSchemaArtifactTypesResponseSchemaMany200Data} obj Optional instance to populate.
   * @return {module:model/V21ForensicsSchemaArtifactTypesResponseSchemaMany200Data} The populated <code>V21ForensicsSchemaArtifactTypesResponseSchemaMany200Data</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('artifactType'))
        obj.artifactType = ApiClient.convertToType(data['artifactType'], 'String');
      if (data.hasOwnProperty('osTypes'))
        obj.osTypes = ApiClient.convertToType(data['osTypes'], ['String']);
      if (data.hasOwnProperty('category'))
        obj.category = ApiClient.convertToType(data['category'], 'String');
      if (data.hasOwnProperty('parameters'))
        obj.parameters = ApiClient.convertToType(data['parameters'], [V21ForensicsSchemaArtifactTypesResponseSchemaMany200Parameters]);
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('version'))
        obj.version = ApiClient.convertToType(data['version'], 'Number');
    }
    return obj;
  }

  /**
   * Artifact type code name, used as identifier of the artifact
   * @member {String} artifactType
   */
  exports.prototype.artifactType = undefined;

  /**
   * Os types
   * @member {Array.<module:model/V21ForensicsSchemaArtifactTypesResponseSchemaMany200Data.OsTypesEnum>} osTypes
   */
  exports.prototype.osTypes = undefined;

  /**
   * Category of the artifact type
   * @member {String} category
   */
  exports.prototype.category = undefined;

  /**
   * Parameters
   * @member {Array.<module:model/V21ForensicsSchemaArtifactTypesResponseSchemaMany200Parameters>} parameters
   */
  exports.prototype.parameters = undefined;

  /**
   * User-readable name of the artifact
   * @member {String} name
   */
  exports.prototype.name = undefined;

  /**
   * Internal version of the artifact type
   * @member {Number} version
   */
  exports.prototype.version = undefined;



  /**
   * Allowed values for the <code>osTypes</code> property.
   * @enum {String}
   * @readonly
   */
  exports.OsTypesEnum = {
    /**
     * value: "linux"
     * @const
     */
    linux: "linux",

    /**
     * value: "macos"
     * @const
     */
    macos: "macos",

    /**
     * value: "windows"
     * @const
     */
    windows: "windows"
  };

  return exports;

}));
