/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/FirewallControlSchemasFirewallSchemaMany200RemoteHosts', 'model/FirewallControlSchemasPostFirewallSchemaDataApplication', 'model/FirewallControlSchemasPostFirewallSchemaDataLocalHost', 'model/FirewallControlSchemasPostFirewallSchemaDataLocalPort', 'model/FirewallControlSchemasPostFirewallSchemaDataLocation', 'model/FirewallControlSchemasPostFirewallSchemaDataRemoteHost', 'model/FirewallControlSchemasPostFirewallSchemaDataRemotePort'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./FirewallControlSchemasFirewallSchemaMany200RemoteHosts'), require('./FirewallControlSchemasPostFirewallSchemaDataApplication'), require('./FirewallControlSchemasPostFirewallSchemaDataLocalHost'), require('./FirewallControlSchemasPostFirewallSchemaDataLocalPort'), require('./FirewallControlSchemasPostFirewallSchemaDataLocation'), require('./FirewallControlSchemasPostFirewallSchemaDataRemoteHost'), require('./FirewallControlSchemasPostFirewallSchemaDataRemotePort'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.FirewallControlSchemasPutFirewallSchemaData = factory(root.S1MgmtApi.ApiClient, root.S1MgmtApi.FirewallControlSchemasFirewallSchemaMany200RemoteHosts, root.S1MgmtApi.FirewallControlSchemasPostFirewallSchemaDataApplication, root.S1MgmtApi.FirewallControlSchemasPostFirewallSchemaDataLocalHost, root.S1MgmtApi.FirewallControlSchemasPostFirewallSchemaDataLocalPort, root.S1MgmtApi.FirewallControlSchemasPostFirewallSchemaDataLocation, root.S1MgmtApi.FirewallControlSchemasPostFirewallSchemaDataRemoteHost, root.S1MgmtApi.FirewallControlSchemasPostFirewallSchemaDataRemotePort);
  }
}(this, function(ApiClient, FirewallControlSchemasFirewallSchemaMany200RemoteHosts, FirewallControlSchemasPostFirewallSchemaDataApplication, FirewallControlSchemasPostFirewallSchemaDataLocalHost, FirewallControlSchemasPostFirewallSchemaDataLocalPort, FirewallControlSchemasPostFirewallSchemaDataLocation, FirewallControlSchemasPostFirewallSchemaDataRemoteHost, FirewallControlSchemasPostFirewallSchemaDataRemotePort) {
  'use strict';

  /**
   * The FirewallControlSchemasPutFirewallSchemaData model module.
   * @module model/FirewallControlSchemasPutFirewallSchemaData
   * @version 2.1
   */

  /**
   * Constructs a new <code>FirewallControlSchemasPutFirewallSchemaData</code>.
   * Data
   * @alias module:model/FirewallControlSchemasPutFirewallSchemaData
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>FirewallControlSchemasPutFirewallSchemaData</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/FirewallControlSchemasPutFirewallSchemaData} obj Optional instance to populate.
   * @return {module:model/FirewallControlSchemasPutFirewallSchemaData} The populated <code>FirewallControlSchemasPutFirewallSchemaData</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('action'))
        obj.action = ApiClient.convertToType(data['action'], 'String');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('remotePort'))
        obj.remotePort = FirewallControlSchemasPostFirewallSchemaDataRemotePort.constructFromObject(data['remotePort']);
      if (data.hasOwnProperty('protocol'))
        obj.protocol = ApiClient.convertToType(data['protocol'], 'String');
      if (data.hasOwnProperty('osType'))
        obj.osType = ApiClient.convertToType(data['osType'], 'String');
      if (data.hasOwnProperty('localPort'))
        obj.localPort = FirewallControlSchemasPostFirewallSchemaDataLocalPort.constructFromObject(data['localPort']);
      if (data.hasOwnProperty('remoteHost'))
        obj.remoteHost = FirewallControlSchemasPostFirewallSchemaDataRemoteHost.constructFromObject(data['remoteHost']);
      if (data.hasOwnProperty('tagIds'))
        obj.tagIds = ApiClient.convertToType(data['tagIds'], ['String']);
      if (data.hasOwnProperty('osTypes'))
        obj.osTypes = ApiClient.convertToType(data['osTypes'], ['String']);
      if (data.hasOwnProperty('localHost'))
        obj.localHost = FirewallControlSchemasPostFirewallSchemaDataLocalHost.constructFromObject(data['localHost']);
      if (data.hasOwnProperty('direction'))
        obj.direction = ApiClient.convertToType(data['direction'], 'String');
      if (data.hasOwnProperty('status'))
        obj.status = ApiClient.convertToType(data['status'], 'String');
      if (data.hasOwnProperty('application'))
        obj.application = FirewallControlSchemasPostFirewallSchemaDataApplication.constructFromObject(data['application']);
      if (data.hasOwnProperty('location'))
        obj.location = FirewallControlSchemasPostFirewallSchemaDataLocation.constructFromObject(data['location']);
      if (data.hasOwnProperty('tag'))
        obj.tag = ApiClient.convertToType(data['tag'], 'String');
      if (data.hasOwnProperty('remoteHosts'))
        obj.remoteHosts = ApiClient.convertToType(data['remoteHosts'], [FirewallControlSchemasFirewallSchemaMany200RemoteHosts]);
    }
    return obj;
  }

  /**
   * Description
   * @member {String} description
   */
  exports.prototype.description = undefined;

  /**
   * Defines if agent shall Block or Allow use of firewalls which matches the rule parameters.
   * @member {module:model/FirewallControlSchemasPutFirewallSchemaData.ActionEnum} action
   */
  exports.prototype.action = undefined;

  /**
   * The name of the firewall rule.
   * @member {String} name
   */
  exports.prototype.name = undefined;

  /**
   * @member {module:model/FirewallControlSchemasPostFirewallSchemaDataRemotePort} remotePort
   */
  exports.prototype.remotePort = undefined;

  /**
   * The protocol
   * @member {String} protocol
   */
  exports.prototype.protocol = undefined;

  /**
   * [DEPRECATED] Please use os_types since multiple os types are supported.This field will return the first os_type, not necessarily the only one.
   * @member {module:model/FirewallControlSchemasPutFirewallSchemaData.OsTypeEnum} osType
   */
  exports.prototype.osType = undefined;

  /**
   * @member {module:model/FirewallControlSchemasPostFirewallSchemaDataLocalPort} localPort
   */
  exports.prototype.localPort = undefined;

  /**
   * @member {module:model/FirewallControlSchemasPostFirewallSchemaDataRemoteHost} remoteHost
   */
  exports.prototype.remoteHost = undefined;

  /**
   * Tag ids
   * @member {Array.<String>} tagIds
   */
  exports.prototype.tagIds = undefined;

  /**
   * Os types
   * @member {Array.<module:model/FirewallControlSchemasPutFirewallSchemaData.OsTypesEnum>} osTypes
   */
  exports.prototype.osTypes = undefined;

  /**
   * @member {module:model/FirewallControlSchemasPostFirewallSchemaDataLocalHost} localHost
   */
  exports.prototype.localHost = undefined;

  /**
   * Defines the Direction of the Firewall rule.
   * @member {module:model/FirewallControlSchemasPutFirewallSchemaData.DirectionEnum} direction
   */
  exports.prototype.direction = undefined;

  /**
   * Defines if rule is Enabled or Disabled
   * @member {module:model/FirewallControlSchemasPutFirewallSchemaData.StatusEnum} status
   */
  exports.prototype.status = undefined;

  /**
   * @member {module:model/FirewallControlSchemasPostFirewallSchemaDataApplication} application
   */
  exports.prototype.application = undefined;

  /**
   * @member {module:model/FirewallControlSchemasPostFirewallSchemaDataLocation} location
   */
  exports.prototype.location = undefined;

  /**
   * [DEPRECATED] Free text to describe the rule. Please use description instead.
   * @member {String} tag
   */
  exports.prototype.tag = undefined;

  /**
   * List of remote hosts, each structured with a type and a set of values
   * @member {Array.<module:model/FirewallControlSchemasFirewallSchemaMany200RemoteHosts>} remoteHosts
   */
  exports.prototype.remoteHosts = undefined;



  /**
   * Allowed values for the <code>action</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ActionEnum = {
    /**
     * value: "Allow"
     * @const
     */
    allow: "Allow",

    /**
     * value: "Block"
     * @const
     */
    block: "Block"
  };


  /**
   * Allowed values for the <code>osType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.OsTypeEnum = {
    /**
     * value: "windows"
     * @const
     */
    windows: "windows",

    /**
     * value: "macos"
     * @const
     */
    macos: "macos",

    /**
     * value: "linux"
     * @const
     */
    linux: "linux",

    /**
     * value: "windows_legacy"
     * @const
     */
    windowsLegacy: "windows_legacy"
  };


  /**
   * Allowed values for the <code>osTypes</code> property.
   * @enum {String}
   * @readonly
   */
  exports.OsTypesEnum = {
    /**
     * value: "windows"
     * @const
     */
    windows: "windows",

    /**
     * value: "macos"
     * @const
     */
    macos: "macos",

    /**
     * value: "linux"
     * @const
     */
    linux: "linux",

    /**
     * value: "windows_legacy"
     * @const
     */
    windowsLegacy: "windows_legacy"
  };


  /**
   * Allowed values for the <code>direction</code> property.
   * @enum {String}
   * @readonly
   */
  exports.DirectionEnum = {
    /**
     * value: "any"
     * @const
     */
    any: "any",

    /**
     * value: "inbound"
     * @const
     */
    inbound: "inbound",

    /**
     * value: "outbound"
     * @const
     */
    outbound: "outbound"
  };


  /**
   * Allowed values for the <code>status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: "Enabled"
     * @const
     */
    enabled: "Enabled",

    /**
     * value: "Disabled"
     * @const
     */
    disabled: "Disabled"
  };

  return exports;

}));
