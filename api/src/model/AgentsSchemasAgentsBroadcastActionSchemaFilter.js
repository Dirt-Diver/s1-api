/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.AgentsSchemasAgentsBroadcastActionSchemaFilter = factory(root.S1MgmtApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The AgentsSchemasAgentsBroadcastActionSchemaFilter model module.
   * @module model/AgentsSchemasAgentsBroadcastActionSchemaFilter
   * @version 2.1
   */

  /**
   * Constructs a new <code>AgentsSchemasAgentsBroadcastActionSchemaFilter</code>.
   * Applied filter - only matched Agents will be affected by the requested action. Leave empty to apply the action on all applicable Agents.
   * @alias module:model/AgentsSchemasAgentsBroadcastActionSchemaFilter
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>AgentsSchemasAgentsBroadcastActionSchemaFilter</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AgentsSchemasAgentsBroadcastActionSchemaFilter} obj Optional instance to populate.
   * @return {module:model/AgentsSchemasAgentsBroadcastActionSchemaFilter} The populated <code>AgentsSchemasAgentsBroadcastActionSchemaFilter</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('agentVersionsNin'))
        obj.agentVersionsNin = ApiClient.convertToType(data['agentVersionsNin'], ['String']);
      if (data.hasOwnProperty('registeredAt__between'))
        obj.registeredAtBetween = ApiClient.convertToType(data['registeredAt__between'], 'String');
      if (data.hasOwnProperty('registeredAt__lte'))
        obj.registeredAtLte = ApiClient.convertToType(data['registeredAt__lte'], 'Date');
      if (data.hasOwnProperty('adComputerQuery__contains'))
        obj.adComputerQueryContains = ApiClient.convertToType(data['adComputerQuery__contains'], ['String']);
      if (data.hasOwnProperty('mitigationModeSuspicious'))
        obj.mitigationModeSuspicious = ApiClient.convertToType(data['mitigationModeSuspicious'], 'String');
      if (data.hasOwnProperty('hasLocalConfiguration'))
        obj.hasLocalConfiguration = ApiClient.convertToType(data['hasLocalConfiguration'], 'Boolean');
      if (data.hasOwnProperty('adUserQuery__contains'))
        obj.adUserQueryContains = ApiClient.convertToType(data['adUserQuery__contains'], ['String']);
      if (data.hasOwnProperty('query'))
        obj.query = ApiClient.convertToType(data['query'], 'String');
      if (data.hasOwnProperty('cloudProvider'))
        obj.cloudProvider = ApiClient.convertToType(data['cloudProvider'], ['String']);
      if (data.hasOwnProperty('coreCount__gt'))
        obj.coreCountGt = ApiClient.convertToType(data['coreCount__gt'], 'Number');
      if (data.hasOwnProperty('decommissionedAt__gt'))
        obj.decommissionedAtGt = ApiClient.convertToType(data['decommissionedAt__gt'], 'Date');
      if (data.hasOwnProperty('registeredAt__gte'))
        obj.registeredAtGte = ApiClient.convertToType(data['registeredAt__gte'], 'Date');
      if (data.hasOwnProperty('totalMemory__gt'))
        obj.totalMemoryGt = ApiClient.convertToType(data['totalMemory__gt'], 'Number');
      if (data.hasOwnProperty('updatedAt__gt'))
        obj.updatedAtGt = ApiClient.convertToType(data['updatedAt__gt'], 'Date');
      if (data.hasOwnProperty('hasContainerizedWorkload'))
        obj.hasContainerizedWorkload = ApiClient.convertToType(data['hasContainerizedWorkload'], 'Boolean');
      if (data.hasOwnProperty('cloudImage__contains'))
        obj.cloudImageContains = ApiClient.convertToType(data['cloudImage__contains'], ['String']);
      if (data.hasOwnProperty('threatCreatedAt__gte'))
        obj.threatCreatedAtGte = ApiClient.convertToType(data['threatCreatedAt__gte'], 'Date');
      if (data.hasOwnProperty('appsVulnerabilityStatusesNin'))
        obj.appsVulnerabilityStatusesNin = ApiClient.convertToType(data['appsVulnerabilityStatusesNin'], ['String']);
      if (data.hasOwnProperty('scanStatusesNin'))
        obj.scanStatusesNin = ApiClient.convertToType(data['scanStatusesNin'], ['String']);
      if (data.hasOwnProperty('adComputerMember__contains'))
        obj.adComputerMemberContains = ApiClient.convertToType(data['adComputerMember__contains'], ['String']);
      if (data.hasOwnProperty('coreCount__lte'))
        obj.coreCountLte = ApiClient.convertToType(data['coreCount__lte'], 'Number');
      if (data.hasOwnProperty('rangerVersions'))
        obj.rangerVersions = ApiClient.convertToType(data['rangerVersions'], ['String']);
      if (data.hasOwnProperty('machineTypes'))
        obj.machineTypes = ApiClient.convertToType(data['machineTypes'], ['String']);
      if (data.hasOwnProperty('coreCount__gte'))
        obj.coreCountGte = ApiClient.convertToType(data['coreCount__gte'], 'Number');
      if (data.hasOwnProperty('locationIds'))
        obj.locationIds = ApiClient.convertToType(data['locationIds'], ['String']);
      if (data.hasOwnProperty('locationIdsNin'))
        obj.locationIdsNin = ApiClient.convertToType(data['locationIdsNin'], ['String']);
      if (data.hasOwnProperty('gatewayIp'))
        obj.gatewayIp = ApiClient.convertToType(data['gatewayIp'], 'String');
      if (data.hasOwnProperty('updatedAt__lte'))
        obj.updatedAtLte = ApiClient.convertToType(data['updatedAt__lte'], 'Date');
      if (data.hasOwnProperty('groupIds'))
        obj.groupIds = ApiClient.convertToType(data['groupIds'], ['String']);
      if (data.hasOwnProperty('missingPermissionsNin'))
        obj.missingPermissionsNin = ApiClient.convertToType(data['missingPermissionsNin'], ['String']);
      if (data.hasOwnProperty('migrationStatus'))
        obj.migrationStatus = ApiClient.convertToType(data['migrationStatus'], 'String');
      if (data.hasOwnProperty('threatRebootRequired'))
        obj.threatRebootRequired = ApiClient.convertToType(data['threatRebootRequired'], ['Boolean']);
      if (data.hasOwnProperty('serialNumber__contains'))
        obj.serialNumberContains = ApiClient.convertToType(data['serialNumber__contains'], ['String']);
      if (data.hasOwnProperty('decommissionedAt__gte'))
        obj.decommissionedAtGte = ApiClient.convertToType(data['decommissionedAt__gte'], 'Date');
      if (data.hasOwnProperty('lastSuccessfulScanDate__between'))
        obj.lastSuccessfulScanDateBetween = ApiClient.convertToType(data['lastSuccessfulScanDate__between'], 'String');
      if (data.hasOwnProperty('lastActiveDate__lte'))
        obj.lastActiveDateLte = ApiClient.convertToType(data['lastActiveDate__lte'], 'Date');
      if (data.hasOwnProperty('lastActiveDate__between'))
        obj.lastActiveDateBetween = ApiClient.convertToType(data['lastActiveDate__between'], 'String');
      if (data.hasOwnProperty('networkQuarantineEnabled'))
        obj.networkQuarantineEnabled = ApiClient.convertToType(data['networkQuarantineEnabled'], ['Boolean']);
      if (data.hasOwnProperty('cloudTags__contains'))
        obj.cloudTagsContains = ApiClient.convertToType(data['cloudTags__contains'], ['String']);
      if (data.hasOwnProperty('threatCreatedAt__between'))
        obj.threatCreatedAtBetween = ApiClient.convertToType(data['threatCreatedAt__between'], 'String');
      if (data.hasOwnProperty('encryptedApplications'))
        obj.encryptedApplications = ApiClient.convertToType(data['encryptedApplications'], 'Boolean');
      if (data.hasOwnProperty('isUninstalled'))
        obj.isUninstalled = ApiClient.convertToType(data['isUninstalled'], ['Boolean']);
      if (data.hasOwnProperty('networkInterfacePhysical__contains'))
        obj.networkInterfacePhysicalContains = ApiClient.convertToType(data['networkInterfacePhysical__contains'], ['String']);
      if (data.hasOwnProperty('agentVersion__gte'))
        obj.agentVersionGte = ApiClient.convertToType(data['agentVersion__gte'], 'String');
      if (data.hasOwnProperty('lastSuccessfulScanDate__gte'))
        obj.lastSuccessfulScanDateGte = ApiClient.convertToType(data['lastSuccessfulScanDate__gte'], 'Date');
      if (data.hasOwnProperty('operationalStates'))
        obj.operationalStates = ApiClient.convertToType(data['operationalStates'], ['String']);
      if (data.hasOwnProperty('adUserName__contains'))
        obj.adUserNameContains = ApiClient.convertToType(data['adUserName__contains'], ['String']);
      if (data.hasOwnProperty('osTypesNin'))
        obj.osTypesNin = ApiClient.convertToType(data['osTypesNin'], ['String']);
      if (data.hasOwnProperty('csvFilterId'))
        obj.csvFilterId = ApiClient.convertToType(data['csvFilterId'], 'String');
      if (data.hasOwnProperty('isActive'))
        obj.isActive = ApiClient.convertToType(data['isActive'], 'Boolean');
      if (data.hasOwnProperty('mitigationMode'))
        obj.mitigationMode = ApiClient.convertToType(data['mitigationMode'], 'String');
      if (data.hasOwnProperty('awsSubnetIds__contains'))
        obj.awsSubnetIdsContains = ApiClient.convertToType(data['awsSubnetIds__contains'], ['String']);
      if (data.hasOwnProperty('agentVersion__lte'))
        obj.agentVersionLte = ApiClient.convertToType(data['agentVersion__lte'], 'String');
      if (data.hasOwnProperty('updatedAt__gte'))
        obj.updatedAtGte = ApiClient.convertToType(data['updatedAt__gte'], 'Date');
      if (data.hasOwnProperty('osVersion__contains'))
        obj.osVersionContains = ApiClient.convertToType(data['osVersion__contains'], ['String']);
      if (data.hasOwnProperty('externalIp__contains'))
        obj.externalIpContains = ApiClient.convertToType(data['externalIp__contains'], ['String']);
      if (data.hasOwnProperty('awsSecurityGroups__contains'))
        obj.awsSecurityGroupsContains = ApiClient.convertToType(data['awsSecurityGroups__contains'], ['String']);
      if (data.hasOwnProperty('k8sNodeName__contains'))
        obj.k8sNodeNameContains = ApiClient.convertToType(data['k8sNodeName__contains'], ['String']);
      if (data.hasOwnProperty('agentVersion__between'))
        obj.agentVersionBetween = ApiClient.convertToType(data['agentVersion__between'], 'String');
      if (data.hasOwnProperty('activeThreats'))
        obj.activeThreats = ApiClient.convertToType(data['activeThreats'], 'Number');
      if (data.hasOwnProperty('hasTags'))
        obj.hasTags = ApiClient.convertToType(data['hasTags'], 'Boolean');
      if (data.hasOwnProperty('agentNamespace__contains'))
        obj.agentNamespaceContains = ApiClient.convertToType(data['agentNamespace__contains'], ['String']);
      if (data.hasOwnProperty('cpuCount__lt'))
        obj.cpuCountLt = ApiClient.convertToType(data['cpuCount__lt'], 'Number');
      if (data.hasOwnProperty('registeredAt__lt'))
        obj.registeredAtLt = ApiClient.convertToType(data['registeredAt__lt'], 'Date');
      if (data.hasOwnProperty('networkInterfaceInet__contains'))
        obj.networkInterfaceInetContains = ApiClient.convertToType(data['networkInterfaceInet__contains'], ['String']);
      if (data.hasOwnProperty('computerName__contains'))
        obj.computerNameContains = ApiClient.convertToType(data['computerName__contains'], ['String']);
      if (data.hasOwnProperty('cloudNetwork__contains'))
        obj.cloudNetworkContains = ApiClient.convertToType(data['cloudNetwork__contains'], ['String']);
      if (data.hasOwnProperty('remoteOpsForensicsSupported'))
        obj.remoteOpsForensicsSupported = ApiClient.convertToType(data['remoteOpsForensicsSupported'], 'Boolean');
      if (data.hasOwnProperty('remoteProfilingStates'))
        obj.remoteProfilingStates = ApiClient.convertToType(data['remoteProfilingStates'], ['String']);
      if (data.hasOwnProperty('filteredGroupIds'))
        obj.filteredGroupIds = ApiClient.convertToType(data['filteredGroupIds'], ['String']);
      if (data.hasOwnProperty('agentPodName__contains'))
        obj.agentPodNameContains = ApiClient.convertToType(data['agentPodName__contains'], ['String']);
      if (data.hasOwnProperty('userActionsNeededNin'))
        obj.userActionsNeededNin = ApiClient.convertToType(data['userActionsNeededNin'], ['String']);
      if (data.hasOwnProperty('rangerStatuses'))
        obj.rangerStatuses = ApiClient.convertToType(data['rangerStatuses'], ['String']);
      if (data.hasOwnProperty('computerName__like'))
        obj.computerNameLike = ApiClient.convertToType(data['computerName__like'], 'String');
      if (data.hasOwnProperty('externalId__contains'))
        obj.externalIdContains = ApiClient.convertToType(data['externalId__contains'], ['String']);
      if (data.hasOwnProperty('createdAt__between'))
        obj.createdAtBetween = ApiClient.convertToType(data['createdAt__between'], 'String');
      if (data.hasOwnProperty('consoleMigrationStatusesNin'))
        obj.consoleMigrationStatusesNin = ApiClient.convertToType(data['consoleMigrationStatusesNin'], ['String']);
      if (data.hasOwnProperty('cpuId__contains'))
        obj.cpuIdContains = ApiClient.convertToType(data['cpuId__contains'], ['String']);
      if (data.hasOwnProperty('coreCount__between'))
        obj.coreCountBetween = ApiClient.convertToType(data['coreCount__between'], 'String');
      if (data.hasOwnProperty('isUpToDate'))
        obj.isUpToDate = ApiClient.convertToType(data['isUpToDate'], 'Boolean');
      if (data.hasOwnProperty('threatCreatedAt__lt'))
        obj.threatCreatedAtLt = ApiClient.convertToType(data['threatCreatedAt__lt'], 'Date');
      if (data.hasOwnProperty('rangerStatus'))
        obj.rangerStatus = ApiClient.convertToType(data['rangerStatus'], 'String');
      if (data.hasOwnProperty('totalMemory__between'))
        obj.totalMemoryBetween = ApiClient.convertToType(data['totalMemory__between'], 'String');
      if (data.hasOwnProperty('lastSuccessfulScanDate__lte'))
        obj.lastSuccessfulScanDateLte = ApiClient.convertToType(data['lastSuccessfulScanDate__lte'], 'Date');
      if (data.hasOwnProperty('domains'))
        obj.domains = ApiClient.convertToType(data['domains'], ['String']);
      if (data.hasOwnProperty('awsRole__contains'))
        obj.awsRoleContains = ApiClient.convertToType(data['awsRole__contains'], ['String']);
      if (data.hasOwnProperty('lastLoggedInUserName__contains'))
        obj.lastLoggedInUserNameContains = ApiClient.convertToType(data['lastLoggedInUserName__contains'], ['String']);
      if (data.hasOwnProperty('cpuCount__gt'))
        obj.cpuCountGt = ApiClient.convertToType(data['cpuCount__gt'], 'Number');
      if (data.hasOwnProperty('cloudAccount__contains'))
        obj.cloudAccountContains = ApiClient.convertToType(data['cloudAccount__contains'], ['String']);
      if (data.hasOwnProperty('clusterName__contains'))
        obj.clusterNameContains = ApiClient.convertToType(data['clusterName__contains'], ['String']);
      if (data.hasOwnProperty('scanStatuses'))
        obj.scanStatuses = ApiClient.convertToType(data['scanStatuses'], ['String']);
      if (data.hasOwnProperty('updatedAt__lt'))
        obj.updatedAtLt = ApiClient.convertToType(data['updatedAt__lt'], 'Date');
      if (data.hasOwnProperty('ids'))
        obj.ids = ApiClient.convertToType(data['ids'], ['String']);
      if (data.hasOwnProperty('liveUpdateId__contains'))
        obj.liveUpdateIdContains = ApiClient.convertToType(data['liveUpdateId__contains'], ['String']);
      if (data.hasOwnProperty('computerName'))
        obj.computerName = ApiClient.convertToType(data['computerName'], 'String');
      if (data.hasOwnProperty('uuid'))
        obj.uuid = ApiClient.convertToType(data['uuid'], 'String');
      if (data.hasOwnProperty('osTypes'))
        obj.osTypes = ApiClient.convertToType(data['osTypes'], ['String']);
      if (data.hasOwnProperty('appsVulnerabilityStatuses'))
        obj.appsVulnerabilityStatuses = ApiClient.convertToType(data['appsVulnerabilityStatuses'], ['String']);
      if (data.hasOwnProperty('lastActiveDate__gte'))
        obj.lastActiveDateGte = ApiClient.convertToType(data['lastActiveDate__gte'], 'Date');
      if (data.hasOwnProperty('threatContentHash'))
        obj.threatContentHash = ApiClient.convertToType(data['threatContentHash'], 'String');
      if (data.hasOwnProperty('remoteProfilingStatesNin'))
        obj.remoteProfilingStatesNin = ApiClient.convertToType(data['remoteProfilingStatesNin'], ['String']);
      if (data.hasOwnProperty('createdAt__lte'))
        obj.createdAtLte = ApiClient.convertToType(data['createdAt__lte'], 'Date');
      if (data.hasOwnProperty('scanStatus'))
        obj.scanStatus = ApiClient.convertToType(data['scanStatus'], 'String');
      if (data.hasOwnProperty('filteredSiteIds'))
        obj.filteredSiteIds = ApiClient.convertToType(data['filteredSiteIds'], ['String']);
      if (data.hasOwnProperty('userActionsNeeded'))
        obj.userActionsNeeded = ApiClient.convertToType(data['userActionsNeeded'], ['String']);
      if (data.hasOwnProperty('registeredAt__gt'))
        obj.registeredAtGt = ApiClient.convertToType(data['registeredAt__gt'], 'Date');
      if (data.hasOwnProperty('osArch'))
        obj.osArch = ApiClient.convertToType(data['osArch'], 'String');
      if (data.hasOwnProperty('adComputerName__contains'))
        obj.adComputerNameContains = ApiClient.convertToType(data['adComputerName__contains'], ['String']);
      if (data.hasOwnProperty('totalMemory__gte'))
        obj.totalMemoryGte = ApiClient.convertToType(data['totalMemory__gte'], 'Number');
      if (data.hasOwnProperty('threatHidden'))
        obj.threatHidden = ApiClient.convertToType(data['threatHidden'], 'Boolean');
      if (data.hasOwnProperty('lastActiveDate__gt'))
        obj.lastActiveDateGt = ApiClient.convertToType(data['lastActiveDate__gt'], 'Date');
      if (data.hasOwnProperty('threatCreatedAt__lte'))
        obj.threatCreatedAtLte = ApiClient.convertToType(data['threatCreatedAt__lte'], 'Date');
      if (data.hasOwnProperty('cpuCount__gte'))
        obj.cpuCountGte = ApiClient.convertToType(data['cpuCount__gte'], 'Number');
      if (data.hasOwnProperty('cloudInstanceId__contains'))
        obj.cloudInstanceIdContains = ApiClient.convertToType(data['cloudInstanceId__contains'], ['String']);
      if (data.hasOwnProperty('agentVersions'))
        obj.agentVersions = ApiClient.convertToType(data['agentVersions'], ['String']);
      if (data.hasOwnProperty('adQuery__contains'))
        obj.adQueryContains = ApiClient.convertToType(data['adQuery__contains'], ['String']);
      if (data.hasOwnProperty('createdAt__gte'))
        obj.createdAtGte = ApiClient.convertToType(data['createdAt__gte'], 'Date');
      if (data.hasOwnProperty('accountIds'))
        obj.accountIds = ApiClient.convertToType(data['accountIds'], ['String']);
      if (data.hasOwnProperty('locationEnabled'))
        obj.locationEnabled = ApiClient.convertToType(data['locationEnabled'], ['Boolean']);
      if (data.hasOwnProperty('cloudProviderNin'))
        obj.cloudProviderNin = ApiClient.convertToType(data['cloudProviderNin'], ['String']);
      if (data.hasOwnProperty('isPendingUninstall'))
        obj.isPendingUninstall = ApiClient.convertToType(data['isPendingUninstall'], 'Boolean');
      if (data.hasOwnProperty('k8sNodeLabels__contains'))
        obj.k8sNodeLabelsContains = ApiClient.convertToType(data['k8sNodeLabels__contains'], ['String']);
      if (data.hasOwnProperty('decommissionedAt__lte'))
        obj.decommissionedAtLte = ApiClient.convertToType(data['decommissionedAt__lte'], 'Date');
      if (data.hasOwnProperty('tagsData'))
        obj.tagsData = ApiClient.convertToType(data['tagsData'], 'String');
      if (data.hasOwnProperty('agentVersion__gt'))
        obj.agentVersionGt = ApiClient.convertToType(data['agentVersion__gt'], 'String');
      if (data.hasOwnProperty('createdAt__gt'))
        obj.createdAtGt = ApiClient.convertToType(data['createdAt__gt'], 'Date');
      if (data.hasOwnProperty('threatMitigationStatus'))
        obj.threatMitigationStatus = ApiClient.convertToType(data['threatMitigationStatus'], 'String');
      if (data.hasOwnProperty('lastSuccessfulScanDate__gt'))
        obj.lastSuccessfulScanDateGt = ApiClient.convertToType(data['lastSuccessfulScanDate__gt'], 'Date');
      if (data.hasOwnProperty('firewallEnabled'))
        obj.firewallEnabled = ApiClient.convertToType(data['firewallEnabled'], ['Boolean']);
      if (data.hasOwnProperty('decommissionedAt__lt'))
        obj.decommissionedAtLt = ApiClient.convertToType(data['decommissionedAt__lt'], 'Date');
      if (data.hasOwnProperty('decommissionedAt__between'))
        obj.decommissionedAtBetween = ApiClient.convertToType(data['decommissionedAt__between'], 'String');
      if (data.hasOwnProperty('domainsNin'))
        obj.domainsNin = ApiClient.convertToType(data['domainsNin'], ['String']);
      if (data.hasOwnProperty('createdAt__lt'))
        obj.createdAtLt = ApiClient.convertToType(data['createdAt__lt'], 'Date');
      if (data.hasOwnProperty('gcpServiceAccount__contains'))
        obj.gcpServiceAccountContains = ApiClient.convertToType(data['gcpServiceAccount__contains'], ['String']);
      if (data.hasOwnProperty('threatResolved'))
        obj.threatResolved = ApiClient.convertToType(data['threatResolved'], 'Boolean');
      if (data.hasOwnProperty('cloudLocation__contains'))
        obj.cloudLocationContains = ApiClient.convertToType(data['cloudLocation__contains'], ['String']);
      if (data.hasOwnProperty('lastActiveDate__lt'))
        obj.lastActiveDateLt = ApiClient.convertToType(data['lastActiveDate__lt'], 'Date');
      if (data.hasOwnProperty('networkStatuses'))
        obj.networkStatuses = ApiClient.convertToType(data['networkStatuses'], ['String']);
      if (data.hasOwnProperty('k8sType__contains'))
        obj.k8sTypeContains = ApiClient.convertToType(data['k8sType__contains'], ['String']);
      if (data.hasOwnProperty('networkInterfaceGatewayMacAddress__contains'))
        obj.networkInterfaceGatewayMacAddressContains = ApiClient.convertToType(data['networkInterfaceGatewayMacAddress__contains'], ['String']);
      if (data.hasOwnProperty('cpuCount__between'))
        obj.cpuCountBetween = ApiClient.convertToType(data['cpuCount__between'], 'String');
      if (data.hasOwnProperty('operationalStatesNin'))
        obj.operationalStatesNin = ApiClient.convertToType(data['operationalStatesNin'], ['String']);
      if (data.hasOwnProperty('totalMemory__lt'))
        obj.totalMemoryLt = ApiClient.convertToType(data['totalMemory__lt'], 'Number');
      if (data.hasOwnProperty('k8sVersion__contains'))
        obj.k8sVersionContains = ApiClient.convertToType(data['k8sVersion__contains'], ['String']);
      if (data.hasOwnProperty('installerTypes'))
        obj.installerTypes = ApiClient.convertToType(data['installerTypes'], ['String']);
      if (data.hasOwnProperty('adUserMember__contains'))
        obj.adUserMemberContains = ApiClient.convertToType(data['adUserMember__contains'], ['String']);
      if (data.hasOwnProperty('infected'))
        obj.infected = ApiClient.convertToType(data['infected'], 'Boolean');
      if (data.hasOwnProperty('coreCount__lt'))
        obj.coreCountLt = ApiClient.convertToType(data['coreCount__lt'], 'Number');
      if (data.hasOwnProperty('missingPermissions'))
        obj.missingPermissions = ApiClient.convertToType(data['missingPermissions'], ['String']);
      if (data.hasOwnProperty('installerTypesNin'))
        obj.installerTypesNin = ApiClient.convertToType(data['installerTypesNin'], ['String']);
      if (data.hasOwnProperty('machineTypesNin'))
        obj.machineTypesNin = ApiClient.convertToType(data['machineTypesNin'], ['String']);
      if (data.hasOwnProperty('filterId'))
        obj.filterId = ApiClient.convertToType(data['filterId'], 'String');
      if (data.hasOwnProperty('isDecommissioned'))
        obj.isDecommissioned = ApiClient.convertToType(data['isDecommissioned'], ['Boolean']);
      if (data.hasOwnProperty('agentVersion__lt'))
        obj.agentVersionLt = ApiClient.convertToType(data['agentVersion__lt'], 'String');
      if (data.hasOwnProperty('rangerStatusesNin'))
        obj.rangerStatusesNin = ApiClient.convertToType(data['rangerStatusesNin'], ['String']);
      if (data.hasOwnProperty('cloudInstanceSize__contains'))
        obj.cloudInstanceSizeContains = ApiClient.convertToType(data['cloudInstanceSize__contains'], ['String']);
      if (data.hasOwnProperty('rangerVersionsNin'))
        obj.rangerVersionsNin = ApiClient.convertToType(data['rangerVersionsNin'], ['String']);
      if (data.hasOwnProperty('rsoLevel'))
        obj.rsoLevel = ApiClient.convertToType(data['rsoLevel'], 'String');
      if (data.hasOwnProperty('cpuCount__lte'))
        obj.cpuCountLte = ApiClient.convertToType(data['cpuCount__lte'], 'Number');
      if (data.hasOwnProperty('updatedAt__between'))
        obj.updatedAtBetween = ApiClient.convertToType(data['updatedAt__between'], 'String');
      if (data.hasOwnProperty('consoleMigrationStatuses'))
        obj.consoleMigrationStatuses = ApiClient.convertToType(data['consoleMigrationStatuses'], ['String']);
      if (data.hasOwnProperty('azureResourceGroup__contains'))
        obj.azureResourceGroupContains = ApiClient.convertToType(data['azureResourceGroup__contains'], ['String']);
      if (data.hasOwnProperty('threatCreatedAt__gt'))
        obj.threatCreatedAtGt = ApiClient.convertToType(data['threatCreatedAt__gt'], 'Date');
      if (data.hasOwnProperty('siteIds'))
        obj.siteIds = ApiClient.convertToType(data['siteIds'], ['String']);
      if (data.hasOwnProperty('uuid__contains'))
        obj.uuidContains = ApiClient.convertToType(data['uuid__contains'], ['String']);
      if (data.hasOwnProperty('networkStatusesNin'))
        obj.networkStatusesNin = ApiClient.convertToType(data['networkStatusesNin'], ['String']);
      if (data.hasOwnProperty('totalMemory__lte'))
        obj.totalMemoryLte = ApiClient.convertToType(data['totalMemory__lte'], 'Number');
      if (data.hasOwnProperty('activeThreats__gt'))
        obj.activeThreatsGt = ApiClient.convertToType(data['activeThreats__gt'], 'Number');
      if (data.hasOwnProperty('lastSuccessfulScanDate__lt'))
        obj.lastSuccessfulScanDateLt = ApiClient.convertToType(data['lastSuccessfulScanDate__lt'], 'Date');
      if (data.hasOwnProperty('adQuery'))
        obj.adQuery = ApiClient.convertToType(data['adQuery'], 'String');
      if (data.hasOwnProperty('uuids'))
        obj.uuids = ApiClient.convertToType(data['uuids'], ['String']);
    }
    return obj;
  }

  /**
   * Agent versions not to include
   * @member {Array.<String>} agentVersionsNin
   */
  exports.prototype.agentVersionsNin = undefined;

  /**
   * Date range for first registration time (format: <from_timestamp>-<to_timestamp>, inclusive)
   * @member {String} registeredAtBetween
   */
  exports.prototype.registeredAtBetween = undefined;

  /**
   * Agents registered before or at this time
   * @member {Date} registeredAtLte
   */
  exports.prototype.registeredAtLte = undefined;

  /**
   * Free-text filter by Active Directory computer name or its groups (supports multiple values)
   * @member {Array.<String>} adComputerQueryContains
   */
  exports.prototype.adComputerQueryContains = undefined;

  /**
   * Mitigation mode policy for suspicious activity
   * @member {module:model/AgentsSchemasAgentsBroadcastActionSchemaFilter.MitigationModeSuspiciousEnum} mitigationModeSuspicious
   */
  exports.prototype.mitigationModeSuspicious = undefined;

  /**
   * Agent has a local configuration set
   * @member {Boolean} hasLocalConfiguration
   */
  exports.prototype.hasLocalConfiguration = undefined;

  /**
   * Free-text filter by Active Directory computer name or its groups (supports multiple values)
   * @member {Array.<String>} adUserQueryContains
   */
  exports.prototype.adUserQueryContains = undefined;

  /**
   * A free-text search term, will match applicable attributes (sub-string match). Note: Device's physical addresses will be matched if they start with the search term only (no match if they contain the term).
   * @member {String} query
   */
  exports.prototype.query = undefined;

  /**
   * Agents from which cloud provider
   * @member {Array.<String>} cloudProvider
   */
  exports.prototype.cloudProvider = undefined;

  /**
   * CPU cores (more than)
   * @member {Number} coreCountGt
   */
  exports.prototype.coreCountGt = undefined;

  /**
   * Agents decommissioned after this timestamp
   * @member {Date} decommissionedAtGt
   */
  exports.prototype.decommissionedAtGt = undefined;

  /**
   * Agents registered after or at this time
   * @member {Date} registeredAtGte
   */
  exports.prototype.registeredAtGte = undefined;

  /**
   * Memory size (MB, more than)
   * @member {Number} totalMemoryGt
   */
  exports.prototype.totalMemoryGt = undefined;

  /**
   * Agents updated after this timestamp
   * @member {Date} updatedAtGt
   */
  exports.prototype.updatedAtGt = undefined;

  /**
   * Include only Agents protecting containerized workloads
   * @member {Boolean} hasContainerizedWorkload
   */
  exports.prototype.hasContainerizedWorkload = undefined;

  /**
   * Free-text filter by cloud image (supports multiple values)
   * @member {Array.<String>} cloudImageContains
   */
  exports.prototype.cloudImageContains = undefined;

  /**
   * Agents with threats reported after or at this time
   * @member {Date} threatCreatedAtGte
   */
  exports.prototype.threatCreatedAtGte = undefined;

  /**
   * Apps vulnerability status nin
   * @member {Array.<module:model/AgentsSchemasAgentsBroadcastActionSchemaFilter.AppsVulnerabilityStatusesNinEnum>} appsVulnerabilityStatusesNin
   */
  exports.prototype.appsVulnerabilityStatusesNin = undefined;

  /**
   * Not included scan statuses
   * @member {Array.<module:model/AgentsSchemasAgentsBroadcastActionSchemaFilter.ScanStatusesNinEnum>} scanStatusesNin
   */
  exports.prototype.scanStatusesNin = undefined;

  /**
   * Free-text filter by Active Directory computer groups string (supports multiple values)
   * @member {Array.<String>} adComputerMemberContains
   */
  exports.prototype.adComputerMemberContains = undefined;

  /**
   * CPU cores (less than or equal)
   * @member {Number} coreCountLte
   */
  exports.prototype.coreCountLte = undefined;

  /**
   * Ranger versions to include
   * @member {Array.<String>} rangerVersions
   */
  exports.prototype.rangerVersions = undefined;

  /**
   * Included machine types
   * @member {Array.<module:model/AgentsSchemasAgentsBroadcastActionSchemaFilter.MachineTypesEnum>} machineTypes
   */
  exports.prototype.machineTypes = undefined;

  /**
   * CPU cores (more than or equal)
   * @member {Number} coreCountGte
   */
  exports.prototype.coreCountGte = undefined;

  /**
   * Include only Agents reporting these locations
   * @member {Array.<String>} locationIds
   */
  exports.prototype.locationIds = undefined;

  /**
   * Do not include only Agents reporting these locations
   * @member {Array.<String>} locationIdsNin
   */
  exports.prototype.locationIdsNin = undefined;

  /**
   * Gateway ip
   * @member {String} gatewayIp
   */
  exports.prototype.gatewayIp = undefined;

  /**
   * Agents updated before or at this timestamp
   * @member {Date} updatedAtLte
   */
  exports.prototype.updatedAtLte = undefined;

  /**
   * List of Group IDs to filter by
   * @member {Array.<String>} groupIds
   */
  exports.prototype.groupIds = undefined;

  /**
   * Excluded missing permissions
   * @member {Array.<module:model/AgentsSchemasAgentsBroadcastActionSchemaFilter.MissingPermissionsNinEnum>} missingPermissionsNin
   */
  exports.prototype.missingPermissionsNin = undefined;

  /**
   * Migration status
   * @member {module:model/AgentsSchemasAgentsBroadcastActionSchemaFilter.MigrationStatusEnum} migrationStatus
   */
  exports.prototype.migrationStatus = undefined;

  /**
   * Has at least one threat with at least one mitigation action pending reboot to succeed
   * @member {Array.<Boolean>} threatRebootRequired
   */
  exports.prototype.threatRebootRequired = undefined;

  /**
   * Free-text filter by Serial Number (supports multiple values)
   * @member {Array.<String>} serialNumberContains
   */
  exports.prototype.serialNumberContains = undefined;

  /**
   * Agents decommissioned after or at this timestamp
   * @member {Date} decommissionedAtGte
   */
  exports.prototype.decommissionedAtGte = undefined;

  /**
   * Date range for last successful full disk scan(format: <from_timestamp>-<to_timestamp>, inclusive)
   * @member {String} lastSuccessfulScanDateBetween
   */
  exports.prototype.lastSuccessfulScanDateBetween = undefined;

  /**
   * Agents last active before or at this time
   * @member {Date} lastActiveDateLte
   */
  exports.prototype.lastActiveDateLte = undefined;

  /**
   * Date range for last active date(format: <from_timestamp>-<to_timestamp>, inclusive)
   * @member {String} lastActiveDateBetween
   */
  exports.prototype.lastActiveDateBetween = undefined;

  /**
   * The agents supports Network Quarantine Control and its enabled for the agent's group
   * @member {Array.<Boolean>} networkQuarantineEnabled
   */
  exports.prototype.networkQuarantineEnabled = undefined;

  /**
   * Free-text filter by cloud tags (supports multiple values)
   * @member {Array.<String>} cloudTagsContains
   */
  exports.prototype.cloudTagsContains = undefined;

  /**
   * Agents with threats reported in a date range (format: <from_timestamp>-<to_timestamp>, inclusive)
   * @member {String} threatCreatedAtBetween
   */
  exports.prototype.threatCreatedAtBetween = undefined;

  /**
   * Disk encryption status
   * @member {Boolean} encryptedApplications
   */
  exports.prototype.encryptedApplications = undefined;

  /**
   * Include installed, uninstalled or both
   * @member {Array.<Boolean>} isUninstalled
   */
  exports.prototype.isUninstalled = undefined;

  /**
   * Free-text filter by MAC address (supports multiple values)
   * @member {Array.<String>} networkInterfacePhysicalContains
   */
  exports.prototype.networkInterfacePhysicalContains = undefined;

  /**
   * Agents versions greater than or equal to given version
   * @member {String} agentVersionGte
   */
  exports.prototype.agentVersionGte = undefined;

  /**
   * Agents last successful full disk scan after or at this time
   * @member {Date} lastSuccessfulScanDateGte
   */
  exports.prototype.lastSuccessfulScanDateGte = undefined;

  /**
   * Agent operational state
   * @member {Array.<String>} operationalStates
   */
  exports.prototype.operationalStates = undefined;

  /**
   * Free-text filter by Active Directory username string (supports multiple values)
   * @member {Array.<String>} adUserNameContains
   */
  exports.prototype.adUserNameContains = undefined;

  /**
   * Not included OS types
   * @member {Array.<module:model/AgentsSchemasAgentsBroadcastActionSchemaFilter.OsTypesNinEnum>} osTypesNin
   */
  exports.prototype.osTypesNin = undefined;

  /**
   * The ID of the CSV file to filter by
   * @member {String} csvFilterId
   */
  exports.prototype.csvFilterId = undefined;

  /**
   * Include only active Agents
   * @member {Boolean} isActive
   */
  exports.prototype.isActive = undefined;

  /**
   * Agent mitigation mode policy
   * @member {module:model/AgentsSchemasAgentsBroadcastActionSchemaFilter.MitigationModeEnum} mitigationMode
   */
  exports.prototype.mitigationMode = undefined;

  /**
   * Free-text filter by aws subnet ids (supports multiple values)
   * @member {Array.<String>} awsSubnetIdsContains
   */
  exports.prototype.awsSubnetIdsContains = undefined;

  /**
   * Agents versions less than or equal to given version
   * @member {String} agentVersionLte
   */
  exports.prototype.agentVersionLte = undefined;

  /**
   * Agents updated after or at this timestamp
   * @member {Date} updatedAtGte
   */
  exports.prototype.updatedAtGte = undefined;

  /**
   * Free-text filter by OS full name and version (supports multiple values)
   * @member {Array.<String>} osVersionContains
   */
  exports.prototype.osVersionContains = undefined;

  /**
   * Free-text filter by visible IP (supports multiple values)
   * @member {Array.<String>} externalIpContains
   */
  exports.prototype.externalIpContains = undefined;

  /**
   * Free-text filter by aws securityGroups(supports multiple values)
   * @member {Array.<String>} awsSecurityGroupsContains
   */
  exports.prototype.awsSecurityGroupsContains = undefined;

  /**
   * Free-text filter by K8s node name (supports multiple values)
   * @member {Array.<String>} k8sNodeNameContains
   */
  exports.prototype.k8sNodeNameContains = undefined;

  /**
   * Version range for agent version (format: <from_version>-<to_version>, inclusive)
   * @member {String} agentVersionBetween
   */
  exports.prototype.agentVersionBetween = undefined;

  /**
   * Include Agents with this amount of active threats
   * @member {Number} activeThreats
   */
  exports.prototype.activeThreats = undefined;

  /**
   * Include only Agents that have any tags assigned if True, or none if False
   * @member {Boolean} hasTags
   */
  exports.prototype.hasTags = undefined;

  /**
   * Free-text filter by agent namespace (supports multiple values)
   * @member {Array.<String>} agentNamespaceContains
   */
  exports.prototype.agentNamespaceContains = undefined;

  /**
   * Number of CPUs (less than)
   * @member {Number} cpuCountLt
   */
  exports.prototype.cpuCountLt = undefined;

  /**
   * Agents registered before this time
   * @member {Date} registeredAtLt
   */
  exports.prototype.registeredAtLt = undefined;

  /**
   * Free-text filter by local IP (supports multiple values)
   * @member {Array.<String>} networkInterfaceInetContains
   */
  exports.prototype.networkInterfaceInetContains = undefined;

  /**
   * Free-text filter by computer name (supports multiple values)
   * @member {Array.<String>} computerNameContains
   */
  exports.prototype.computerNameContains = undefined;

  /**
   * Free-text filter by cloud network (supports multiple values)
   * @member {Array.<String>} cloudNetworkContains
   */
  exports.prototype.cloudNetworkContains = undefined;

  /**
   * Include only agents that has Remote Ops Forensicsfeature supported
   * @member {Boolean} remoteOpsForensicsSupported
   */
  exports.prototype.remoteOpsForensicsSupported = undefined;

  /**
   * Agent remote profiling state
   * @member {Array.<String>} remoteProfilingStates
   */
  exports.prototype.remoteProfilingStates = undefined;

  /**
   * List of Group IDs to filter by
   * @member {Array.<String>} filteredGroupIds
   */
  exports.prototype.filteredGroupIds = undefined;

  /**
   * Free-text filter by agent pod name (supports multiple values)
   * @member {Array.<String>} agentPodNameContains
   */
  exports.prototype.agentPodNameContains = undefined;

  /**
   * Excluded pending user actions
   * @member {Array.<module:model/AgentsSchemasAgentsBroadcastActionSchemaFilter.UserActionsNeededNinEnum>} userActionsNeededNin
   */
  exports.prototype.userActionsNeededNin = undefined;

  /**
   * Status of Ranger
   * @member {Array.<module:model/AgentsSchemasAgentsBroadcastActionSchemaFilter.RangerStatusesEnum>} rangerStatuses
   */
  exports.prototype.rangerStatuses = undefined;

  /**
   * Match computer name partially (substring)
   * @member {String} computerNameLike
   */
  exports.prototype.computerNameLike = undefined;

  /**
   * Free-text filter by external ID (Customer ID)
   * @member {Array.<String>} externalIdContains
   */
  exports.prototype.externalIdContains = undefined;

  /**
   * Date range for creation time (format: <from_timestamp>-<to_timestamp>, inclusive)
   * @member {String} createdAtBetween
   */
  exports.prototype.createdAtBetween = undefined;

  /**
   * Migration status nin
   * @member {Array.<module:model/AgentsSchemasAgentsBroadcastActionSchemaFilter.ConsoleMigrationStatusesNinEnum>} consoleMigrationStatusesNin
   */
  exports.prototype.consoleMigrationStatusesNin = undefined;

  /**
   * Free-text filter by CPU name (supports multiple values)
   * @member {Array.<String>} cpuIdContains
   */
  exports.prototype.cpuIdContains = undefined;

  /**
   * Possible number of CPU cores (inclusive)
   * @member {String} coreCountBetween
   */
  exports.prototype.coreCountBetween = undefined;

  /**
   * Include only Agents with updated software
   * @member {Boolean} isUpToDate
   */
  exports.prototype.isUpToDate = undefined;

  /**
   * Agents with threats reported before this time
   * @member {Date} threatCreatedAtLt
   */
  exports.prototype.threatCreatedAtLt = undefined;

  /**
   * [DEPRECATED] Use rangerStatuses.
   * @member {module:model/AgentsSchemasAgentsBroadcastActionSchemaFilter.RangerStatusEnum} rangerStatus
   */
  exports.prototype.rangerStatus = undefined;

  /**
   * Total memory range (GB, inclusive)
   * @member {String} totalMemoryBetween
   */
  exports.prototype.totalMemoryBetween = undefined;

  /**
   * Agents last successful full disk scan before or at this time
   * @member {Date} lastSuccessfulScanDateLte
   */
  exports.prototype.lastSuccessfulScanDateLte = undefined;

  /**
   * Included network domains
   * @member {Array.<String>} domains
   */
  exports.prototype.domains = undefined;

  /**
   * Free-text filter by aws role(supports multiple values)
   * @member {Array.<String>} awsRoleContains
   */
  exports.prototype.awsRoleContains = undefined;

  /**
   * Free-text filter by username (supports multiple values)
   * @member {Array.<String>} lastLoggedInUserNameContains
   */
  exports.prototype.lastLoggedInUserNameContains = undefined;

  /**
   * Number of CPUs (more than)
   * @member {Number} cpuCountGt
   */
  exports.prototype.cpuCountGt = undefined;

  /**
   * Free-text filter by cloud account (supports multiple values)
   * @member {Array.<String>} cloudAccountContains
   */
  exports.prototype.cloudAccountContains = undefined;

  /**
   * Free-text filter by cluster name (supports multiple values)
   * @member {Array.<String>} clusterNameContains
   */
  exports.prototype.clusterNameContains = undefined;

  /**
   * Included scan statuses
   * @member {Array.<module:model/AgentsSchemasAgentsBroadcastActionSchemaFilter.ScanStatusesEnum>} scanStatuses
   */
  exports.prototype.scanStatuses = undefined;

  /**
   * Agents updated before this timestamp
   * @member {Date} updatedAtLt
   */
  exports.prototype.updatedAtLt = undefined;

  /**
   * A list of Agent IDs
   * @member {Array.<String>} ids
   */
  exports.prototype.ids = undefined;

  /**
   * Free-text filter by live update ID (supports multiple values)
   * @member {Array.<String>} liveUpdateIdContains
   */
  exports.prototype.liveUpdateIdContains = undefined;

  /**
   * Computer name
   * @member {String} computerName
   */
  exports.prototype.computerName = undefined;

  /**
   * Agent's universally unique identifier
   * @member {String} uuid
   */
  exports.prototype.uuid = undefined;

  /**
   * Included OS types
   * @member {Array.<module:model/AgentsSchemasAgentsBroadcastActionSchemaFilter.OsTypesEnum>} osTypes
   */
  exports.prototype.osTypes = undefined;

  /**
   * Apps vulnerability status in
   * @member {Array.<module:model/AgentsSchemasAgentsBroadcastActionSchemaFilter.AppsVulnerabilityStatusesEnum>} appsVulnerabilityStatuses
   */
  exports.prototype.appsVulnerabilityStatuses = undefined;

  /**
   * Agents last active after or at this time
   * @member {Date} lastActiveDateGte
   */
  exports.prototype.lastActiveDateGte = undefined;

  /**
   * Include only Agents that have at least one threat with this content hash
   * @member {String} threatContentHash
   */
  exports.prototype.threatContentHash = undefined;

  /**
   * Do not include these Agent remote profiling states
   * @member {Array.<String>} remoteProfilingStatesNin
   */
  exports.prototype.remoteProfilingStatesNin = undefined;

  /**
   * Agents created before or at this timestamp
   * @member {Date} createdAtLte
   */
  exports.prototype.createdAtLte = undefined;

  /**
   * Scan status
   * @member {module:model/AgentsSchemasAgentsBroadcastActionSchemaFilter.ScanStatusEnum} scanStatus
   */
  exports.prototype.scanStatus = undefined;

  /**
   * List of Site IDs to filter by
   * @member {Array.<String>} filteredSiteIds
   */
  exports.prototype.filteredSiteIds = undefined;

  /**
   * Included pending user actions
   * @member {Array.<module:model/AgentsSchemasAgentsBroadcastActionSchemaFilter.UserActionsNeededEnum>} userActionsNeeded
   */
  exports.prototype.userActionsNeeded = undefined;

  /**
   * Agents registered after this time
   * @member {Date} registeredAtGt
   */
  exports.prototype.registeredAtGt = undefined;

  /**
   * OS architecture
   * @member {module:model/AgentsSchemasAgentsBroadcastActionSchemaFilter.OsArchEnum} osArch
   */
  exports.prototype.osArch = undefined;

  /**
   * Free-text filter by Active Directory computer name string (supports multiple values)
   * @member {Array.<String>} adComputerNameContains
   */
  exports.prototype.adComputerNameContains = undefined;

  /**
   * Memory size (MB, more than or equal)
   * @member {Number} totalMemoryGte
   */
  exports.prototype.totalMemoryGte = undefined;

  /**
   * Include only Agents with at least one hidden threat
   * @member {Boolean} threatHidden
   */
  exports.prototype.threatHidden = undefined;

  /**
   * Agents last active after this time
   * @member {Date} lastActiveDateGt
   */
  exports.prototype.lastActiveDateGt = undefined;

  /**
   * Agents with threats reported before or at this time
   * @member {Date} threatCreatedAtLte
   */
  exports.prototype.threatCreatedAtLte = undefined;

  /**
   * Number of CPUs (more than or equal)
   * @member {Number} cpuCountGte
   */
  exports.prototype.cpuCountGte = undefined;

  /**
   * Free-text filter by cloud instance id(supports multiple values)
   * @member {Array.<String>} cloudInstanceIdContains
   */
  exports.prototype.cloudInstanceIdContains = undefined;

  /**
   * Agent versions to include
   * @member {Array.<String>} agentVersions
   */
  exports.prototype.agentVersions = undefined;

  /**
   * Free-text filter by Active Directory string (supports multiple values)
   * @member {Array.<String>} adQueryContains
   */
  exports.prototype.adQueryContains = undefined;

  /**
   * Agents created after or at this timestamp
   * @member {Date} createdAtGte
   */
  exports.prototype.createdAtGte = undefined;

  /**
   * List of Account IDs to filter by
   * @member {Array.<String>} accountIds
   */
  exports.prototype.accountIds = undefined;

  /**
   * The agents supports Location Awareness and it is enabled for the agent's group
   * @member {Array.<Boolean>} locationEnabled
   */
  exports.prototype.locationEnabled = undefined;

  /**
   * Exclude Agents from these cloud provider
   * @member {Array.<String>} cloudProviderNin
   */
  exports.prototype.cloudProviderNin = undefined;

  /**
   * Include only Agents with pending uninstall requests
   * @member {Boolean} isPendingUninstall
   */
  exports.prototype.isPendingUninstall = undefined;

  /**
   * Free-text filter by K8s node labels (supports multiple values)
   * @member {Array.<String>} k8sNodeLabelsContains
   */
  exports.prototype.k8sNodeLabelsContains = undefined;

  /**
   * Agents decommissioned before this timestamp
   * @member {Date} decommissionedAtLte
   */
  exports.prototype.decommissionedAtLte = undefined;

  /**
   * Filter agents by their assigned tags. Given in form of a JSON where each key represents a tag key, and each value represents a list of string values to filter by. To filter by unassigned tag values, use __nin suffix in the tag key.
   * @member {String} tagsData
   */
  exports.prototype.tagsData = undefined;

  /**
   * Agents versions greater than given version
   * @member {String} agentVersionGt
   */
  exports.prototype.agentVersionGt = undefined;

  /**
   * Agents created after this timestamp
   * @member {Date} createdAtGt
   */
  exports.prototype.createdAtGt = undefined;

  /**
   * Include only Agents that have threats with this mitigation status
   * @member {module:model/AgentsSchemasAgentsBroadcastActionSchemaFilter.ThreatMitigationStatusEnum} threatMitigationStatus
   */
  exports.prototype.threatMitigationStatus = undefined;

  /**
   * Agents last successful full disk scan after this time
   * @member {Date} lastSuccessfulScanDateGt
   */
  exports.prototype.lastSuccessfulScanDateGt = undefined;

  /**
   * The agents supports Firewall Control and it is enabled for the agent's group
   * @member {Array.<Boolean>} firewallEnabled
   */
  exports.prototype.firewallEnabled = undefined;

  /**
   * Agents decommissioned before this timestamp
   * @member {Date} decommissionedAtLt
   */
  exports.prototype.decommissionedAtLt = undefined;

  /**
   * Date range for decommission time (format: <from_timestamp>-<to_timestamp>, inclusive)
   * @member {String} decommissionedAtBetween
   */
  exports.prototype.decommissionedAtBetween = undefined;

  /**
   * Not included network domains
   * @member {Array.<String>} domainsNin
   */
  exports.prototype.domainsNin = undefined;

  /**
   * Agents created before this timestamp
   * @member {Date} createdAtLt
   */
  exports.prototype.createdAtLt = undefined;

  /**
   * Free-text filter by gcp service account (supports multiple values)
   * @member {Array.<String>} gcpServiceAccountContains
   */
  exports.prototype.gcpServiceAccountContains = undefined;

  /**
   * Include only Agents with at least one resolved threat
   * @member {Boolean} threatResolved
   */
  exports.prototype.threatResolved = undefined;

  /**
   * Free-text filter by cloud location (supports multiple values)
   * @member {Array.<String>} cloudLocationContains
   */
  exports.prototype.cloudLocationContains = undefined;

  /**
   * Agents last active before this time
   * @member {Date} lastActiveDateLt
   */
  exports.prototype.lastActiveDateLt = undefined;

  /**
   * Included network statuses
   * @member {Array.<module:model/AgentsSchemasAgentsBroadcastActionSchemaFilter.NetworkStatusesEnum>} networkStatuses
   */
  exports.prototype.networkStatuses = undefined;

  /**
   * Free-text filter by K8s type(supports multiple values)
   * @member {Array.<String>} k8sTypeContains
   */
  exports.prototype.k8sTypeContains = undefined;

  /**
   * Free-text filter by Gateway MAC address (supports multiple values)
   * @member {Array.<String>} networkInterfaceGatewayMacAddressContains
   */
  exports.prototype.networkInterfaceGatewayMacAddressContains = undefined;

  /**
   * Possible number of CPU cores (inclusive)
   * @member {String} cpuCountBetween
   */
  exports.prototype.cpuCountBetween = undefined;

  /**
   * Do not include these Agent operational states
   * @member {Array.<String>} operationalStatesNin
   */
  exports.prototype.operationalStatesNin = undefined;

  /**
   * Memory size (MB, less than)
   * @member {Number} totalMemoryLt
   */
  exports.prototype.totalMemoryLt = undefined;

  /**
   * Free-text filter by K8s version (supports multiple values)
   * @member {Array.<String>} k8sVersionContains
   */
  exports.prototype.k8sVersionContains = undefined;

  /**
   * Include only Agents installed with these package types
   * @member {Array.<module:model/AgentsSchemasAgentsBroadcastActionSchemaFilter.InstallerTypesEnum>} installerTypes
   */
  exports.prototype.installerTypes = undefined;

  /**
   * Free-text filter by Active Directory user groups string (supports multiple values)
   * @member {Array.<String>} adUserMemberContains
   */
  exports.prototype.adUserMemberContains = undefined;

  /**
   * Include only Agents with at least one active threat
   * @member {Boolean} infected
   */
  exports.prototype.infected = undefined;

  /**
   * CPU cores (less than)
   * @member {Number} coreCountLt
   */
  exports.prototype.coreCountLt = undefined;

  /**
   * Included missing permissions
   * @member {Array.<module:model/AgentsSchemasAgentsBroadcastActionSchemaFilter.MissingPermissionsEnum>} missingPermissions
   */
  exports.prototype.missingPermissions = undefined;

  /**
   * Exclude Agents installed with these package types
   * @member {Array.<module:model/AgentsSchemasAgentsBroadcastActionSchemaFilter.InstallerTypesNinEnum>} installerTypesNin
   */
  exports.prototype.installerTypesNin = undefined;

  /**
   * Not included machine types
   * @member {Array.<module:model/AgentsSchemasAgentsBroadcastActionSchemaFilter.MachineTypesNinEnum>} machineTypesNin
   */
  exports.prototype.machineTypesNin = undefined;

  /**
   * Include all Agents matching this saved filter
   * @member {String} filterId
   */
  exports.prototype.filterId = undefined;

  /**
   * Include active, decommissioned or both
   * @member {Array.<Boolean>} isDecommissioned
   */
  exports.prototype.isDecommissioned = undefined;

  /**
   * Agents versions less than given version
   * @member {String} agentVersionLt
   */
  exports.prototype.agentVersionLt = undefined;

  /**
   * Do not include these Ranger Statuses
   * @member {Array.<module:model/AgentsSchemasAgentsBroadcastActionSchemaFilter.RangerStatusesNinEnum>} rangerStatusesNin
   */
  exports.prototype.rangerStatusesNin = undefined;

  /**
   * Free-text filter by cloud instance size(supports multiple values)
   * @member {Array.<String>} cloudInstanceSizeContains
   */
  exports.prototype.cloudInstanceSizeContains = undefined;

  /**
   * Ranger versions not to include
   * @member {Array.<String>} rangerVersionsNin
   */
  exports.prototype.rangerVersionsNin = undefined;

  /**
   * Supported Remote Script Orchestration level
   * @member {module:model/AgentsSchemasAgentsBroadcastActionSchemaFilter.RsoLevelEnum} rsoLevel
   */
  exports.prototype.rsoLevel = undefined;

  /**
   * Number of CPUs (less than or equal)
   * @member {Number} cpuCountLte
   */
  exports.prototype.cpuCountLte = undefined;

  /**
   * Date range for update time (format: <from_timestamp>-<to_timestamp>, inclusive)
   * @member {String} updatedAtBetween
   */
  exports.prototype.updatedAtBetween = undefined;

  /**
   * Migration status in
   * @member {Array.<module:model/AgentsSchemasAgentsBroadcastActionSchemaFilter.ConsoleMigrationStatusesEnum>} consoleMigrationStatuses
   */
  exports.prototype.consoleMigrationStatuses = undefined;

  /**
   * Free-text filter by azure resource group(supports multiple values)
   * @member {Array.<String>} azureResourceGroupContains
   */
  exports.prototype.azureResourceGroupContains = undefined;

  /**
   * Agents with threats reported after this time
   * @member {Date} threatCreatedAtGt
   */
  exports.prototype.threatCreatedAtGt = undefined;

  /**
   * List of Site IDs to filter by
   * @member {Array.<String>} siteIds
   */
  exports.prototype.siteIds = undefined;

  /**
   * Free-text filter by Agent UUID (supports multiple values)
   * @member {Array.<String>} uuidContains
   */
  exports.prototype.uuidContains = undefined;

  /**
   * Included network statuses
   * @member {Array.<module:model/AgentsSchemasAgentsBroadcastActionSchemaFilter.NetworkStatusesNinEnum>} networkStatusesNin
   */
  exports.prototype.networkStatusesNin = undefined;

  /**
   * Memory size (MB, less than or equal)
   * @member {Number} totalMemoryLte
   */
  exports.prototype.totalMemoryLte = undefined;

  /**
   * Include Agents with at least this amount of active threats
   * @member {Number} activeThreatsGt
   */
  exports.prototype.activeThreatsGt = undefined;

  /**
   * Agents last successful full disk scan before this time
   * @member {Date} lastSuccessfulScanDateLt
   */
  exports.prototype.lastSuccessfulScanDateLt = undefined;

  /**
   * An Active Directory query string
   * @member {String} adQuery
   */
  exports.prototype.adQuery = undefined;

  /**
   * A list of included UUIDs
   * @member {Array.<String>} uuids
   */
  exports.prototype.uuids = undefined;



  /**
   * Allowed values for the <code>mitigationModeSuspicious</code> property.
   * @enum {String}
   * @readonly
   */
  exports.MitigationModeSuspiciousEnum = {
    /**
     * value: "detect"
     * @const
     */
    detect: "detect",

    /**
     * value: "protect"
     * @const
     */
    protect: "protect"
  };


  /**
   * Allowed values for the <code>appsVulnerabilityStatusesNin</code> property.
   * @enum {String}
   * @readonly
   */
  exports.AppsVulnerabilityStatusesNinEnum = {
    /**
     * value: "patch_required"
     * @const
     */
    patchRequired: "patch_required",

    /**
     * value: "up_to_date"
     * @const
     */
    upToDate: "up_to_date",

    /**
     * value: "not_applicable"
     * @const
     */
    notApplicable: "not_applicable"
  };


  /**
   * Allowed values for the <code>scanStatusesNin</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ScanStatusesNinEnum = {
    /**
     * value: "none"
     * @const
     */
    none: "none",

    /**
     * value: "started"
     * @const
     */
    started: "started",

    /**
     * value: "aborted"
     * @const
     */
    aborted: "aborted",

    /**
     * value: "finished"
     * @const
     */
    finished: "finished"
  };


  /**
   * Allowed values for the <code>machineTypes</code> property.
   * @enum {String}
   * @readonly
   */
  exports.MachineTypesEnum = {
    /**
     * value: "unknown"
     * @const
     */
    unknown: "unknown",

    /**
     * value: "desktop"
     * @const
     */
    desktop: "desktop",

    /**
     * value: "laptop"
     * @const
     */
    laptop: "laptop",

    /**
     * value: "server"
     * @const
     */
    server: "server",

    /**
     * value: "kubernetes node"
     * @const
     */
    kubernetesNode: "kubernetes node",

    /**
     * value: "storage"
     * @const
     */
    storage: "storage",

    /**
     * value: "kubernetes pod"
     * @const
     */
    kubernetesPod: "kubernetes pod",

    /**
     * value: "ecs task"
     * @const
     */
    ecsTask: "ecs task"
  };


  /**
   * Allowed values for the <code>missingPermissionsNin</code> property.
   * @enum {String}
   * @readonly
   */
  exports.MissingPermissionsNinEnum = {
    /**
     * value: "user_action_needed_fda"
     * @const
     */
    fda: "user_action_needed_fda",

    /**
     * value: "user_action_needed_rs_fda"
     * @const
     */
    rsFda: "user_action_needed_rs_fda",

    /**
     * value: "user_action_needed_fda_helper"
     * @const
     */
    fdaHelper: "user_action_needed_fda_helper",

    /**
     * value: "user_action_needed_fda_sentineld"
     * @const
     */
    fdaSentineld: "user_action_needed_fda_sentineld",

    /**
     * value: "user_action_needed_bluetooth_per"
     * @const
     */
    bluetoothPer: "user_action_needed_bluetooth_per",

    /**
     * value: "user_action_needed_network"
     * @const
     */
    network: "user_action_needed_network",

    /**
     * value: "user_action_needed_notifications"
     * @const
     */
    notifications: "user_action_needed_notifications"
  };


  /**
   * Allowed values for the <code>migrationStatus</code> property.
   * @enum {String}
   * @readonly
   */
  exports.MigrationStatusEnum = {
    /**
     * value: "N/A"
     * @const
     */
    NA: "N/A",

    /**
     * value: "Pending"
     * @const
     */
    pending: "Pending",

    /**
     * value: "Migrated"
     * @const
     */
    migrated: "Migrated",

    /**
     * value: "Failed"
     * @const
     */
    failed: "Failed"
  };


  /**
   * Allowed values for the <code>osTypesNin</code> property.
   * @enum {String}
   * @readonly
   */
  exports.OsTypesNinEnum = {
    /**
     * value: "windows"
     * @const
     */
    windows: "windows",

    /**
     * value: "macos"
     * @const
     */
    macos: "macos",

    /**
     * value: "linux"
     * @const
     */
    linux: "linux",

    /**
     * value: "windows_legacy"
     * @const
     */
    windowsLegacy: "windows_legacy"
  };


  /**
   * Allowed values for the <code>mitigationMode</code> property.
   * @enum {String}
   * @readonly
   */
  exports.MitigationModeEnum = {
    /**
     * value: "detect"
     * @const
     */
    detect: "detect",

    /**
     * value: "protect"
     * @const
     */
    protect: "protect"
  };


  /**
   * Allowed values for the <code>userActionsNeededNin</code> property.
   * @enum {String}
   * @readonly
   */
  exports.UserActionsNeededNinEnum = {
    /**
     * value: "none"
     * @const
     */
    none: "none",

    /**
     * value: "user_action_needed"
     * @const
     */
    userActionNeeded: "user_action_needed",

    /**
     * value: "reboot_needed"
     * @const
     */
    rebootNeeded: "reboot_needed",

    /**
     * value: "upgrade_needed"
     * @const
     */
    upgradeNeeded: "upgrade_needed",

    /**
     * value: "incompatible_os"
     * @const
     */
    incompatibleOs: "incompatible_os",

    /**
     * value: "unprotected"
     * @const
     */
    unprotected: "unprotected",

    /**
     * value: "rebootless_without_dynamic_detection"
     * @const
     */
    rebootlessWithoutDynamicDetection: "rebootless_without_dynamic_detection",

    /**
     * value: "extended_exclusions_partially_accepted"
     * @const
     */
    extendedExclusionsPartiallyAccepted: "extended_exclusions_partially_accepted",

    /**
     * value: "reboot_required"
     * @const
     */
    rebootRequired: "reboot_required",

    /**
     * value: "pending_deprecation"
     * @const
     */
    pendingDeprecation: "pending_deprecation",

    /**
     * value: "ne_not_running"
     * @const
     */
    neNotRunning: "ne_not_running",

    /**
     * value: "ne_cf_not_active"
     * @const
     */
    neCfNotActive: "ne_cf_not_active",

    /**
     * value: "reboot_category"
     * @const
     */
    rebootCategory: "reboot_category",

    /**
     * value: "missing_permissions_category"
     * @const
     */
    missingPermissionsCategory: "missing_permissions_category",

    /**
     * value: "agent_suppressed_category"
     * @const
     */
    agentSuppressedCategory: "agent_suppressed_category",

    /**
     * value: "incompatible_os_category"
     * @const
     */
    incompatibleOsCategory: "incompatible_os_category",

    /**
     * value: "unprotected_category"
     * @const
     */
    unprotectedCategory: "unprotected_category",

    /**
     * value: "partial_functionality"
     * @const
     */
    partialFunctionality: "partial_functionality"
  };


  /**
   * Allowed values for the <code>rangerStatuses</code> property.
   * @enum {String}
   * @readonly
   */
  exports.RangerStatusesEnum = {
    /**
     * value: "NotApplicable"
     * @const
     */
    notApplicable: "NotApplicable",

    /**
     * value: "Enabled"
     * @const
     */
    enabled: "Enabled",

    /**
     * value: "Disabled"
     * @const
     */
    disabled: "Disabled"
  };


  /**
   * Allowed values for the <code>consoleMigrationStatusesNin</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ConsoleMigrationStatusesNinEnum = {
    /**
     * value: "N/A"
     * @const
     */
    NA: "N/A",

    /**
     * value: "Pending"
     * @const
     */
    pending: "Pending",

    /**
     * value: "Migrated"
     * @const
     */
    migrated: "Migrated",

    /**
     * value: "Failed"
     * @const
     */
    failed: "Failed"
  };


  /**
   * Allowed values for the <code>rangerStatus</code> property.
   * @enum {String}
   * @readonly
   */
  exports.RangerStatusEnum = {
    /**
     * value: "NotApplicable"
     * @const
     */
    notApplicable: "NotApplicable",

    /**
     * value: "Enabled"
     * @const
     */
    enabled: "Enabled",

    /**
     * value: "Disabled"
     * @const
     */
    disabled: "Disabled"
  };


  /**
   * Allowed values for the <code>scanStatuses</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ScanStatusesEnum = {
    /**
     * value: "none"
     * @const
     */
    none: "none",

    /**
     * value: "started"
     * @const
     */
    started: "started",

    /**
     * value: "aborted"
     * @const
     */
    aborted: "aborted",

    /**
     * value: "finished"
     * @const
     */
    finished: "finished"
  };


  /**
   * Allowed values for the <code>osTypes</code> property.
   * @enum {String}
   * @readonly
   */
  exports.OsTypesEnum = {
    /**
     * value: "windows"
     * @const
     */
    windows: "windows",

    /**
     * value: "macos"
     * @const
     */
    macos: "macos",

    /**
     * value: "linux"
     * @const
     */
    linux: "linux",

    /**
     * value: "windows_legacy"
     * @const
     */
    windowsLegacy: "windows_legacy"
  };


  /**
   * Allowed values for the <code>appsVulnerabilityStatuses</code> property.
   * @enum {String}
   * @readonly
   */
  exports.AppsVulnerabilityStatusesEnum = {
    /**
     * value: "patch_required"
     * @const
     */
    patchRequired: "patch_required",

    /**
     * value: "up_to_date"
     * @const
     */
    upToDate: "up_to_date",

    /**
     * value: "not_applicable"
     * @const
     */
    notApplicable: "not_applicable"
  };


  /**
   * Allowed values for the <code>scanStatus</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ScanStatusEnum = {
    /**
     * value: "none"
     * @const
     */
    none: "none",

    /**
     * value: "started"
     * @const
     */
    started: "started",

    /**
     * value: "aborted"
     * @const
     */
    aborted: "aborted",

    /**
     * value: "finished"
     * @const
     */
    finished: "finished"
  };


  /**
   * Allowed values for the <code>userActionsNeeded</code> property.
   * @enum {String}
   * @readonly
   */
  exports.UserActionsNeededEnum = {
    /**
     * value: "none"
     * @const
     */
    none: "none",

    /**
     * value: "user_action_needed"
     * @const
     */
    userActionNeeded: "user_action_needed",

    /**
     * value: "reboot_needed"
     * @const
     */
    rebootNeeded: "reboot_needed",

    /**
     * value: "upgrade_needed"
     * @const
     */
    upgradeNeeded: "upgrade_needed",

    /**
     * value: "incompatible_os"
     * @const
     */
    incompatibleOs: "incompatible_os",

    /**
     * value: "unprotected"
     * @const
     */
    unprotected: "unprotected",

    /**
     * value: "rebootless_without_dynamic_detection"
     * @const
     */
    rebootlessWithoutDynamicDetection: "rebootless_without_dynamic_detection",

    /**
     * value: "extended_exclusions_partially_accepted"
     * @const
     */
    extendedExclusionsPartiallyAccepted: "extended_exclusions_partially_accepted",

    /**
     * value: "reboot_required"
     * @const
     */
    rebootRequired: "reboot_required",

    /**
     * value: "pending_deprecation"
     * @const
     */
    pendingDeprecation: "pending_deprecation",

    /**
     * value: "ne_not_running"
     * @const
     */
    neNotRunning: "ne_not_running",

    /**
     * value: "ne_cf_not_active"
     * @const
     */
    neCfNotActive: "ne_cf_not_active",

    /**
     * value: "reboot_category"
     * @const
     */
    rebootCategory: "reboot_category",

    /**
     * value: "missing_permissions_category"
     * @const
     */
    missingPermissionsCategory: "missing_permissions_category",

    /**
     * value: "agent_suppressed_category"
     * @const
     */
    agentSuppressedCategory: "agent_suppressed_category",

    /**
     * value: "incompatible_os_category"
     * @const
     */
    incompatibleOsCategory: "incompatible_os_category",

    /**
     * value: "unprotected_category"
     * @const
     */
    unprotectedCategory: "unprotected_category",

    /**
     * value: "partial_functionality"
     * @const
     */
    partialFunctionality: "partial_functionality"
  };


  /**
   * Allowed values for the <code>osArch</code> property.
   * @enum {String}
   * @readonly
   */
  exports.OsArchEnum = {
    /**
     * value: "32 bit"
     * @const
     */
    _32Bit: "32 bit",

    /**
     * value: "64 bit"
     * @const
     */
    _64Bit: "64 bit",

    /**
     * value: "ARM64"
     * @const
     */
    aRM64: "ARM64"
  };


  /**
   * Allowed values for the <code>threatMitigationStatus</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ThreatMitigationStatusEnum = {
    /**
     * value: "mitigated"
     * @const
     */
    mitigated: "mitigated",

    /**
     * value: "blocked"
     * @const
     */
    blocked: "blocked",

    /**
     * value: "active"
     * @const
     */
    active: "active",

    /**
     * value: "suspicious"
     * @const
     */
    suspicious: "suspicious",

    /**
     * value: "pending"
     * @const
     */
    pending: "pending",

    /**
     * value: "suspicious_resolved"
     * @const
     */
    suspiciousResolved: "suspicious_resolved"
  };


  /**
   * Allowed values for the <code>networkStatuses</code> property.
   * @enum {String}
   * @readonly
   */
  exports.NetworkStatusesEnum = {
    /**
     * value: "connected"
     * @const
     */
    connected: "connected",

    /**
     * value: "disconnected"
     * @const
     */
    disconnected: "disconnected",

    /**
     * value: "connecting"
     * @const
     */
    connecting: "connecting",

    /**
     * value: "disconnecting"
     * @const
     */
    disconnecting: "disconnecting"
  };


  /**
   * Allowed values for the <code>installerTypes</code> property.
   * @enum {String}
   * @readonly
   */
  exports.InstallerTypesEnum = {
    /**
     * value: ".msi"
     * @const
     */
    msi: ".msi",

    /**
     * value: ".exe"
     * @const
     */
    exe: ".exe",

    /**
     * value: ".deb"
     * @const
     */
    deb: ".deb",

    /**
     * value: ".rpm"
     * @const
     */
    rpm: ".rpm",

    /**
     * value: ".bsx"
     * @const
     */
    bsx: ".bsx",

    /**
     * value: ".pkg"
     * @const
     */
    pkg: ".pkg",

    /**
     * value: ".img"
     * @const
     */
    img: ".img",

    /**
     * value: "unknown"
     * @const
     */
    unknown: "unknown",

    /**
     * value: ".tar"
     * @const
     */
    tar: ".tar",

    /**
     * value: ".zip"
     * @const
     */
    zip: ".zip",

    /**
     * value: ".gz"
     * @const
     */
    gz: ".gz",

    /**
     * value: ".xz"
     * @const
     */
    xz: ".xz"
  };


  /**
   * Allowed values for the <code>missingPermissions</code> property.
   * @enum {String}
   * @readonly
   */
  exports.MissingPermissionsEnum = {
    /**
     * value: "user_action_needed_fda"
     * @const
     */
    fda: "user_action_needed_fda",

    /**
     * value: "user_action_needed_rs_fda"
     * @const
     */
    rsFda: "user_action_needed_rs_fda",

    /**
     * value: "user_action_needed_fda_helper"
     * @const
     */
    fdaHelper: "user_action_needed_fda_helper",

    /**
     * value: "user_action_needed_fda_sentineld"
     * @const
     */
    fdaSentineld: "user_action_needed_fda_sentineld",

    /**
     * value: "user_action_needed_bluetooth_per"
     * @const
     */
    bluetoothPer: "user_action_needed_bluetooth_per",

    /**
     * value: "user_action_needed_network"
     * @const
     */
    network: "user_action_needed_network",

    /**
     * value: "user_action_needed_notifications"
     * @const
     */
    notifications: "user_action_needed_notifications"
  };


  /**
   * Allowed values for the <code>installerTypesNin</code> property.
   * @enum {String}
   * @readonly
   */
  exports.InstallerTypesNinEnum = {
    /**
     * value: ".msi"
     * @const
     */
    msi: ".msi",

    /**
     * value: ".exe"
     * @const
     */
    exe: ".exe",

    /**
     * value: ".deb"
     * @const
     */
    deb: ".deb",

    /**
     * value: ".rpm"
     * @const
     */
    rpm: ".rpm",

    /**
     * value: ".bsx"
     * @const
     */
    bsx: ".bsx",

    /**
     * value: ".pkg"
     * @const
     */
    pkg: ".pkg",

    /**
     * value: ".img"
     * @const
     */
    img: ".img",

    /**
     * value: "unknown"
     * @const
     */
    unknown: "unknown",

    /**
     * value: ".tar"
     * @const
     */
    tar: ".tar",

    /**
     * value: ".zip"
     * @const
     */
    zip: ".zip",

    /**
     * value: ".gz"
     * @const
     */
    gz: ".gz",

    /**
     * value: ".xz"
     * @const
     */
    xz: ".xz"
  };


  /**
   * Allowed values for the <code>machineTypesNin</code> property.
   * @enum {String}
   * @readonly
   */
  exports.MachineTypesNinEnum = {
    /**
     * value: "unknown"
     * @const
     */
    unknown: "unknown",

    /**
     * value: "desktop"
     * @const
     */
    desktop: "desktop",

    /**
     * value: "laptop"
     * @const
     */
    laptop: "laptop",

    /**
     * value: "server"
     * @const
     */
    server: "server",

    /**
     * value: "kubernetes node"
     * @const
     */
    kubernetesNode: "kubernetes node",

    /**
     * value: "storage"
     * @const
     */
    storage: "storage",

    /**
     * value: "kubernetes pod"
     * @const
     */
    kubernetesPod: "kubernetes pod",

    /**
     * value: "ecs task"
     * @const
     */
    ecsTask: "ecs task"
  };


  /**
   * Allowed values for the <code>rangerStatusesNin</code> property.
   * @enum {String}
   * @readonly
   */
  exports.RangerStatusesNinEnum = {
    /**
     * value: "NotApplicable"
     * @const
     */
    notApplicable: "NotApplicable",

    /**
     * value: "Enabled"
     * @const
     */
    enabled: "Enabled",

    /**
     * value: "Disabled"
     * @const
     */
    disabled: "Disabled"
  };


  /**
   * Allowed values for the <code>rsoLevel</code> property.
   * @enum {String}
   * @readonly
   */
  exports.RsoLevelEnum = {
    /**
     * value: "none"
     * @const
     */
    none: "none",

    /**
     * value: "pro"
     * @const
     */
    pro: "pro",

    /**
     * value: "ars"
     * @const
     */
    ars: "ars"
  };


  /**
   * Allowed values for the <code>consoleMigrationStatuses</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ConsoleMigrationStatusesEnum = {
    /**
     * value: "N/A"
     * @const
     */
    NA: "N/A",

    /**
     * value: "Pending"
     * @const
     */
    pending: "Pending",

    /**
     * value: "Migrated"
     * @const
     */
    migrated: "Migrated",

    /**
     * value: "Failed"
     * @const
     */
    failed: "Failed"
  };


  /**
   * Allowed values for the <code>networkStatusesNin</code> property.
   * @enum {String}
   * @readonly
   */
  exports.NetworkStatusesNinEnum = {
    /**
     * value: "connected"
     * @const
     */
    connected: "connected",

    /**
     * value: "disconnected"
     * @const
     */
    disconnected: "disconnected",

    /**
     * value: "connecting"
     * @const
     */
    connecting: "connecting",

    /**
     * value: "disconnecting"
     * @const
     */
    disconnecting: "disconnecting"
  };

  return exports;

}));
