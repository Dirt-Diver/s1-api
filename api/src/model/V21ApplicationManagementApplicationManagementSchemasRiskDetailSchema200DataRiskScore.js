/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/V21ApplicationManagementApplicationManagementSchemasRiskDetailSchema200DataRiskScoreAttackVectors'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./V21ApplicationManagementApplicationManagementSchemasRiskDetailSchema200DataRiskScoreAttackVectors'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.V21ApplicationManagementApplicationManagementSchemasRiskDetailSchema200DataRiskScore = factory(root.S1MgmtApi.ApiClient, root.S1MgmtApi.V21ApplicationManagementApplicationManagementSchemasRiskDetailSchema200DataRiskScoreAttackVectors);
  }
}(this, function(ApiClient, V21ApplicationManagementApplicationManagementSchemasRiskDetailSchema200DataRiskScoreAttackVectors) {
  'use strict';

  /**
   * The V21ApplicationManagementApplicationManagementSchemasRiskDetailSchema200DataRiskScore model module.
   * @module model/V21ApplicationManagementApplicationManagementSchemasRiskDetailSchema200DataRiskScore
   * @version 2.1
   */

  /**
   * Constructs a new <code>V21ApplicationManagementApplicationManagementSchemasRiskDetailSchema200DataRiskScore</code>.
   * Risk score
   * @alias module:model/V21ApplicationManagementApplicationManagementSchemasRiskDetailSchema200DataRiskScore
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>V21ApplicationManagementApplicationManagementSchemasRiskDetailSchema200DataRiskScore</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/V21ApplicationManagementApplicationManagementSchemasRiskDetailSchema200DataRiskScore} obj Optional instance to populate.
   * @return {module:model/V21ApplicationManagementApplicationManagementSchemasRiskDetailSchema200DataRiskScore} The populated <code>V21ApplicationManagementApplicationManagementSchemasRiskDetailSchema200DataRiskScore</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('nvdBaseScore'))
        obj.nvdBaseScore = ApiClient.convertToType(data['nvdBaseScore'], 'String');
      if (data.hasOwnProperty('isExploitedInTheWild'))
        obj.isExploitedInTheWild = ApiClient.convertToType(data['isExploitedInTheWild'], 'Boolean');
      if (data.hasOwnProperty('baseScore'))
        obj.baseScore = ApiClient.convertToType(data['baseScore'], 'String');
      if (data.hasOwnProperty('riskScore'))
        obj.riskScore = ApiClient.convertToType(data['riskScore'], 'String');
      if (data.hasOwnProperty('remediationLevel'))
        obj.remediationLevel = ApiClient.convertToType(data['remediationLevel'], 'String');
      if (data.hasOwnProperty('temporalScore'))
        obj.temporalScore = ApiClient.convertToType(data['temporalScore'], 'String');
      if (data.hasOwnProperty('order'))
        obj.order = ApiClient.convertToType(data['order'], 'Number');
      if (data.hasOwnProperty('exploitCodeMaturity'))
        obj.exploitCodeMaturity = ApiClient.convertToType(data['exploitCodeMaturity'], 'String');
      if (data.hasOwnProperty('severity'))
        obj.severity = ApiClient.convertToType(data['severity'], 'String');
      if (data.hasOwnProperty('reportConfidence'))
        obj.reportConfidence = ApiClient.convertToType(data['reportConfidence'], 'String');
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
      if (data.hasOwnProperty('attackVectors'))
        obj.attackVectors = V21ApplicationManagementApplicationManagementSchemasRiskDetailSchema200DataRiskScoreAttackVectors.constructFromObject(data['attackVectors']);
    }
    return obj;
  }

  /**
   * Nvd base score
   * @member {String} nvdBaseScore
   */
  exports.prototype.nvdBaseScore = undefined;

  /**
   * Exploited in the wild
   * @member {Boolean} isExploitedInTheWild
   */
  exports.prototype.isExploitedInTheWild = undefined;

  /**
   * Base score
   * @member {String} baseScore
   */
  exports.prototype.baseScore = undefined;

  /**
   * Risk score
   * @member {String} riskScore
   */
  exports.prototype.riskScore = undefined;

  /**
   * Remediation level
   * @member {module:model/V21ApplicationManagementApplicationManagementSchemasRiskDetailSchema200DataRiskScore.RemediationLevelEnum} remediationLevel
   */
  exports.prototype.remediationLevel = undefined;

  /**
   * Temporal score
   * @member {String} temporalScore
   */
  exports.prototype.temporalScore = undefined;

  /**
   * Order
   * @member {Number} order
   */
  exports.prototype.order = undefined;

  /**
   * Exploit code maturity
   * @member {module:model/V21ApplicationManagementApplicationManagementSchemasRiskDetailSchema200DataRiskScore.ExploitCodeMaturityEnum} exploitCodeMaturity
   */
  exports.prototype.exploitCodeMaturity = undefined;

  /**
   * Severity
   * @member {String} severity
   */
  exports.prototype.severity = undefined;

  /**
   * Report confidence
   * @member {module:model/V21ApplicationManagementApplicationManagementSchemasRiskDetailSchema200DataRiskScore.ReportConfidenceEnum} reportConfidence
   */
  exports.prototype.reportConfidence = undefined;

  /**
   * Type
   * @member {String} type
   */
  exports.prototype.type = undefined;

  /**
   * @member {module:model/V21ApplicationManagementApplicationManagementSchemasRiskDetailSchema200DataRiskScoreAttackVectors} attackVectors
   */
  exports.prototype.attackVectors = undefined;



  /**
   * Allowed values for the <code>remediationLevel</code> property.
   * @enum {String}
   * @readonly
   */
  exports.RemediationLevelEnum = {
    /**
     * value: "Not Defined"
     * @const
     */
    notDefined: "Not Defined",

    /**
     * value: "Official Fix"
     * @const
     */
    officialFix: "Official Fix",

    /**
     * value: "Temporary Fix"
     * @const
     */
    temporaryFix: "Temporary Fix",

    /**
     * value: "Workaround"
     * @const
     */
    workaround: "Workaround",

    /**
     * value: "Unavailable"
     * @const
     */
    unavailable: "Unavailable"
  };


  /**
   * Allowed values for the <code>exploitCodeMaturity</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ExploitCodeMaturityEnum = {
    /**
     * value: "Not Defined"
     * @const
     */
    notDefined: "Not Defined",

    /**
     * value: "Unproven"
     * @const
     */
    unproven: "Unproven",

    /**
     * value: "Proof of Concept"
     * @const
     */
    proofOfConcept: "Proof of Concept",

    /**
     * value: "Functional"
     * @const
     */
    functional: "Functional",

    /**
     * value: "High"
     * @const
     */
    high: "High"
  };


  /**
   * Allowed values for the <code>reportConfidence</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ReportConfidenceEnum = {
    /**
     * value: "Not Defined"
     * @const
     */
    notDefined: "Not Defined",

    /**
     * value: "Unknown"
     * @const
     */
    unknown: "Unknown",

    /**
     * value: "Reasonable"
     * @const
     */
    reasonable: "Reasonable",

    /**
     * value: "Confirmed"
     * @const
     */
    confirmed: "Confirmed"
  };

  return exports;

}));
