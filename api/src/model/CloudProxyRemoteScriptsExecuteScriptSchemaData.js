/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AgentsSchemasStartRemoteShellSchemaDataPasswordFromScope'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AgentsSchemasStartRemoteShellSchemaDataPasswordFromScope'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.CloudProxyRemoteScriptsExecuteScriptSchemaData = factory(root.S1MgmtApi.ApiClient, root.S1MgmtApi.AgentsSchemasStartRemoteShellSchemaDataPasswordFromScope);
  }
}(this, function(ApiClient, AgentsSchemasStartRemoteShellSchemaDataPasswordFromScope) {
  'use strict';

  /**
   * The CloudProxyRemoteScriptsExecuteScriptSchemaData model module.
   * @module model/CloudProxyRemoteScriptsExecuteScriptSchemaData
   * @version 2.1
   */

  /**
   * Constructs a new <code>CloudProxyRemoteScriptsExecuteScriptSchemaData</code>.
   * Data
   * @alias module:model/CloudProxyRemoteScriptsExecuteScriptSchemaData
   * @class
   * @param outputDestination {module:model/CloudProxyRemoteScriptsExecuteScriptSchemaData.OutputDestinationEnum} Output destination
   * @param scriptId {String} Script id
   * @param taskDescription {String} Task description
   */
  var exports = function(outputDestination, scriptId, taskDescription) {
    this.outputDestination = outputDestination;
    this.scriptId = scriptId;
    this.taskDescription = taskDescription;
  };

  /**
   * Constructs a <code>CloudProxyRemoteScriptsExecuteScriptSchemaData</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CloudProxyRemoteScriptsExecuteScriptSchemaData} obj Optional instance to populate.
   * @return {module:model/CloudProxyRemoteScriptsExecuteScriptSchemaData} The populated <code>CloudProxyRemoteScriptsExecuteScriptSchemaData</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('outputDestination'))
        obj.outputDestination = ApiClient.convertToType(data['outputDestination'], 'String');
      if (data.hasOwnProperty('requiresApproval'))
        obj.requiresApproval = ApiClient.convertToType(data['requiresApproval'], 'Boolean');
      if (data.hasOwnProperty('outputFilePaths'))
        obj.outputFilePaths = ApiClient.convertToType(data['outputFilePaths'], ['String']);
      if (data.hasOwnProperty('inputParams'))
        obj.inputParams = ApiClient.convertToType(data['inputParams'], 'String');
      if (data.hasOwnProperty('destinationProfileId'))
        obj.destinationProfileId = ApiClient.convertToType(data['destinationProfileId'], 'String');
      if (data.hasOwnProperty('scriptId'))
        obj.scriptId = ApiClient.convertToType(data['scriptId'], 'String');
      if (data.hasOwnProperty('outputDirectory'))
        obj.outputDirectory = ApiClient.convertToType(data['outputDirectory'], 'String');
      if (data.hasOwnProperty('destinationProfileKeyword'))
        obj.destinationProfileKeyword = ApiClient.convertToType(data['destinationProfileKeyword'], 'String');
      if (data.hasOwnProperty('taskDescription'))
        obj.taskDescription = ApiClient.convertToType(data['taskDescription'], 'String');
      if (data.hasOwnProperty('scriptRuntimeTimeoutSeconds'))
        obj.scriptRuntimeTimeoutSeconds = ApiClient.convertToType(data['scriptRuntimeTimeoutSeconds'], 'Number');
      if (data.hasOwnProperty('singularityxdrKeyword'))
        obj.singularityxdrKeyword = ApiClient.convertToType(data['singularityxdrKeyword'], 'String');
      if (data.hasOwnProperty('apiKey'))
        obj.apiKey = ApiClient.convertToType(data['apiKey'], 'String');
      if (data.hasOwnProperty('singularityxdrUrl'))
        obj.singularityxdrUrl = ApiClient.convertToType(data['singularityxdrUrl'], 'String');
      if (data.hasOwnProperty('passwordFromScope'))
        obj.passwordFromScope = AgentsSchemasStartRemoteShellSchemaDataPasswordFromScope.constructFromObject(data['passwordFromScope']);
      if (data.hasOwnProperty('password'))
        obj.password = ApiClient.convertToType(data['password'], 'String');
    }
    return obj;
  }

  /**
   * Output destination
   * @member {module:model/CloudProxyRemoteScriptsExecuteScriptSchemaData.OutputDestinationEnum} outputDestination
   */
  exports.prototype.outputDestination = undefined;

  /**
   * If set to true, execution will require approval
   * @member {Boolean} requiresApproval
   */
  exports.prototype.requiresApproval = undefined;

  /**
   * Output file paths
   * @member {Array.<String>} outputFilePaths
   */
  exports.prototype.outputFilePaths = undefined;

  /**
   * Input params
   * @member {String} inputParams
   */
  exports.prototype.inputParams = undefined;

  /**
   * Id of destination profile to use
   * @member {String} destinationProfileId
   */
  exports.prototype.destinationProfileId = undefined;

  /**
   * Script id
   * @member {String} scriptId
   */
  exports.prototype.scriptId = undefined;

  /**
   * Output directory
   * @member {String} outputDirectory
   */
  exports.prototype.outputDirectory = undefined;

  /**
   * Destination profile keyword
   * @member {String} destinationProfileKeyword
   */
  exports.prototype.destinationProfileKeyword = undefined;

  /**
   * Task description
   * @member {String} taskDescription
   */
  exports.prototype.taskDescription = undefined;

  /**
   * Script runtime timout in seconds for current execution
   * @member {Number} scriptRuntimeTimeoutSeconds
   */
  exports.prototype.scriptRuntimeTimeoutSeconds = undefined;

  /**
   * Singularityxdr keyword
   * @member {String} singularityxdrKeyword
   */
  exports.prototype.singularityxdrKeyword = undefined;

  /**
   * Api key
   * @member {String} apiKey
   */
  exports.prototype.apiKey = undefined;

  /**
   * Singularityxdr url
   * @member {String} singularityxdrUrl
   */
  exports.prototype.singularityxdrUrl = undefined;

  /**
   * @member {module:model/AgentsSchemasStartRemoteShellSchemaDataPasswordFromScope} passwordFromScope
   */
  exports.prototype.passwordFromScope = undefined;

  /**
   * Password
   * @member {String} password
   */
  exports.prototype.password = undefined;



  /**
   * Allowed values for the <code>outputDestination</code> property.
   * @enum {String}
   * @readonly
   */
  exports.OutputDestinationEnum = {
    /**
     * value: "SentinelCloud"
     * @const
     */
    sentinelCloud: "SentinelCloud",

    /**
     * value: "Local"
     * @const
     */
    local: "Local",

    /**
     * value: "None"
     * @const
     */
    none: "None",

    /**
     * value: "SingularityXDR"
     * @const
     */
    singularityXDR: "SingularityXDR"
  };

  return exports;

}));
