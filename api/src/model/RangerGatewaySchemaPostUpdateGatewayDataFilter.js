/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.RangerGatewaySchemaPostUpdateGatewayDataFilter = factory(root.S1MgmtApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The RangerGatewaySchemaPostUpdateGatewayDataFilter model module.
   * @module model/RangerGatewaySchemaPostUpdateGatewayDataFilter
   * @version 2.1
   */

  /**
   * Constructs a new <code>RangerGatewaySchemaPostUpdateGatewayDataFilter</code>.
   * Filter
   * @alias module:model/RangerGatewaySchemaPostUpdateGatewayDataFilter
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>RangerGatewaySchemaPostUpdateGatewayDataFilter</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/RangerGatewaySchemaPostUpdateGatewayDataFilter} obj Optional instance to populate.
   * @return {module:model/RangerGatewaySchemaPostUpdateGatewayDataFilter} The populated <code>RangerGatewaySchemaPostUpdateGatewayDataFilter</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('numberOfRangers__lte'))
        obj.numberOfRangersLte = ApiClient.convertToType(data['numberOfRangers__lte'], 'Number');
      if (data.hasOwnProperty('numberOfAgents__gte'))
        obj.numberOfAgentsGte = ApiClient.convertToType(data['numberOfAgents__gte'], 'Number');
      if (data.hasOwnProperty('createdAt__gt'))
        obj.createdAtGt = ApiClient.convertToType(data['createdAt__gt'], 'Date');
      if (data.hasOwnProperty('snmpScan'))
        obj.snmpScan = ApiClient.convertToType(data['snmpScan'], 'Boolean');
      if (data.hasOwnProperty('numberOfRangers__between'))
        obj.numberOfRangersBetween = ApiClient.convertToType(data['numberOfRangers__between'], 'String');
      if (data.hasOwnProperty('icmpScan'))
        obj.icmpScan = ApiClient.convertToType(data['icmpScan'], 'Boolean');
      if (data.hasOwnProperty('externalIp'))
        obj.externalIp = ApiClient.convertToType(data['externalIp'], 'String');
      if (data.hasOwnProperty('scanOnlyLocalSubnets'))
        obj.scanOnlyLocalSubnets = ApiClient.convertToType(data['scanOnlyLocalSubnets'], 'Boolean');
      if (data.hasOwnProperty('connectedRangers__gt'))
        obj.connectedRangersGt = ApiClient.convertToType(data['connectedRangers__gt'], 'Number');
      if (data.hasOwnProperty('udpPorts__contains'))
        obj.udpPortsContains = ApiClient.convertToType(data['udpPorts__contains'], ['Number']);
      if (data.hasOwnProperty('connectedRangers__between'))
        obj.connectedRangersBetween = ApiClient.convertToType(data['connectedRangers__between'], 'String');
      if (data.hasOwnProperty('updatedAt__lt'))
        obj.updatedAtLt = ApiClient.convertToType(data['updatedAt__lt'], 'Date');
      if (data.hasOwnProperty('archived'))
        obj.archived = ApiClient.convertToType(data['archived'], 'Boolean');
      if (data.hasOwnProperty('ids'))
        obj.ids = ApiClient.convertToType(data['ids'], ['String']);
      if (data.hasOwnProperty('query'))
        obj.query = ApiClient.convertToType(data['query'], 'String');
      if (data.hasOwnProperty('agentPercentage__lt'))
        obj.agentPercentageLt = ApiClient.convertToType(data['agentPercentage__lt'], 'Number');
      if (data.hasOwnProperty('numberOfRangers__gt'))
        obj.numberOfRangersGt = ApiClient.convertToType(data['numberOfRangers__gt'], 'Number');
      if (data.hasOwnProperty('totalAgents__lte'))
        obj.totalAgentsLte = ApiClient.convertToType(data['totalAgents__lte'], 'Number');
      if (data.hasOwnProperty('connectedRangers__gte'))
        obj.connectedRangersGte = ApiClient.convertToType(data['connectedRangers__gte'], 'Number');
      if (data.hasOwnProperty('createdAt__lt'))
        obj.createdAtLt = ApiClient.convertToType(data['createdAt__lt'], 'Date');
      if (data.hasOwnProperty('updatedAt__gte'))
        obj.updatedAtGte = ApiClient.convertToType(data['updatedAt__gte'], 'Date');
      if (data.hasOwnProperty('smbScan'))
        obj.smbScan = ApiClient.convertToType(data['smbScan'], 'Boolean');
      if (data.hasOwnProperty('agentPercentage__between'))
        obj.agentPercentageBetween = ApiClient.convertToType(data['agentPercentage__between'], 'String');
      if (data.hasOwnProperty('networkName__contains'))
        obj.networkNameContains = ApiClient.convertToType(data['networkName__contains'], ['String']);
      if (data.hasOwnProperty('externalIp__contains'))
        obj.externalIpContains = ApiClient.convertToType(data['externalIp__contains'], ['String']);
      if (data.hasOwnProperty('agentPercentage__gt'))
        obj.agentPercentageGt = ApiClient.convertToType(data['agentPercentage__gt'], 'Number');
      if (data.hasOwnProperty('updatedAt__gt'))
        obj.updatedAtGt = ApiClient.convertToType(data['updatedAt__gt'], 'Date');
      if (data.hasOwnProperty('manufacturer__contains'))
        obj.manufacturerContains = ApiClient.convertToType(data['manufacturer__contains'], ['String']);
      if (data.hasOwnProperty('connectedRangers__lte'))
        obj.connectedRangersLte = ApiClient.convertToType(data['connectedRangers__lte'], 'Number');
      if (data.hasOwnProperty('numberOfRangers__lt'))
        obj.numberOfRangersLt = ApiClient.convertToType(data['numberOfRangers__lt'], 'Number');
      if (data.hasOwnProperty('createdAt__lte'))
        obj.createdAtLte = ApiClient.convertToType(data['createdAt__lte'], 'Date');
      if (data.hasOwnProperty('rdnsScan'))
        obj.rdnsScan = ApiClient.convertToType(data['rdnsScan'], 'Boolean');
      if (data.hasOwnProperty('totalAgents__gte'))
        obj.totalAgentsGte = ApiClient.convertToType(data['totalAgents__gte'], 'Number');
      if (data.hasOwnProperty('agentPercentage__lte'))
        obj.agentPercentageLte = ApiClient.convertToType(data['agentPercentage__lte'], 'Number');
      if (data.hasOwnProperty('allowScan'))
        obj.allowScan = ApiClient.convertToType(data['allowScan'], 'String');
      if (data.hasOwnProperty('numberOfAgents__lt'))
        obj.numberOfAgentsLt = ApiClient.convertToType(data['numberOfAgents__lt'], 'Number');
      if (data.hasOwnProperty('new'))
        obj._new = ApiClient.convertToType(data['new'], 'Boolean');
      if (data.hasOwnProperty('totalAgents__between'))
        obj.totalAgentsBetween = ApiClient.convertToType(data['totalAgents__between'], 'String');
      if (data.hasOwnProperty('tcpPorts__contains'))
        obj.tcpPortsContains = ApiClient.convertToType(data['tcpPorts__contains'], ['Number']);
      if (data.hasOwnProperty('totalAgents__lt'))
        obj.totalAgentsLt = ApiClient.convertToType(data['totalAgents__lt'], 'Number');
      if (data.hasOwnProperty('numberOfAgents__lte'))
        obj.numberOfAgentsLte = ApiClient.convertToType(data['numberOfAgents__lte'], 'Number');
      if (data.hasOwnProperty('updatedAt__lte'))
        obj.updatedAtLte = ApiClient.convertToType(data['updatedAt__lte'], 'Date');
      if (data.hasOwnProperty('createdAt__between'))
        obj.createdAtBetween = ApiClient.convertToType(data['createdAt__between'], 'String');
      if (data.hasOwnProperty('ip__contains'))
        obj.ipContains = ApiClient.convertToType(data['ip__contains'], ['String']);
      if (data.hasOwnProperty('numberOfAgents__between'))
        obj.numberOfAgentsBetween = ApiClient.convertToType(data['numberOfAgents__between'], 'String');
      if (data.hasOwnProperty('ip'))
        obj.ip = ApiClient.convertToType(data['ip'], 'String');
      if (data.hasOwnProperty('manufacturer'))
        obj.manufacturer = ApiClient.convertToType(data['manufacturer'], 'String');
      if (data.hasOwnProperty('updatedAt__between'))
        obj.updatedAtBetween = ApiClient.convertToType(data['updatedAt__between'], 'String');
      if (data.hasOwnProperty('createdAt__gte'))
        obj.createdAtGte = ApiClient.convertToType(data['createdAt__gte'], 'Date');
      if (data.hasOwnProperty('siteIds'))
        obj.siteIds = ApiClient.convertToType(data['siteIds'], ['String']);
      if (data.hasOwnProperty('accountIds'))
        obj.accountIds = ApiClient.convertToType(data['accountIds'], ['String']);
      if (data.hasOwnProperty('numberOfAgents__gt'))
        obj.numberOfAgentsGt = ApiClient.convertToType(data['numberOfAgents__gt'], 'Number');
      if (data.hasOwnProperty('numberOfRangers__gte'))
        obj.numberOfRangersGte = ApiClient.convertToType(data['numberOfRangers__gte'], 'Number');
      if (data.hasOwnProperty('macAddress__contains'))
        obj.macAddressContains = ApiClient.convertToType(data['macAddress__contains'], ['String']);
      if (data.hasOwnProperty('macAddress'))
        obj.macAddress = ApiClient.convertToType(data['macAddress'], 'String');
      if (data.hasOwnProperty('agentPercentage__gte'))
        obj.agentPercentageGte = ApiClient.convertToType(data['agentPercentage__gte'], 'Number');
      if (data.hasOwnProperty('mdnsScan'))
        obj.mdnsScan = ApiClient.convertToType(data['mdnsScan'], 'Boolean');
      if (data.hasOwnProperty('connectedRangers__lt'))
        obj.connectedRangersLt = ApiClient.convertToType(data['connectedRangers__lt'], 'Number');
      if (data.hasOwnProperty('totalAgents__gt'))
        obj.totalAgentsGt = ApiClient.convertToType(data['totalAgents__gt'], 'Number');
    }
    return obj;
  }

  /**
   * Ranger count (less than or equal)
   * @member {Number} numberOfRangersLte
   */
  exports.prototype.numberOfRangersLte = undefined;

  /**
   * Agent count (more than or equal)
   * @member {Number} numberOfAgentsGte
   */
  exports.prototype.numberOfAgentsGte = undefined;

  /**
   * Gateway created after this timestamp
   * @member {Date} createdAtGt
   */
  exports.prototype.createdAtGt = undefined;

  /**
   * SNMP scan enabled
   * @member {Boolean} snmpScan
   */
  exports.prototype.snmpScan = undefined;

  /**
   * The number of non decommissioned agents in this network
   * @member {String} numberOfRangersBetween
   */
  exports.prototype.numberOfRangersBetween = undefined;

  /**
   * ICMP scan enabled
   * @member {Boolean} icmpScan
   */
  exports.prototype.icmpScan = undefined;

  /**
   * Search external ip using a CIDR expression or exact IP
   * @member {String} externalIp
   */
  exports.prototype.externalIp = undefined;

  /**
   * Allow remote tasks form this network
   * @member {Boolean} scanOnlyLocalSubnets
   */
  exports.prototype.scanOnlyLocalSubnets = undefined;

  /**
   * Total agents (more than)
   * @member {Number} connectedRangersGt
   */
  exports.prototype.connectedRangersGt = undefined;

  /**
   * Free-text filter by udp port (supports multiple values)
   * @member {Array.<Number>} udpPortsContains
   */
  exports.prototype.udpPortsContains = undefined;

  /**
   * The total of non decommissioned agents in the account
   * @member {String} connectedRangersBetween
   */
  exports.prototype.connectedRangersBetween = undefined;

  /**
   * Gateway updated before this timestamp
   * @member {Date} updatedAtLt
   */
  exports.prototype.updatedAtLt = undefined;

  /**
   * Archived network
   * @member {Boolean} archived
   */
  exports.prototype.archived = undefined;

  /**
   * List of gateway ids
   * @member {Array.<String>} ids
   */
  exports.prototype.ids = undefined;

  /**
   * Free text query
   * @member {String} query
   */
  exports.prototype.query = undefined;

  /**
   * Agent percentage (less than)
   * @member {Number} agentPercentageLt
   */
  exports.prototype.agentPercentageLt = undefined;

  /**
   * Ranger count (more than)
   * @member {Number} numberOfRangersGt
   */
  exports.prototype.numberOfRangersGt = undefined;

  /**
   * Total agents (less than or equal)
   * @member {Number} totalAgentsLte
   */
  exports.prototype.totalAgentsLte = undefined;

  /**
   * Total agents (more than or equal)
   * @member {Number} connectedRangersGte
   */
  exports.prototype.connectedRangersGte = undefined;

  /**
   * Gateway created before this timestamp
   * @member {Date} createdAtLt
   */
  exports.prototype.createdAtLt = undefined;

  /**
   * Gateway updated after or at this timestamp
   * @member {Date} updatedAtGte
   */
  exports.prototype.updatedAtGte = undefined;

  /**
   * SMB scan enabled
   * @member {Boolean} smbScan
   */
  exports.prototype.smbScan = undefined;

  /**
   * Percentage of agents of the account in this network calculated as numberOfAgents/totalAgents * 100
   * @member {String} agentPercentageBetween
   */
  exports.prototype.agentPercentageBetween = undefined;

  /**
   * Free-text filter by network name (supports multiple values)
   * @member {Array.<String>} networkNameContains
   */
  exports.prototype.networkNameContains = undefined;

  /**
   * Free-text filter by visible IP (supports multiple values)
   * @member {Array.<String>} externalIpContains
   */
  exports.prototype.externalIpContains = undefined;

  /**
   * Agent percentage (more than)
   * @member {Number} agentPercentageGt
   */
  exports.prototype.agentPercentageGt = undefined;

  /**
   * Gateway updated after this timestamp
   * @member {Date} updatedAtGt
   */
  exports.prototype.updatedAtGt = undefined;

  /**
   * Free-text filter by manufacturer (supports multiple values)
   * @member {Array.<String>} manufacturerContains
   */
  exports.prototype.manufacturerContains = undefined;

  /**
   * Total agents (less than or equal)
   * @member {Number} connectedRangersLte
   */
  exports.prototype.connectedRangersLte = undefined;

  /**
   * Ranger count (less than)
   * @member {Number} numberOfRangersLt
   */
  exports.prototype.numberOfRangersLt = undefined;

  /**
   * Gateway created before or at this timestamp
   * @member {Date} createdAtLte
   */
  exports.prototype.createdAtLte = undefined;

  /**
   * RDNS scan enabled
   * @member {Boolean} rdnsScan
   */
  exports.prototype.rdnsScan = undefined;

  /**
   * Total agents (more than or equal)
   * @member {Number} totalAgentsGte
   */
  exports.prototype.totalAgentsGte = undefined;

  /**
   * Agent percentage (less than or equal)
   * @member {Number} agentPercentageLte
   */
  exports.prototype.agentPercentageLte = undefined;

  /**
   * Do we allow scanning in this network
   * @member {String} allowScan
   */
  exports.prototype.allowScan = undefined;

  /**
   * Agent count (less than)
   * @member {Number} numberOfAgentsLt
   */
  exports.prototype.numberOfAgentsLt = undefined;

  /**
   * True if this is network was first seen some days ago, 3 by default
   * @member {Boolean} _new
   */
  exports.prototype._new = undefined;

  /**
   * The total of non decommissioned agents in the account
   * @member {String} totalAgentsBetween
   */
  exports.prototype.totalAgentsBetween = undefined;

  /**
   * Free-text filter by tcp port (supports multiple values)
   * @member {Array.<Number>} tcpPortsContains
   */
  exports.prototype.tcpPortsContains = undefined;

  /**
   * Total agents (less than)
   * @member {Number} totalAgentsLt
   */
  exports.prototype.totalAgentsLt = undefined;

  /**
   * Agent count (less than or equal)
   * @member {Number} numberOfAgentsLte
   */
  exports.prototype.numberOfAgentsLte = undefined;

  /**
   * Gateway updated before or at this timestamp
   * @member {Date} updatedAtLte
   */
  exports.prototype.updatedAtLte = undefined;

  /**
   * Date range for creation time (format: <from_timestamp>-<to_timestamp>, inclusive)
   * @member {String} createdAtBetween
   */
  exports.prototype.createdAtBetween = undefined;

  /**
   * Free-text filter by IP Address (supports multiple values)
   * @member {Array.<String>} ipContains
   */
  exports.prototype.ipContains = undefined;

  /**
   * The number of non decommissioned agents in this network
   * @member {String} numberOfAgentsBetween
   */
  exports.prototype.numberOfAgentsBetween = undefined;

  /**
   * Search ip using a CIDR expression exact IP
   * @member {String} ip
   */
  exports.prototype.ip = undefined;

  /**
   * The gateway manufacturer obtained from the mac address
   * @member {String} manufacturer
   */
  exports.prototype.manufacturer = undefined;

  /**
   * Date range for update time (format: <from_timestamp>-<to_timestamp>, inclusive)
   * @member {String} updatedAtBetween
   */
  exports.prototype.updatedAtBetween = undefined;

  /**
   * Gateway created after or at this timestamp
   * @member {Date} createdAtGte
   */
  exports.prototype.createdAtGte = undefined;

  /**
   * List of Site IDs to filter by
   * @member {Array.<String>} siteIds
   */
  exports.prototype.siteIds = undefined;

  /**
   * List of Account IDs to filter by
   * @member {Array.<String>} accountIds
   */
  exports.prototype.accountIds = undefined;

  /**
   * Agent count (more than)
   * @member {Number} numberOfAgentsGt
   */
  exports.prototype.numberOfAgentsGt = undefined;

  /**
   * Ranger count (more than or equal)
   * @member {Number} numberOfRangersGte
   */
  exports.prototype.numberOfRangersGte = undefined;

  /**
   * Free-text filter by mac address (supports multiple values)
   * @member {Array.<String>} macAddressContains
   */
  exports.prototype.macAddressContains = undefined;

  /**
   * The gateway mac address
   * @member {String} macAddress
   */
  exports.prototype.macAddress = undefined;

  /**
   * Agent percentage (more than or equal)
   * @member {Number} agentPercentageGte
   */
  exports.prototype.agentPercentageGte = undefined;

  /**
   * MDNS scan enabled
   * @member {Boolean} mdnsScan
   */
  exports.prototype.mdnsScan = undefined;

  /**
   * Total agents (less than)
   * @member {Number} connectedRangersLt
   */
  exports.prototype.connectedRangersLt = undefined;

  /**
   * Total agents (more than)
   * @member {Number} totalAgentsGt
   */
  exports.prototype.totalAgentsGt = undefined;


  return exports;

}));
