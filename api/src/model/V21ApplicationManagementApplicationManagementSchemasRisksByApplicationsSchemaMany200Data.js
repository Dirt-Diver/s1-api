/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/V21ApplicationManagementApplicationManagementSchemasRisksByAggregatedApplicationsSchemaMany200Statuses'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./V21ApplicationManagementApplicationManagementSchemasRisksByAggregatedApplicationsSchemaMany200Statuses'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.V21ApplicationManagementApplicationManagementSchemasRisksByApplicationsSchemaMany200Data = factory(root.S1MgmtApi.ApiClient, root.S1MgmtApi.V21ApplicationManagementApplicationManagementSchemasRisksByAggregatedApplicationsSchemaMany200Statuses);
  }
}(this, function(ApiClient, V21ApplicationManagementApplicationManagementSchemasRisksByAggregatedApplicationsSchemaMany200Statuses) {
  'use strict';

  /**
   * The V21ApplicationManagementApplicationManagementSchemasRisksByApplicationsSchemaMany200Data model module.
   * @module model/V21ApplicationManagementApplicationManagementSchemasRisksByApplicationsSchemaMany200Data
   * @version 2.1
   */

  /**
   * Constructs a new <code>V21ApplicationManagementApplicationManagementSchemasRisksByApplicationsSchemaMany200Data</code>.
   * @alias module:model/V21ApplicationManagementApplicationManagementSchemasRisksByApplicationsSchemaMany200Data
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>V21ApplicationManagementApplicationManagementSchemasRisksByApplicationsSchemaMany200Data</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/V21ApplicationManagementApplicationManagementSchemasRisksByApplicationsSchemaMany200Data} obj Optional instance to populate.
   * @return {module:model/V21ApplicationManagementApplicationManagementSchemasRisksByApplicationsSchemaMany200Data} The populated <code>V21ApplicationManagementApplicationManagementSchemasRisksByApplicationsSchemaMany200Data</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('applicationId'))
        obj.applicationId = ApiClient.convertToType(data['applicationId'], 'String');
      if (data.hasOwnProperty('daysDetected'))
        obj.daysDetected = ApiClient.convertToType(data['daysDetected'], Object);
      if (data.hasOwnProperty('cveCount'))
        obj.cveCount = ApiClient.convertToType(data['cveCount'], 'Number');
      if (data.hasOwnProperty('endpointsWithoutTicket'))
        obj.endpointsWithoutTicket = ApiClient.convertToType(data['endpointsWithoutTicket'], 'Number');
      if (data.hasOwnProperty('detectionDate'))
        obj.detectionDate = ApiClient.convertToType(data['detectionDate'], 'Date');
      if (data.hasOwnProperty('statuses'))
        obj.statuses = ApiClient.convertToType(data['statuses'], [V21ApplicationManagementApplicationManagementSchemasRisksByAggregatedApplicationsSchemaMany200Statuses]);
      if (data.hasOwnProperty('estimate'))
        obj.estimate = ApiClient.convertToType(data['estimate'], 'Boolean');
      if (data.hasOwnProperty('highestSeverity'))
        obj.highestSeverity = ApiClient.convertToType(data['highestSeverity'], 'String');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('exploitedInTheWild'))
        obj.exploitedInTheWild = ApiClient.convertToType(data['exploitedInTheWild'], 'String');
      if (data.hasOwnProperty('applicationType'))
        obj.applicationType = ApiClient.convertToType(data['applicationType'], 'String');
      if (data.hasOwnProperty('highestRiskScore'))
        obj.highestRiskScore = ApiClient.convertToType(data['highestRiskScore'], 'String');
      if (data.hasOwnProperty('vendor'))
        obj.vendor = ApiClient.convertToType(data['vendor'], 'String');
      if (data.hasOwnProperty('remediationLevel'))
        obj.remediationLevel = ApiClient.convertToType(data['remediationLevel'], 'String');
      if (data.hasOwnProperty('exploitCodeMaturity'))
        obj.exploitCodeMaturity = ApiClient.convertToType(data['exploitCodeMaturity'], 'String');
      if (data.hasOwnProperty('highestNvdBaseScore'))
        obj.highestNvdBaseScore = ApiClient.convertToType(data['highestNvdBaseScore'], 'String');
      if (data.hasOwnProperty('endpointCount'))
        obj.endpointCount = ApiClient.convertToType(data['endpointCount'], 'Number');
    }
    return obj;
  }

  /**
   * Application id
   * @member {String} applicationId
   */
  exports.prototype.applicationId = undefined;

  /**
   * Days detected
   * @member {Object} daysDetected
   */
  exports.prototype.daysDetected = undefined;

  /**
   * Cve count
   * @member {Number} cveCount
   */
  exports.prototype.cveCount = undefined;

  /**
   * Number of endpoints that are in an integrated scope, but don't have a ticket created. Available with Ranger Insights.
   * @member {Number} endpointsWithoutTicket
   */
  exports.prototype.endpointsWithoutTicket = undefined;

  /**
   * Detection date
   * @member {Date} detectionDate
   */
  exports.prototype.detectionDate = undefined;

  /**
   * Statuses
   * @member {Array.<module:model/V21ApplicationManagementApplicationManagementSchemasRisksByAggregatedApplicationsSchemaMany200Statuses>} statuses
   */
  exports.prototype.statuses = undefined;

  /**
   * Estimate
   * @member {Boolean} estimate
   */
  exports.prototype.estimate = undefined;

  /**
   * Highest severity
   * @member {String} highestSeverity
   */
  exports.prototype.highestSeverity = undefined;

  /**
   * Name
   * @member {String} name
   */
  exports.prototype.name = undefined;

  /**
   * Available with Ranger Insights.
   * @member {module:model/V21ApplicationManagementApplicationManagementSchemasRisksByApplicationsSchemaMany200Data.ExploitedInTheWildEnum} exploitedInTheWild
   */
  exports.prototype.exploitedInTheWild = undefined;

  /**
   * Available with Ranger Insights.
   * @member {String} applicationType
   */
  exports.prototype.applicationType = undefined;

  /**
   * Available with Ranger Insights.
   * @member {String} highestRiskScore
   */
  exports.prototype.highestRiskScore = undefined;

  /**
   * Vendor
   * @member {String} vendor
   */
  exports.prototype.vendor = undefined;

  /**
   * Available with Ranger Insights.
   * @member {module:model/V21ApplicationManagementApplicationManagementSchemasRisksByApplicationsSchemaMany200Data.RemediationLevelEnum} remediationLevel
   */
  exports.prototype.remediationLevel = undefined;

  /**
   * Available with Ranger Insights.
   * @member {module:model/V21ApplicationManagementApplicationManagementSchemasRisksByApplicationsSchemaMany200Data.ExploitCodeMaturityEnum} exploitCodeMaturity
   */
  exports.prototype.exploitCodeMaturity = undefined;

  /**
   * Highest nvd base score
   * @member {String} highestNvdBaseScore
   */
  exports.prototype.highestNvdBaseScore = undefined;

  /**
   * Endpoint count
   * @member {Number} endpointCount
   */
  exports.prototype.endpointCount = undefined;



  /**
   * Allowed values for the <code>exploitedInTheWild</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ExploitedInTheWildEnum = {
    /**
     * value: "Not Defined"
     * @const
     */
    notDefined: "Not Defined",

    /**
     * value: "Unknown"
     * @const
     */
    unknown: "Unknown",

    /**
     * value: "Yes"
     * @const
     */
    yes: "Yes"
  };


  /**
   * Allowed values for the <code>remediationLevel</code> property.
   * @enum {String}
   * @readonly
   */
  exports.RemediationLevelEnum = {
    /**
     * value: "Official Fix"
     * @const
     */
    officialFix: "Official Fix",

    /**
     * value: "Temporary Fix"
     * @const
     */
    temporaryFix: "Temporary Fix",

    /**
     * value: "Unavailable"
     * @const
     */
    unavailable: "Unavailable",

    /**
     * value: "Not Defined"
     * @const
     */
    notDefined: "Not Defined",

    /**
     * value: "Workaround"
     * @const
     */
    workaround: "Workaround"
  };


  /**
   * Allowed values for the <code>exploitCodeMaturity</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ExploitCodeMaturityEnum = {
    /**
     * value: "Not Defined"
     * @const
     */
    notDefined: "Not Defined",

    /**
     * value: "Functional"
     * @const
     */
    functional: "Functional",

    /**
     * value: "Proof of Concept"
     * @const
     */
    proofOfConcept: "Proof of Concept",

    /**
     * value: "Unproven"
     * @const
     */
    unproven: "Unproven",

    /**
     * value: "High"
     * @const
     */
    high: "High"
  };

  return exports;

}));
