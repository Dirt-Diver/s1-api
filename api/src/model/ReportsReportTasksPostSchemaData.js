/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.ReportsReportTasksPostSchemaData = factory(root.S1MgmtApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The ReportsReportTasksPostSchemaData model module.
   * @module model/ReportsReportTasksPostSchemaData
   * @version 2.1
   */

  /**
   * Constructs a new <code>ReportsReportTasksPostSchemaData</code>.
   * Data
   * @alias module:model/ReportsReportTasksPostSchemaData
   * @class
   * @param scheduleType {module:model/ReportsReportTasksPostSchemaData.ScheduleTypeEnum} Schedule type
   * @param name {String} Name of the report
   * @param insightTypes {Array.<Object>} List of reports.
   */
  var exports = function(scheduleType, name, insightTypes) {
    this.scheduleType = scheduleType;
    this.name = name;
    this.insightTypes = insightTypes;
  };

  /**
   * Constructs a <code>ReportsReportTasksPostSchemaData</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ReportsReportTasksPostSchemaData} obj Optional instance to populate.
   * @return {module:model/ReportsReportTasksPostSchemaData} The populated <code>ReportsReportTasksPostSchemaData</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('scheduleType'))
        obj.scheduleType = ApiClient.convertToType(data['scheduleType'], 'String');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('recipients'))
        obj.recipients = ApiClient.convertToType(data['recipients'], ['String']);
      if (data.hasOwnProperty('day'))
        obj.day = ApiClient.convertToType(data['day'], 'String');
      if (data.hasOwnProperty('insightTypes'))
        obj.insightTypes = ApiClient.convertToType(data['insightTypes'], [Object]);
      if (data.hasOwnProperty('frequency'))
        obj.frequency = ApiClient.convertToType(data['frequency'], 'String');
      if (data.hasOwnProperty('attachmentTypes'))
        obj.attachmentTypes = ApiClient.convertToType(data['attachmentTypes'], ['String']);
      if (data.hasOwnProperty('fromDate'))
        obj.fromDate = ApiClient.convertToType(data['fromDate'], 'Date');
      if (data.hasOwnProperty('toDate'))
        obj.toDate = ApiClient.convertToType(data['toDate'], 'Date');
      if (data.hasOwnProperty('isTrend'))
        obj.isTrend = ApiClient.convertToType(data['isTrend'], 'Boolean');
    }
    return obj;
  }

  /**
   * Schedule type
   * @member {module:model/ReportsReportTasksPostSchemaData.ScheduleTypeEnum} scheduleType
   */
  exports.prototype.scheduleType = undefined;

  /**
   * Name of the report
   * @member {String} name
   */
  exports.prototype.name = undefined;

  /**
   * List of recipients for the report
   * @member {Array.<String>} recipients
   */
  exports.prototype.recipients = undefined;

  /**
   * Day of the week for Weekly report.
   * @member {module:model/ReportsReportTasksPostSchemaData.DayEnum} day
   */
  exports.prototype.day = undefined;

  /**
   * List of reports.
   * @member {Array.<Object>} insightTypes
   */
  exports.prototype.insightTypes = undefined;

  /**
   * Report Period
   * @member {module:model/ReportsReportTasksPostSchemaData.FrequencyEnum} frequency
   */
  exports.prototype.frequency = undefined;

  /**
   * Type of attachments for the report. Must be supplied if recipients are added
   * @member {Array.<String>} attachmentTypes
   */
  exports.prototype.attachmentTypes = undefined;

  /**
   * From date
   * @member {Date} fromDate
   */
  exports.prototype.fromDate = undefined;

  /**
   * To date
   * @member {Date} toDate
   */
  exports.prototype.toDate = undefined;

  /**
   * If is trend is true then the period will be last month
   * @member {Boolean} isTrend
   */
  exports.prototype.isTrend = undefined;



  /**
   * Allowed values for the <code>scheduleType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ScheduleTypeEnum = {
    /**
     * value: "manually"
     * @const
     */
    manually: "manually",

    /**
     * value: "scheduled"
     * @const
     */
    scheduled: "scheduled"
  };


  /**
   * Allowed values for the <code>day</code> property.
   * @enum {String}
   * @readonly
   */
  exports.DayEnum = {
    /**
     * value: "sunday"
     * @const
     */
    sunday: "sunday",

    /**
     * value: "monday"
     * @const
     */
    monday: "monday",

    /**
     * value: "tuesday"
     * @const
     */
    tuesday: "tuesday",

    /**
     * value: "wednesday"
     * @const
     */
    wednesday: "wednesday",

    /**
     * value: "thursday"
     * @const
     */
    thursday: "thursday",

    /**
     * value: "friday"
     * @const
     */
    friday: "friday",

    /**
     * value: "saturday"
     * @const
     */
    saturday: "saturday"
  };


  /**
   * Allowed values for the <code>frequency</code> property.
   * @enum {String}
   * @readonly
   */
  exports.FrequencyEnum = {
    /**
     * value: "manually"
     * @const
     */
    manually: "manually",

    /**
     * value: "weekly"
     * @const
     */
    weekly: "weekly",

    /**
     * value: "monthly"
     * @const
     */
    monthly: "monthly"
  };

  return exports;

}));
