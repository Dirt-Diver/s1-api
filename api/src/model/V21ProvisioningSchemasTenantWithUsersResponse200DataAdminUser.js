/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/V21ProvisioningSchemasTenantWithUsersResponse200DataAdminUserRole'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./V21ProvisioningSchemasTenantWithUsersResponse200DataAdminUserRole'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.V21ProvisioningSchemasTenantWithUsersResponse200DataAdminUser = factory(root.S1MgmtApi.ApiClient, root.S1MgmtApi.V21ProvisioningSchemasTenantWithUsersResponse200DataAdminUserRole);
  }
}(this, function(ApiClient, V21ProvisioningSchemasTenantWithUsersResponse200DataAdminUserRole) {
  'use strict';

  /**
   * The V21ProvisioningSchemasTenantWithUsersResponse200DataAdminUser model module.
   * @module model/V21ProvisioningSchemasTenantWithUsersResponse200DataAdminUser
   * @version 2.1
   */

  /**
   * Constructs a new <code>V21ProvisioningSchemasTenantWithUsersResponse200DataAdminUser</code>.
   * Tenant admin user
   * @alias module:model/V21ProvisioningSchemasTenantWithUsersResponse200DataAdminUser
   * @class
   * @param role {module:model/V21ProvisioningSchemasTenantWithUsersResponse200DataAdminUserRole} 
   * @param firstName {String} User's first name
   * @param email {String} User's email address
   * @param created {String} User's creation date
   * @param id {String} User ID
   * @param lastName {String} User's last name
   */
  var exports = function(role, firstName, email, created, id, lastName) {
    this.role = role;
    this.firstName = firstName;
    this.email = email;
    this.created = created;
    this.id = id;
    this.lastName = lastName;
  };

  /**
   * Constructs a <code>V21ProvisioningSchemasTenantWithUsersResponse200DataAdminUser</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/V21ProvisioningSchemasTenantWithUsersResponse200DataAdminUser} obj Optional instance to populate.
   * @return {module:model/V21ProvisioningSchemasTenantWithUsersResponse200DataAdminUser} The populated <code>V21ProvisioningSchemasTenantWithUsersResponse200DataAdminUser</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('role'))
        obj.role = V21ProvisioningSchemasTenantWithUsersResponse200DataAdminUserRole.constructFromObject(data['role']);
      if (data.hasOwnProperty('firstName'))
        obj.firstName = ApiClient.convertToType(data['firstName'], 'String');
      if (data.hasOwnProperty('email'))
        obj.email = ApiClient.convertToType(data['email'], 'String');
      if (data.hasOwnProperty('notificationEmail'))
        obj.notificationEmail = ApiClient.convertToType(data['notificationEmail'], 'String');
      if (data.hasOwnProperty('created'))
        obj.created = ApiClient.convertToType(data['created'], 'String');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('lastName'))
        obj.lastName = ApiClient.convertToType(data['lastName'], 'String');
    }
    return obj;
  }

  /**
   * @member {module:model/V21ProvisioningSchemasTenantWithUsersResponse200DataAdminUserRole} role
   */
  exports.prototype.role = undefined;

  /**
   * User's first name
   * @member {String} firstName
   */
  exports.prototype.firstName = undefined;

  /**
   * User's email address
   * @member {String} email
   */
  exports.prototype.email = undefined;

  /**
   * Notification email for sending details
   * @member {String} notificationEmail
   */
  exports.prototype.notificationEmail = undefined;

  /**
   * User's creation date
   * @member {String} created
   */
  exports.prototype.created = undefined;

  /**
   * User ID
   * @member {String} id
   */
  exports.prototype.id = undefined;

  /**
   * User's last name
   * @member {String} lastName
   */
  exports.prototype.lastName = undefined;


  return exports;

}));
