/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.ApplicationsSchemasApplicationViewSchemaMany200Data = factory(root.S1MgmtApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The ApplicationsSchemasApplicationViewSchemaMany200Data model module.
   * @module model/ApplicationsSchemasApplicationViewSchemaMany200Data
   * @version 2.1
   */

  /**
   * Constructs a new <code>ApplicationsSchemasApplicationViewSchemaMany200Data</code>.
   * @alias module:model/ApplicationsSchemasApplicationViewSchemaMany200Data
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>ApplicationsSchemasApplicationViewSchemaMany200Data</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ApplicationsSchemasApplicationViewSchemaMany200Data} obj Optional instance to populate.
   * @return {module:model/ApplicationsSchemasApplicationViewSchemaMany200Data} The populated <code>ApplicationsSchemasApplicationViewSchemaMany200Data</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('agentInfected'))
        obj.agentInfected = ApiClient.convertToType(data['agentInfected'], 'Boolean');
      if (data.hasOwnProperty('agentUuid'))
        obj.agentUuid = ApiClient.convertToType(data['agentUuid'], 'String');
      if (data.hasOwnProperty('agentMachineType'))
        obj.agentMachineType = ApiClient.convertToType(data['agentMachineType'], 'String');
      if (data.hasOwnProperty('size'))
        obj.size = ApiClient.convertToType(data['size'], 'Number');
      if (data.hasOwnProperty('updatedAt'))
        obj.updatedAt = ApiClient.convertToType(data['updatedAt'], 'Date');
      if (data.hasOwnProperty('agentNetworkStatus'))
        obj.agentNetworkStatus = ApiClient.convertToType(data['agentNetworkStatus'], 'String');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('agentIsActive'))
        obj.agentIsActive = ApiClient.convertToType(data['agentIsActive'], 'Boolean');
      if (data.hasOwnProperty('agentOperationalState'))
        obj.agentOperationalState = ApiClient.convertToType(data['agentOperationalState'], 'String');
      if (data.hasOwnProperty('signed'))
        obj.signed = ApiClient.convertToType(data['signed'], 'Boolean');
      if (data.hasOwnProperty('agentId'))
        obj.agentId = ApiClient.convertToType(data['agentId'], 'String');
      if (data.hasOwnProperty('publisher'))
        obj.publisher = ApiClient.convertToType(data['publisher'], 'String');
      if (data.hasOwnProperty('version'))
        obj.version = ApiClient.convertToType(data['version'], 'String');
      if (data.hasOwnProperty('agentIsDecommissioned'))
        obj.agentIsDecommissioned = ApiClient.convertToType(data['agentIsDecommissioned'], 'Boolean');
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
      if (data.hasOwnProperty('agentOsType'))
        obj.agentOsType = ApiClient.convertToType(data['agentOsType'], 'String');
      if (data.hasOwnProperty('agentVersion'))
        obj.agentVersion = ApiClient.convertToType(data['agentVersion'], 'String');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('createdAt'))
        obj.createdAt = ApiClient.convertToType(data['createdAt'], 'Date');
      if (data.hasOwnProperty('osType'))
        obj.osType = ApiClient.convertToType(data['osType'], 'String');
      if (data.hasOwnProperty('agentComputerName'))
        obj.agentComputerName = ApiClient.convertToType(data['agentComputerName'], 'String');
      if (data.hasOwnProperty('riskLevel'))
        obj.riskLevel = ApiClient.convertToType(data['riskLevel'], 'String');
      if (data.hasOwnProperty('installedAt'))
        obj.installedAt = ApiClient.convertToType(data['installedAt'], 'Date');
      if (data.hasOwnProperty('agentDomain'))
        obj.agentDomain = ApiClient.convertToType(data['agentDomain'], 'String');
    }
    return obj;
  }

  /**
   * Agent infected
   * @member {Boolean} agentInfected
   */
  exports.prototype.agentInfected = undefined;

  /**
   * Agent uuid
   * @member {String} agentUuid
   */
  exports.prototype.agentUuid = undefined;

  /**
   * Agent machine type
   * @member {module:model/ApplicationsSchemasApplicationViewSchemaMany200Data.AgentMachineTypeEnum} agentMachineType
   */
  exports.prototype.agentMachineType = undefined;

  /**
   * Application size (bytes)
   * @member {Number} size
   */
  exports.prototype.size = undefined;

  /**
   * Updated at
   * @member {Date} updatedAt
   */
  exports.prototype.updatedAt = undefined;

  /**
   * Agent network status
   * @member {module:model/ApplicationsSchemasApplicationViewSchemaMany200Data.AgentNetworkStatusEnum} agentNetworkStatus
   */
  exports.prototype.agentNetworkStatus = undefined;

  /**
   * Application ID
   * @member {String} id
   */
  exports.prototype.id = undefined;

  /**
   * Agent is active
   * @member {Boolean} agentIsActive
   */
  exports.prototype.agentIsActive = undefined;

  /**
   * Agent operational state
   * @member {String} agentOperationalState
   */
  exports.prototype.agentOperationalState = undefined;

  /**
   * Signed
   * @member {Boolean} signed
   */
  exports.prototype.signed = undefined;

  /**
   * Agent id
   * @member {String} agentId
   */
  exports.prototype.agentId = undefined;

  /**
   * Publisher
   * @member {String} publisher
   */
  exports.prototype.publisher = undefined;

  /**
   * Version
   * @member {String} version
   */
  exports.prototype.version = undefined;

  /**
   * Agent is decommissioned
   * @member {Boolean} agentIsDecommissioned
   */
  exports.prototype.agentIsDecommissioned = undefined;

  /**
   * Type
   * @member {module:model/ApplicationsSchemasApplicationViewSchemaMany200Data.TypeEnum} type
   */
  exports.prototype.type = undefined;

  /**
   * OS type
   * @member {module:model/ApplicationsSchemasApplicationViewSchemaMany200Data.AgentOsTypeEnum} agentOsType
   */
  exports.prototype.agentOsType = undefined;

  /**
   * Agent version
   * @member {String} agentVersion
   */
  exports.prototype.agentVersion = undefined;

  /**
   * Name
   * @member {String} name
   */
  exports.prototype.name = undefined;

  /**
   * Created at
   * @member {Date} createdAt
   */
  exports.prototype.createdAt = undefined;

  /**
   * OS type
   * @member {module:model/ApplicationsSchemasApplicationViewSchemaMany200Data.OsTypeEnum} osType
   */
  exports.prototype.osType = undefined;

  /**
   * Agent computer name
   * @member {String} agentComputerName
   */
  exports.prototype.agentComputerName = undefined;

  /**
   * Risk level
   * @member {module:model/ApplicationsSchemasApplicationViewSchemaMany200Data.RiskLevelEnum} riskLevel
   */
  exports.prototype.riskLevel = undefined;

  /**
   * Installed at
   * @member {Date} installedAt
   */
  exports.prototype.installedAt = undefined;

  /**
   * Agent domain
   * @member {String} agentDomain
   */
  exports.prototype.agentDomain = undefined;



  /**
   * Allowed values for the <code>agentMachineType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.AgentMachineTypeEnum = {
    /**
     * value: "unknown"
     * @const
     */
    unknown: "unknown",

    /**
     * value: "desktop"
     * @const
     */
    desktop: "desktop",

    /**
     * value: "laptop"
     * @const
     */
    laptop: "laptop",

    /**
     * value: "server"
     * @const
     */
    server: "server",

    /**
     * value: "kubernetes node"
     * @const
     */
    kubernetesNode: "kubernetes node",

    /**
     * value: "storage"
     * @const
     */
    storage: "storage",

    /**
     * value: "kubernetes pod"
     * @const
     */
    kubernetesPod: "kubernetes pod",

    /**
     * value: "ecs task"
     * @const
     */
    ecsTask: "ecs task"
  };


  /**
   * Allowed values for the <code>agentNetworkStatus</code> property.
   * @enum {String}
   * @readonly
   */
  exports.AgentNetworkStatusEnum = {
    /**
     * value: "connected"
     * @const
     */
    connected: "connected",

    /**
     * value: "disconnected"
     * @const
     */
    disconnected: "disconnected",

    /**
     * value: "connecting"
     * @const
     */
    connecting: "connecting",

    /**
     * value: "disconnecting"
     * @const
     */
    disconnecting: "disconnecting"
  };


  /**
   * Allowed values for the <code>type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TypeEnum = {
    /**
     * value: "app"
     * @const
     */
    app: "app",

    /**
     * value: "kb"
     * @const
     */
    kb: "kb",

    /**
     * value: "patch"
     * @const
     */
    patch: "patch",

    /**
     * value: "chromeExtension"
     * @const
     */
    chromeExtension: "chromeExtension",

    /**
     * value: "edgeExtension"
     * @const
     */
    edgeExtension: "edgeExtension",

    /**
     * value: "firefoxExtension"
     * @const
     */
    firefoxExtension: "firefoxExtension",

    /**
     * value: "safariExtension"
     * @const
     */
    safariExtension: "safariExtension"
  };


  /**
   * Allowed values for the <code>agentOsType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.AgentOsTypeEnum = {
    /**
     * value: "windows"
     * @const
     */
    windows: "windows",

    /**
     * value: "macos"
     * @const
     */
    macos: "macos",

    /**
     * value: "linux"
     * @const
     */
    linux: "linux",

    /**
     * value: "windows_legacy"
     * @const
     */
    windowsLegacy: "windows_legacy"
  };


  /**
   * Allowed values for the <code>osType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.OsTypeEnum = {
    /**
     * value: "windows"
     * @const
     */
    windows: "windows",

    /**
     * value: "macos"
     * @const
     */
    macos: "macos",

    /**
     * value: "linux"
     * @const
     */
    linux: "linux",

    /**
     * value: "windows_legacy"
     * @const
     */
    windowsLegacy: "windows_legacy"
  };


  /**
   * Allowed values for the <code>riskLevel</code> property.
   * @enum {String}
   * @readonly
   */
  exports.RiskLevelEnum = {
    /**
     * value: "none"
     * @const
     */
    none: "none",

    /**
     * value: "low"
     * @const
     */
    low: "low",

    /**
     * value: "medium"
     * @const
     */
    medium: "medium",

    /**
     * value: "high"
     * @const
     */
    high: "high",

    /**
     * value: "critical"
     * @const
     */
    critical: "critical"
  };

  return exports;

}));
