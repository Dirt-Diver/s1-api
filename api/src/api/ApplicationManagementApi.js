/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AutoCompleteResponseSchema200', 'model/CountFiltersResponseSchemaMany200', 'model/FreeTextFilterResponseSchemaMany200', 'model/NoDataSchema400', 'model/NoDataSchema401', 'model/NoDataSchema403', 'model/SuccessResponseSchema200', 'model/V21ApplicationManagementApplicationManagementSchemasAgentApplicationsSchemaMany200', 'model/V21ApplicationManagementApplicationManagementSchemasApplicationInventoryEndpointsSchemaMany200', 'model/V21ApplicationManagementApplicationManagementSchemasApplicationInventorySchemaMany200', 'model/V21ApplicationManagementApplicationManagementSchemasApplicationManagementScanSchema200', 'model/V21ApplicationManagementApplicationManagementSchemasApplicationManagementSkuGetSchema200', 'model/V21ApplicationManagementApplicationManagementSchemasBaseRisksCveSchemaMany200', 'model/V21ApplicationManagementApplicationManagementSchemasRiskAdditionalDataSchemaMany200', 'model/V21ApplicationManagementApplicationManagementSchemasRiskDetailSchema200', 'model/V21ApplicationManagementApplicationManagementSchemasRisksByAggregatedApplicationsSchemaMany200', 'model/V21ApplicationManagementApplicationManagementSchemasRisksByApplicationsSchemaMany200', 'model/V21ApplicationManagementApplicationManagementSchemasRiskyCVEsSchemaMany200', 'model/V21ApplicationManagementApplicationManagementSchemasRiskyEndpointsSchemaMany200', 'model/V21ApplicationManagementApplicationManagementSchemasScanPostSchema', 'model/V21ApplicationManagementApplicationManagementSchemasVersionsCountSchema200'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/AutoCompleteResponseSchema200'), require('../model/CountFiltersResponseSchemaMany200'), require('../model/FreeTextFilterResponseSchemaMany200'), require('../model/NoDataSchema400'), require('../model/NoDataSchema401'), require('../model/NoDataSchema403'), require('../model/SuccessResponseSchema200'), require('../model/V21ApplicationManagementApplicationManagementSchemasAgentApplicationsSchemaMany200'), require('../model/V21ApplicationManagementApplicationManagementSchemasApplicationInventoryEndpointsSchemaMany200'), require('../model/V21ApplicationManagementApplicationManagementSchemasApplicationInventorySchemaMany200'), require('../model/V21ApplicationManagementApplicationManagementSchemasApplicationManagementScanSchema200'), require('../model/V21ApplicationManagementApplicationManagementSchemasApplicationManagementSkuGetSchema200'), require('../model/V21ApplicationManagementApplicationManagementSchemasBaseRisksCveSchemaMany200'), require('../model/V21ApplicationManagementApplicationManagementSchemasRiskAdditionalDataSchemaMany200'), require('../model/V21ApplicationManagementApplicationManagementSchemasRiskDetailSchema200'), require('../model/V21ApplicationManagementApplicationManagementSchemasRisksByAggregatedApplicationsSchemaMany200'), require('../model/V21ApplicationManagementApplicationManagementSchemasRisksByApplicationsSchemaMany200'), require('../model/V21ApplicationManagementApplicationManagementSchemasRiskyCVEsSchemaMany200'), require('../model/V21ApplicationManagementApplicationManagementSchemasRiskyEndpointsSchemaMany200'), require('../model/V21ApplicationManagementApplicationManagementSchemasScanPostSchema'), require('../model/V21ApplicationManagementApplicationManagementSchemasVersionsCountSchema200'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.ApplicationManagementApi = factory(root.S1MgmtApi.ApiClient, root.S1MgmtApi.AutoCompleteResponseSchema200, root.S1MgmtApi.CountFiltersResponseSchemaMany200, root.S1MgmtApi.FreeTextFilterResponseSchemaMany200, root.S1MgmtApi.NoDataSchema400, root.S1MgmtApi.NoDataSchema401, root.S1MgmtApi.NoDataSchema403, root.S1MgmtApi.SuccessResponseSchema200, root.S1MgmtApi.V21ApplicationManagementApplicationManagementSchemasAgentApplicationsSchemaMany200, root.S1MgmtApi.V21ApplicationManagementApplicationManagementSchemasApplicationInventoryEndpointsSchemaMany200, root.S1MgmtApi.V21ApplicationManagementApplicationManagementSchemasApplicationInventorySchemaMany200, root.S1MgmtApi.V21ApplicationManagementApplicationManagementSchemasApplicationManagementScanSchema200, root.S1MgmtApi.V21ApplicationManagementApplicationManagementSchemasApplicationManagementSkuGetSchema200, root.S1MgmtApi.V21ApplicationManagementApplicationManagementSchemasBaseRisksCveSchemaMany200, root.S1MgmtApi.V21ApplicationManagementApplicationManagementSchemasRiskAdditionalDataSchemaMany200, root.S1MgmtApi.V21ApplicationManagementApplicationManagementSchemasRiskDetailSchema200, root.S1MgmtApi.V21ApplicationManagementApplicationManagementSchemasRisksByAggregatedApplicationsSchemaMany200, root.S1MgmtApi.V21ApplicationManagementApplicationManagementSchemasRisksByApplicationsSchemaMany200, root.S1MgmtApi.V21ApplicationManagementApplicationManagementSchemasRiskyCVEsSchemaMany200, root.S1MgmtApi.V21ApplicationManagementApplicationManagementSchemasRiskyEndpointsSchemaMany200, root.S1MgmtApi.V21ApplicationManagementApplicationManagementSchemasScanPostSchema, root.S1MgmtApi.V21ApplicationManagementApplicationManagementSchemasVersionsCountSchema200);
  }
}(this, function(ApiClient, AutoCompleteResponseSchema200, CountFiltersResponseSchemaMany200, FreeTextFilterResponseSchemaMany200, NoDataSchema400, NoDataSchema401, NoDataSchema403, SuccessResponseSchema200, V21ApplicationManagementApplicationManagementSchemasAgentApplicationsSchemaMany200, V21ApplicationManagementApplicationManagementSchemasApplicationInventoryEndpointsSchemaMany200, V21ApplicationManagementApplicationManagementSchemasApplicationInventorySchemaMany200, V21ApplicationManagementApplicationManagementSchemasApplicationManagementScanSchema200, V21ApplicationManagementApplicationManagementSchemasApplicationManagementSkuGetSchema200, V21ApplicationManagementApplicationManagementSchemasBaseRisksCveSchemaMany200, V21ApplicationManagementApplicationManagementSchemasRiskAdditionalDataSchemaMany200, V21ApplicationManagementApplicationManagementSchemasRiskDetailSchema200, V21ApplicationManagementApplicationManagementSchemasRisksByAggregatedApplicationsSchemaMany200, V21ApplicationManagementApplicationManagementSchemasRisksByApplicationsSchemaMany200, V21ApplicationManagementApplicationManagementSchemasRiskyCVEsSchemaMany200, V21ApplicationManagementApplicationManagementSchemasRiskyEndpointsSchemaMany200, V21ApplicationManagementApplicationManagementSchemasScanPostSchema, V21ApplicationManagementApplicationManagementSchemasVersionsCountSchema200) {
  'use strict';

  /**
   * ApplicationManagement service.
   * @module api/ApplicationManagementApi
   * @version 2.1
   */

  /**
   * Constructs a new ApplicationManagementApi. 
   * @alias module:api/ApplicationManagementApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the webApiApplicationManagementInventoryApplicationsGet operation.
     * @callback module:api/ApplicationManagementApi~webApiApplicationManagementInventoryApplicationsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21ApplicationManagementApplicationManagementSchemasAgentApplicationsSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Endpoint Apps
     * Get the installed applications for a specific endpoint. <BR>To get the Agent ID, run \"agents\".
     * @param {Array.<String>} ids Agent ID list. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/ApplicationManagementApi~webApiApplicationManagementInventoryApplicationsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21ApplicationManagementApplicationManagementSchemasAgentApplicationsSchemaMany200}
     */
    this.webApiApplicationManagementInventoryApplicationsGet = function(ids, callback) {
      var postBody = null;

      // verify the required parameter 'ids' is set
      if (ids === undefined || ids === null) {
        throw new Error("Missing the required parameter 'ids' when calling webApiApplicationManagementInventoryApplicationsGet");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
        'ids': {
          value: ids,
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21ApplicationManagementApplicationManagementSchemasAgentApplicationsSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/application-management/inventory/applications', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiApplicationManagementInventoryEndpointsExportCsvGet operation.
     * @callback module:api/ApplicationManagementApi~webApiApplicationManagementInventoryEndpointsExportCsvGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Inventory Endpoints Data Export
     * Export application inventory endpoints data to CSV.
     * @param {String} applicationName Name
     * @param {String} applicationVendor Vendor
     * @param {Object} opts Optional parameters
     * @param {Date} opts.detectionDateLt Application detection date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.versions Included application versions
     * @param {Array.<String>} opts.osArchitectures Included OS architectures
     * @param {Array.<String>} opts.osTypes Included OS types
     * @param {Array.<String>} opts.osVersions Included OS versions
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.endpointNameContains Free-text filter by endpoint name (supports multiple values). Example: \"Office,Test\".
     * @param {Date} opts.detectionDateGte Application detection date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.detectionDateGt Application detection date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.detectionDateLte Application detection date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.detectionDateBetween Date range for application detection date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<String>} opts.endpointUuidContains Free-text filter by endpoint uuid (supports multiple values)
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {module:api/ApplicationManagementApi~webApiApplicationManagementInventoryEndpointsExportCsvGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiApplicationManagementInventoryEndpointsExportCsvGet = function(applicationName, applicationVendor, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'applicationName' is set
      if (applicationName === undefined || applicationName === null) {
        throw new Error("Missing the required parameter 'applicationName' when calling webApiApplicationManagementInventoryEndpointsExportCsvGet");
      }

      // verify the required parameter 'applicationVendor' is set
      if (applicationVendor === undefined || applicationVendor === null) {
        throw new Error("Missing the required parameter 'applicationVendor' when calling webApiApplicationManagementInventoryEndpointsExportCsvGet");
      }


      var pathParams = {
      };
      var queryParams = {
        'detectionDate__lt': opts['detectionDateLt'],
        'applicationName': applicationName,
        'applicationVendor': applicationVendor,
        'detectionDate__gte': opts['detectionDateGte'],
        'detectionDate__gt': opts['detectionDateGt'],
        'detectionDate__lte': opts['detectionDateLte'],
        'detectionDate__between': opts['detectionDateBetween'],
      };
      var collectionQueryParams = {
        'versions': {
          value: opts['versions'],
          collectionFormat: 'csv'
        },
        'osArchitectures': {
          value: opts['osArchitectures'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'osVersions': {
          value: opts['osVersions'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'endpointName__contains': {
          value: opts['endpointNameContains'],
          collectionFormat: 'csv'
        },
        'endpointUuid__contains': {
          value: opts['endpointUuidContains'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/application-management/inventory/endpoints/export/csv', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiApplicationManagementInventoryEndpointsGet operation.
     * @callback module:api/ApplicationManagementApi~webApiApplicationManagementInventoryEndpointsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21ApplicationManagementApplicationManagementSchemasApplicationInventoryEndpointsSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get App Inventory Endpoints
     * Get endpoint data for a specific application.
     * @param {String} applicationName Name
     * @param {String} applicationVendor Vendor
     * @param {Object} opts Optional parameters
     * @param {Date} opts.detectionDateLt Application detection date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {module:model/String} opts.sortBy The column to sort the results by. Example: \"id\". (default to null)
     * @param {Array.<String>} opts.versions Included application versions
     * @param {Number} opts.limit Limit number of returned items (1-1000). Example: \"10\". (default to 10)
     * @param {String} opts.cursor Cursor position returned by the last request. Use to iterate over more than 1000 items. Example: \"YWdlbnRfaWQ6NTgwMjkzODE=\". (default to null)
     * @param {Array.<String>} opts.osArchitectures Included OS architectures
     * @param {Array.<String>} opts.osTypes Included OS types
     * @param {module:model/String} opts.sortOrder Sort direction. Example: \"asc\". (default to null)
     * @param {Array.<String>} opts.osVersions Included OS versions
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.endpointNameContains Free-text filter by endpoint name (supports multiple values). Example: \"Office,Test\".
     * @param {Boolean} opts.skipCount If true, total number of items will not be calculated, which speeds up execution time. (default to null)
     * @param {Date} opts.detectionDateGte Application detection date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.detectionDateGt Application detection date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Number} opts.skip Skip first number of items (0-1000). To iterate over more than 1000 items,  use \"cursor\". Example: \"150\".
     * @param {Date} opts.detectionDateLte Application detection date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.detectionDateBetween Date range for application detection date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Boolean} opts.countOnly If true, only total number of items will be returned, without any of the actual objects. (default to false)
     * @param {Array.<String>} opts.endpointUuidContains Free-text filter by endpoint uuid (supports multiple values)
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {module:api/ApplicationManagementApi~webApiApplicationManagementInventoryEndpointsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21ApplicationManagementApplicationManagementSchemasApplicationInventoryEndpointsSchemaMany200}
     */
    this.webApiApplicationManagementInventoryEndpointsGet = function(applicationName, applicationVendor, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'applicationName' is set
      if (applicationName === undefined || applicationName === null) {
        throw new Error("Missing the required parameter 'applicationName' when calling webApiApplicationManagementInventoryEndpointsGet");
      }

      // verify the required parameter 'applicationVendor' is set
      if (applicationVendor === undefined || applicationVendor === null) {
        throw new Error("Missing the required parameter 'applicationVendor' when calling webApiApplicationManagementInventoryEndpointsGet");
      }


      var pathParams = {
      };
      var queryParams = {
        'detectionDate__lt': opts['detectionDateLt'],
        'sortBy': opts['sortBy'],
        'applicationName': applicationName,
        'limit': opts['limit'],
        'applicationVendor': applicationVendor,
        'cursor': opts['cursor'],
        'sortOrder': opts['sortOrder'],
        'skipCount': opts['skipCount'],
        'detectionDate__gte': opts['detectionDateGte'],
        'detectionDate__gt': opts['detectionDateGt'],
        'skip': opts['skip'],
        'detectionDate__lte': opts['detectionDateLte'],
        'detectionDate__between': opts['detectionDateBetween'],
        'countOnly': opts['countOnly'],
      };
      var collectionQueryParams = {
        'versions': {
          value: opts['versions'],
          collectionFormat: 'csv'
        },
        'osArchitectures': {
          value: opts['osArchitectures'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'osVersions': {
          value: opts['osVersions'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'endpointName__contains': {
          value: opts['endpointNameContains'],
          collectionFormat: 'csv'
        },
        'endpointUuid__contains': {
          value: opts['endpointUuidContains'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21ApplicationManagementApplicationManagementSchemasApplicationInventoryEndpointsSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/application-management/inventory/endpoints', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiApplicationManagementInventoryExportCsvGet operation.
     * @callback module:api/ApplicationManagementApi~webApiApplicationManagementInventoryExportCsvGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Inventory Data Export
     * Export application inventory data to CSV.
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.osArchitectures Included OS architectures
     * @param {Array.<String>} opts.vendors Included vendors. Example: \"Microsoft,Apple\".
     * @param {Array.<String>} opts.osTypes Included OS types
     * @param {Array.<String>} opts.osVersions Included OS versions
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.endpointNameContains Free-text filter by endpoint name (supports multiple values). Example: \"Office,Test\".
     * @param {Array.<String>} opts.nameContains Free-text filter by application name (supports multiple values). Example: \"Office,Test\".
     * @param {Array.<String>} opts.osVersionContains Free-text filter by os version (supports multiple values). Example: \"Windows 7 ServicePack1\".
     * @param {Array.<String>} opts.endpointUuidContains Free-text filter by endpoint uuid (supports multiple values)
     * @param {Array.<String>} opts.vendorContains Free-text filter by vendor (supports multiple values). Example: \"Microsoft,Apple\".
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {module:api/ApplicationManagementApi~webApiApplicationManagementInventoryExportCsvGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiApplicationManagementInventoryExportCsvGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
        'osArchitectures': {
          value: opts['osArchitectures'],
          collectionFormat: 'csv'
        },
        'vendors': {
          value: opts['vendors'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'osVersions': {
          value: opts['osVersions'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'endpointName__contains': {
          value: opts['endpointNameContains'],
          collectionFormat: 'csv'
        },
        'name__contains': {
          value: opts['nameContains'],
          collectionFormat: 'csv'
        },
        'osVersion__contains': {
          value: opts['osVersionContains'],
          collectionFormat: 'csv'
        },
        'endpointUuid__contains': {
          value: opts['endpointUuidContains'],
          collectionFormat: 'csv'
        },
        'vendor__contains': {
          value: opts['vendorContains'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/application-management/inventory/export/csv', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiApplicationManagementInventoryGet operation.
     * @callback module:api/ApplicationManagementApi~webApiApplicationManagementInventoryGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21ApplicationManagementApplicationManagementSchemasApplicationInventorySchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Application Inventory
     * Get application inventory data grouped by application name and vendor.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.sortBy The column to sort the results by. Example: \"id\". (default to null)
     * @param {Number} opts.limit Limit number of returned items (1-1000). Example: \"10\". (default to 10)
     * @param {String} opts.cursor Cursor position returned by the last request. Use to iterate over more than 1000 items. Example: \"YWdlbnRfaWQ6NTgwMjkzODE=\". (default to null)
     * @param {Array.<String>} opts.osArchitectures Included OS architectures
     * @param {Array.<String>} opts.vendors Included vendors. Example: \"Microsoft,Apple\".
     * @param {Array.<String>} opts.osTypes Included OS types
     * @param {module:model/String} opts.sortOrder Sort direction. Example: \"asc\". (default to null)
     * @param {Array.<String>} opts.osVersions Included OS versions
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.endpointNameContains Free-text filter by endpoint name (supports multiple values). Example: \"Office,Test\".
     * @param {Boolean} opts.skipCount If true, total number of items will not be calculated, which speeds up execution time. (default to null)
     * @param {Array.<String>} opts.nameContains Free-text filter by application name (supports multiple values). Example: \"Office,Test\".
     * @param {Number} opts.skip Skip first number of items (0-1000). To iterate over more than 1000 items,  use \"cursor\". Example: \"150\".
     * @param {Array.<String>} opts.osVersionContains Free-text filter by os version (supports multiple values). Example: \"Windows 7 ServicePack1\".
     * @param {Boolean} opts.countOnly If true, only total number of items will be returned, without any of the actual objects. (default to false)
     * @param {Array.<String>} opts.endpointUuidContains Free-text filter by endpoint uuid (supports multiple values)
     * @param {Array.<String>} opts.vendorContains Free-text filter by vendor (supports multiple values). Example: \"Microsoft,Apple\".
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {module:api/ApplicationManagementApi~webApiApplicationManagementInventoryGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21ApplicationManagementApplicationManagementSchemasApplicationInventorySchemaMany200}
     */
    this.webApiApplicationManagementInventoryGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'sortBy': opts['sortBy'],
        'limit': opts['limit'],
        'cursor': opts['cursor'],
        'sortOrder': opts['sortOrder'],
        'skipCount': opts['skipCount'],
        'skip': opts['skip'],
        'countOnly': opts['countOnly'],
      };
      var collectionQueryParams = {
        'osArchitectures': {
          value: opts['osArchitectures'],
          collectionFormat: 'csv'
        },
        'vendors': {
          value: opts['vendors'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'osVersions': {
          value: opts['osVersions'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'endpointName__contains': {
          value: opts['endpointNameContains'],
          collectionFormat: 'csv'
        },
        'name__contains': {
          value: opts['nameContains'],
          collectionFormat: 'csv'
        },
        'osVersion__contains': {
          value: opts['osVersionContains'],
          collectionFormat: 'csv'
        },
        'endpointUuid__contains': {
          value: opts['endpointUuidContains'],
          collectionFormat: 'csv'
        },
        'vendor__contains': {
          value: opts['vendorContains'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21ApplicationManagementApplicationManagementSchemasApplicationInventorySchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/application-management/inventory', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiApplicationManagementRisksAggregatedApplicationsExportCsvGet operation.
     * @callback module:api/ApplicationManagementApi~webApiApplicationManagementRisksAggregatedApplicationsExportCsvGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Aggregated Application Risk Data Export
     * Export aggregated application data to CSV.
     * @param {Object} opts Optional parameters
     * @param {Date} opts.detectionDateLt Application detection date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.domains Included domains.
     * @param {Array.<String>} opts.vendors Included vendors. Example: \"Microsoft,Apple\".
     * @param {Array.<module:model/String>} opts.exploitedInTheWild Included exploited in the wild values. Available with Ranger Insights. Example: \"Unknown,Yes\".
     * @param {Array.<String>} opts.osTypes Included OS types. Example: \"windows,linux\".
     * @param {Array.<String>} opts.highestSeverities Included highest severities. Example: \"CRITICAL,HIGH\".
     * @param {Array.<module:model/String>} opts.exploitCodeMaturity Included exploit code maturity values. Available with Ranger Insights. Example: \"Functional,High\".
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {Number} opts.daysFromDetection Days from application detection, e.g. 12 days or more. Example: \"12\".
     * @param {Date} opts.detectionDateGte Application detection date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.endpointNameContains Free-text filter by endpoint name (supports multiple values). Example: \"Office,Test\".
     * @param {Array.<String>} opts.cveIdContains Free-text filter by CVE id (supports multiple values). Example: \"CVE-1234-5678\".
     * @param {Array.<String>} opts.nameContains Free-text filter by application name (supports multiple values). Example: \"Office 1.1,Test\".
     * @param {Date} opts.detectionDateGt Application detection date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.detectionDateLte Application detection date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.detectionDateBetween Date range for application detection date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<module:model/String>} opts.remediationLevels Included remediation level values. Available with Ranger Insights. Example: \"Official Fix,Temporary Fix\".
     * @param {Array.<String>} opts.applicationTypes Application type. Available with Ranger Insights. Example: \"A,p,p,l,i,c,a,t,i,o,n\".
     * @param {Array.<String>} opts.endpointUuidContains Free-text filter by endpoint uuid (supports multiple values)
     * @param {Array.<String>} opts.endpointTypes Included endpoint types. Example: \"desktop,laptop\".
     * @param {Array.<String>} opts.vendorContains Free-text filter by vendor (supports multiple values). Example: \"Microsoft,Apple\".
     * @param {Array.<String>} opts.mostCommonStatuses Included most common status values. Available with Ranger Insights.
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {module:api/ApplicationManagementApi~webApiApplicationManagementRisksAggregatedApplicationsExportCsvGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiApplicationManagementRisksAggregatedApplicationsExportCsvGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'detectionDate__lt': opts['detectionDateLt'],
        'daysFromDetection': opts['daysFromDetection'],
        'detectionDate__gte': opts['detectionDateGte'],
        'detectionDate__gt': opts['detectionDateGt'],
        'detectionDate__lte': opts['detectionDateLte'],
        'detectionDate__between': opts['detectionDateBetween'],
      };
      var collectionQueryParams = {
        'domains': {
          value: opts['domains'],
          collectionFormat: 'csv'
        },
        'vendors': {
          value: opts['vendors'],
          collectionFormat: 'csv'
        },
        'exploitedInTheWild': {
          value: opts['exploitedInTheWild'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'highestSeverities': {
          value: opts['highestSeverities'],
          collectionFormat: 'csv'
        },
        'exploitCodeMaturity': {
          value: opts['exploitCodeMaturity'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'endpointName__contains': {
          value: opts['endpointNameContains'],
          collectionFormat: 'csv'
        },
        'cveId__contains': {
          value: opts['cveIdContains'],
          collectionFormat: 'csv'
        },
        'name__contains': {
          value: opts['nameContains'],
          collectionFormat: 'csv'
        },
        'remediationLevels': {
          value: opts['remediationLevels'],
          collectionFormat: 'csv'
        },
        'applicationTypes': {
          value: opts['applicationTypes'],
          collectionFormat: 'csv'
        },
        'endpointUuid__contains': {
          value: opts['endpointUuidContains'],
          collectionFormat: 'csv'
        },
        'endpointTypes': {
          value: opts['endpointTypes'],
          collectionFormat: 'csv'
        },
        'vendor__contains': {
          value: opts['vendorContains'],
          collectionFormat: 'csv'
        },
        'mostCommonStatuses': {
          value: opts['mostCommonStatuses'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/application-management/risks/aggregated-applications/export/csv', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiApplicationManagementRisksAggregatedApplicationsGet operation.
     * @callback module:api/ApplicationManagementApi~webApiApplicationManagementRisksAggregatedApplicationsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21ApplicationManagementApplicationManagementSchemasRisksByAggregatedApplicationsSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Aggregated Applications With Risk
     * Get data for all applications. Available with Ranger Insights license.
     * @param {Object} opts Optional parameters
     * @param {Date} opts.detectionDateLt Application detection date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {module:model/String} opts.sortBy The column to sort the results by. Example: \"id\". (default to null)
     * @param {Array.<String>} opts.domains Included domains.
     * @param {Number} opts.limit Limit number of returned items (1-1000). Example: \"10\". (default to 10)
     * @param {String} opts.cursor Cursor position returned by the last request. Use to iterate over more than 1000 items. Example: \"YWdlbnRfaWQ6NTgwMjkzODE=\". (default to null)
     * @param {Array.<String>} opts.vendors Included vendors. Example: \"Microsoft,Apple\".
     * @param {Array.<module:model/String>} opts.exploitedInTheWild Included exploited in the wild values. Available with Ranger Insights. Example: \"Unknown,Yes\".
     * @param {Array.<String>} opts.osTypes Included OS types. Example: \"windows,linux\".
     * @param {Array.<String>} opts.highestSeverities Included highest severities. Example: \"CRITICAL,HIGH\".
     * @param {module:model/String} opts.sortOrder Sort direction. Example: \"asc\". (default to null)
     * @param {Array.<module:model/String>} opts.exploitCodeMaturity Included exploit code maturity values. Available with Ranger Insights. Example: \"Functional,High\".
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {Number} opts.daysFromDetection Days from application detection, e.g. 12 days or more. Example: \"12\".
     * @param {Boolean} opts.skipCount If true, total number of items will not be calculated, which speeds up execution time. (default to null)
     * @param {Date} opts.detectionDateGte Application detection date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.cveIdContains Free-text filter by CVE id (supports multiple values). Example: \"CVE-1234-5678\".
     * @param {Array.<String>} opts.endpointNameContains Free-text filter by endpoint name (supports multiple values). Example: \"Office,Test\".
     * @param {Array.<String>} opts.nameContains Free-text filter by application name (supports multiple values). Example: \"Office 1.1,Test\".
     * @param {Date} opts.detectionDateGt Application detection date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Number} opts.skip Skip first number of items (0-1000). To iterate over more than 1000 items,  use \"cursor\". Example: \"150\".
     * @param {Date} opts.detectionDateLte Application detection date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.detectionDateBetween Date range for application detection date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Boolean} opts.countOnly If true, only total number of items will be returned, without any of the actual objects. (default to false)
     * @param {Array.<module:model/String>} opts.remediationLevels Included remediation level values. Available with Ranger Insights. Example: \"Official Fix,Temporary Fix\".
     * @param {Array.<String>} opts.applicationTypes Application type. Available with Ranger Insights. Example: \"A,p,p,l,i,c,a,t,i,o,n\".
     * @param {Array.<String>} opts.endpointUuidContains Free-text filter by endpoint uuid (supports multiple values)
     * @param {Array.<String>} opts.endpointTypes Included endpoint types. Example: \"desktop,laptop\".
     * @param {Array.<String>} opts.vendorContains Free-text filter by vendor (supports multiple values). Example: \"Microsoft,Apple\".
     * @param {Array.<String>} opts.mostCommonStatuses Included most common status values. Available with Ranger Insights.
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {module:api/ApplicationManagementApi~webApiApplicationManagementRisksAggregatedApplicationsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21ApplicationManagementApplicationManagementSchemasRisksByAggregatedApplicationsSchemaMany200}
     */
    this.webApiApplicationManagementRisksAggregatedApplicationsGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'detectionDate__lt': opts['detectionDateLt'],
        'sortBy': opts['sortBy'],
        'limit': opts['limit'],
        'cursor': opts['cursor'],
        'sortOrder': opts['sortOrder'],
        'daysFromDetection': opts['daysFromDetection'],
        'skipCount': opts['skipCount'],
        'detectionDate__gte': opts['detectionDateGte'],
        'detectionDate__gt': opts['detectionDateGt'],
        'skip': opts['skip'],
        'detectionDate__lte': opts['detectionDateLte'],
        'detectionDate__between': opts['detectionDateBetween'],
        'countOnly': opts['countOnly'],
      };
      var collectionQueryParams = {
        'domains': {
          value: opts['domains'],
          collectionFormat: 'csv'
        },
        'vendors': {
          value: opts['vendors'],
          collectionFormat: 'csv'
        },
        'exploitedInTheWild': {
          value: opts['exploitedInTheWild'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'highestSeverities': {
          value: opts['highestSeverities'],
          collectionFormat: 'csv'
        },
        'exploitCodeMaturity': {
          value: opts['exploitCodeMaturity'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'cveId__contains': {
          value: opts['cveIdContains'],
          collectionFormat: 'csv'
        },
        'endpointName__contains': {
          value: opts['endpointNameContains'],
          collectionFormat: 'csv'
        },
        'name__contains': {
          value: opts['nameContains'],
          collectionFormat: 'csv'
        },
        'remediationLevels': {
          value: opts['remediationLevels'],
          collectionFormat: 'csv'
        },
        'applicationTypes': {
          value: opts['applicationTypes'],
          collectionFormat: 'csv'
        },
        'endpointUuid__contains': {
          value: opts['endpointUuidContains'],
          collectionFormat: 'csv'
        },
        'endpointTypes': {
          value: opts['endpointTypes'],
          collectionFormat: 'csv'
        },
        'vendor__contains': {
          value: opts['vendorContains'],
          collectionFormat: 'csv'
        },
        'mostCommonStatuses': {
          value: opts['mostCommonStatuses'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21ApplicationManagementApplicationManagementSchemasRisksByAggregatedApplicationsSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/application-management/risks/aggregated-applications', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiApplicationManagementRisksApplicationsExportCsvGet operation.
     * @callback module:api/ApplicationManagementApi~webApiApplicationManagementRisksApplicationsExportCsvGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Application Risk Data Export
     * Export application data to CSV.
     * @param {Object} opts Optional parameters
     * @param {Date} opts.detectionDateLt Application detection date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.domains Included domains.
     * @param {Array.<String>} opts.applicationContains Free-text filter by application name and version (supports multiple values). Example: \"Office 1.1,Test\".
     * @param {Array.<String>} opts.vendors Included vendors. Example: \"Microsoft,Apple\".
     * @param {Array.<module:model/String>} opts.exploitedInTheWild Included exploited in the wild values. Available with Ranger Insights. Example: \"Unknown,Yes\".
     * @param {Array.<String>} opts.osTypes Included OS types. Example: \"windows,linux\".
     * @param {Array.<String>} opts.highestSeverities Included highest severities. Example: \"CRITICAL,HIGH\".
     * @param {Array.<module:model/String>} opts.exploitCodeMaturity Included exploit code maturity values. Available with Ranger Insights. Example: \"Functional,High\".
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {Number} opts.daysFromDetection Days from application detection, e.g. 12 days or more. Example: \"12\".
     * @param {Date} opts.detectionDateGte Application detection date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.endpointNameContains Free-text filter by endpoint name (supports multiple values). Example: \"Office,Test\".
     * @param {Array.<String>} opts.cveIdContains Free-text filter by CVE id (supports multiple values). Example: \"CVE-1234-5678\".
     * @param {Date} opts.detectionDateGt Application detection date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.detectionDateLte Application detection date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.detectionDateBetween Date range for application detection date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<module:model/String>} opts.remediationLevels Included remediation level values. Available with Ranger Insights. Example: \"Official Fix,Temporary Fix\".
     * @param {Array.<String>} opts.applicationTypes Application type. Available with Ranger Insights. Example: \"A,p,p,l,i,c,a,t,i,o,n\".
     * @param {Array.<String>} opts.endpointUuidContains Free-text filter by endpoint uuid (supports multiple values)
     * @param {Array.<String>} opts.endpointTypes Included endpoint types. Example: \"desktop,laptop\".
     * @param {Array.<String>} opts.vendorContains Free-text filter by vendor (supports multiple values). Example: \"Microsoft,Apple\".
     * @param {Array.<String>} opts.mostCommonStatuses Included most common status values. Available with Ranger Insights.
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {module:api/ApplicationManagementApi~webApiApplicationManagementRisksApplicationsExportCsvGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiApplicationManagementRisksApplicationsExportCsvGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'detectionDate__lt': opts['detectionDateLt'],
        'daysFromDetection': opts['daysFromDetection'],
        'detectionDate__gte': opts['detectionDateGte'],
        'detectionDate__gt': opts['detectionDateGt'],
        'detectionDate__lte': opts['detectionDateLte'],
        'detectionDate__between': opts['detectionDateBetween'],
      };
      var collectionQueryParams = {
        'domains': {
          value: opts['domains'],
          collectionFormat: 'csv'
        },
        'application__contains': {
          value: opts['applicationContains'],
          collectionFormat: 'csv'
        },
        'vendors': {
          value: opts['vendors'],
          collectionFormat: 'csv'
        },
        'exploitedInTheWild': {
          value: opts['exploitedInTheWild'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'highestSeverities': {
          value: opts['highestSeverities'],
          collectionFormat: 'csv'
        },
        'exploitCodeMaturity': {
          value: opts['exploitCodeMaturity'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'endpointName__contains': {
          value: opts['endpointNameContains'],
          collectionFormat: 'csv'
        },
        'cveId__contains': {
          value: opts['cveIdContains'],
          collectionFormat: 'csv'
        },
        'remediationLevels': {
          value: opts['remediationLevels'],
          collectionFormat: 'csv'
        },
        'applicationTypes': {
          value: opts['applicationTypes'],
          collectionFormat: 'csv'
        },
        'endpointUuid__contains': {
          value: opts['endpointUuidContains'],
          collectionFormat: 'csv'
        },
        'endpointTypes': {
          value: opts['endpointTypes'],
          collectionFormat: 'csv'
        },
        'vendor__contains': {
          value: opts['vendorContains'],
          collectionFormat: 'csv'
        },
        'mostCommonStatuses': {
          value: opts['mostCommonStatuses'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/application-management/risks/applications/export/csv', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiApplicationManagementRisksApplicationsGet operation.
     * @callback module:api/ApplicationManagementApi~webApiApplicationManagementRisksApplicationsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21ApplicationManagementApplicationManagementSchemasRisksByApplicationsSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Applications With Risk
     * Get data for each version of all applications.
     * @param {Object} opts Optional parameters
     * @param {Date} opts.detectionDateLt Application detection date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {module:model/String} opts.sortBy The column to sort the results by. Example: \"id\". (default to null)
     * @param {Array.<String>} opts.domains Included domains.
     * @param {Number} opts.limit Limit number of returned items (1-1000). Example: \"10\". (default to 10)
     * @param {String} opts.cursor Cursor position returned by the last request. Use to iterate over more than 1000 items. Example: \"YWdlbnRfaWQ6NTgwMjkzODE=\". (default to null)
     * @param {Array.<String>} opts.applicationContains Free-text filter by application name and version (supports multiple values). Example: \"Office 1.1,Test\".
     * @param {Array.<String>} opts.vendors Included vendors. Example: \"Microsoft,Apple\".
     * @param {Array.<module:model/String>} opts.exploitedInTheWild Included exploited in the wild values. Available with Ranger Insights. Example: \"Unknown,Yes\".
     * @param {Array.<String>} opts.osTypes Included OS types. Example: \"windows,linux\".
     * @param {Array.<String>} opts.highestSeverities Included highest severities. Example: \"CRITICAL,HIGH\".
     * @param {module:model/String} opts.sortOrder Sort direction. Example: \"asc\". (default to null)
     * @param {Array.<module:model/String>} opts.exploitCodeMaturity Included exploit code maturity values. Available with Ranger Insights. Example: \"Functional,High\".
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {Number} opts.daysFromDetection Days from application detection, e.g. 12 days or more. Example: \"12\".
     * @param {Boolean} opts.skipCount If true, total number of items will not be calculated, which speeds up execution time. (default to null)
     * @param {Date} opts.detectionDateGte Application detection date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.cveIdContains Free-text filter by CVE id (supports multiple values). Example: \"CVE-1234-5678\".
     * @param {Array.<String>} opts.endpointNameContains Free-text filter by endpoint name (supports multiple values). Example: \"Office,Test\".
     * @param {Date} opts.detectionDateGt Application detection date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Number} opts.skip Skip first number of items (0-1000). To iterate over more than 1000 items,  use \"cursor\". Example: \"150\".
     * @param {Date} opts.detectionDateLte Application detection date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.detectionDateBetween Date range for application detection date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Boolean} opts.countOnly If true, only total number of items will be returned, without any of the actual objects. (default to false)
     * @param {Array.<module:model/String>} opts.remediationLevels Included remediation level values. Available with Ranger Insights. Example: \"Official Fix,Temporary Fix\".
     * @param {Array.<String>} opts.applicationTypes Application type. Available with Ranger Insights. Example: \"A,p,p,l,i,c,a,t,i,o,n\".
     * @param {Array.<String>} opts.endpointUuidContains Free-text filter by endpoint uuid (supports multiple values)
     * @param {Array.<String>} opts.endpointTypes Included endpoint types. Example: \"desktop,laptop\".
     * @param {Array.<String>} opts.vendorContains Free-text filter by vendor (supports multiple values). Example: \"Microsoft,Apple\".
     * @param {Array.<String>} opts.mostCommonStatuses Included most common status values. Available with Ranger Insights.
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {module:api/ApplicationManagementApi~webApiApplicationManagementRisksApplicationsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21ApplicationManagementApplicationManagementSchemasRisksByApplicationsSchemaMany200}
     */
    this.webApiApplicationManagementRisksApplicationsGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'detectionDate__lt': opts['detectionDateLt'],
        'sortBy': opts['sortBy'],
        'limit': opts['limit'],
        'cursor': opts['cursor'],
        'sortOrder': opts['sortOrder'],
        'daysFromDetection': opts['daysFromDetection'],
        'skipCount': opts['skipCount'],
        'detectionDate__gte': opts['detectionDateGte'],
        'detectionDate__gt': opts['detectionDateGt'],
        'skip': opts['skip'],
        'detectionDate__lte': opts['detectionDateLte'],
        'detectionDate__between': opts['detectionDateBetween'],
        'countOnly': opts['countOnly'],
      };
      var collectionQueryParams = {
        'domains': {
          value: opts['domains'],
          collectionFormat: 'csv'
        },
        'application__contains': {
          value: opts['applicationContains'],
          collectionFormat: 'csv'
        },
        'vendors': {
          value: opts['vendors'],
          collectionFormat: 'csv'
        },
        'exploitedInTheWild': {
          value: opts['exploitedInTheWild'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'highestSeverities': {
          value: opts['highestSeverities'],
          collectionFormat: 'csv'
        },
        'exploitCodeMaturity': {
          value: opts['exploitCodeMaturity'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'cveId__contains': {
          value: opts['cveIdContains'],
          collectionFormat: 'csv'
        },
        'endpointName__contains': {
          value: opts['endpointNameContains'],
          collectionFormat: 'csv'
        },
        'remediationLevels': {
          value: opts['remediationLevels'],
          collectionFormat: 'csv'
        },
        'applicationTypes': {
          value: opts['applicationTypes'],
          collectionFormat: 'csv'
        },
        'endpointUuid__contains': {
          value: opts['endpointUuidContains'],
          collectionFormat: 'csv'
        },
        'endpointTypes': {
          value: opts['endpointTypes'],
          collectionFormat: 'csv'
        },
        'vendor__contains': {
          value: opts['vendorContains'],
          collectionFormat: 'csv'
        },
        'mostCommonStatuses': {
          value: opts['mostCommonStatuses'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21ApplicationManagementApplicationManagementSchemasRisksByApplicationsSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/application-management/risks/applications', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiApplicationManagementRisksCvesExportCsvGet operation.
     * @callback module:api/ApplicationManagementApi~webApiApplicationManagementRisksCvesExportCsvGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Application CVE Data Export
     * Export CVE data to CSV.
     * @param {Object} opts Optional parameters
     * @param {Date} opts.publishedDateGt CVE published date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<module:model/String>} opts.exploitedInTheWild Included exploited in the wild values. Available with Ranger Insights. Example: \"EXPLOITED_UNKNOWN,YES\".
     * @param {Date} opts.publishedDateLte CVE published date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.severities Included severities. Example: \"CRITICAL,HIGH\".
     * @param {Date} opts.publishedDateLt CVE published date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<module:model/String>} opts.exploitCodeMaturity Included exploit code maturity values. Available with Ranger Insights. Example: \"FUNCTIONAL,HIGH\".
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {String} opts.publishedDateBetween Date range for CVE publish date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.applicationIds Included application versions by id
     * @param {Array.<String>} opts.cveIdContains Free-text filter by CVE id (supports multiple values). Example: \"CVE-1234-5678\".
     * @param {Array.<module:model/String>} opts.remediationLevels Included remediation level values. Available with Ranger Insights. Example: \"OFFICIAL_FIX,TEMPORARY_FIX\".
     * @param {String} opts.applicationName Application name
     * @param {Array.<module:model/String>} opts.reportConfidence Included report confidence values. Available with Ranger Insights. Example: \"REASONABLE,CONFIRMED\".
     * @param {Array.<module:model/String>} opts.analystVerdict Include Default(not edited)/ False Positives / Added CVEs for Vulnerabilities. Example: \"Default,False Positive,Added CVE\".
     * @param {Date} opts.publishedDateGte CVE published date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.applicationVendor Application vendor
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.applicationVersions Included application versions
     * @param {module:api/ApplicationManagementApi~webApiApplicationManagementRisksCvesExportCsvGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiApplicationManagementRisksCvesExportCsvGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'publishedDate__gt': opts['publishedDateGt'],
        'publishedDate__lte': opts['publishedDateLte'],
        'publishedDate__lt': opts['publishedDateLt'],
        'publishedDate__between': opts['publishedDateBetween'],
        'applicationName': opts['applicationName'],
        'publishedDate__gte': opts['publishedDateGte'],
        'applicationVendor': opts['applicationVendor'],
      };
      var collectionQueryParams = {
        'exploitedInTheWild': {
          value: opts['exploitedInTheWild'],
          collectionFormat: 'csv'
        },
        'severities': {
          value: opts['severities'],
          collectionFormat: 'csv'
        },
        'exploitCodeMaturity': {
          value: opts['exploitCodeMaturity'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'applicationIds': {
          value: opts['applicationIds'],
          collectionFormat: 'csv'
        },
        'cveId__contains': {
          value: opts['cveIdContains'],
          collectionFormat: 'csv'
        },
        'remediationLevels': {
          value: opts['remediationLevels'],
          collectionFormat: 'csv'
        },
        'reportConfidence': {
          value: opts['reportConfidence'],
          collectionFormat: 'csv'
        },
        'analystVerdict': {
          value: opts['analystVerdict'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'applicationVersions': {
          value: opts['applicationVersions'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/application-management/risks/cves/export/csv', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiApplicationManagementRisksCvesGet operation.
     * @callback module:api/ApplicationManagementApi~webApiApplicationManagementRisksCvesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21ApplicationManagementApplicationManagementSchemasRiskyCVEsSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Application CVEs
     * Get CVE data for a specific application.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.sortBy The column to sort the results by. Example: \"id\". (default to null)
     * @param {Number} opts.limit Limit number of returned items (1-1000). Example: \"10\". (default to 10)
     * @param {String} opts.cursor Cursor position returned by the last request. Use to iterate over more than 1000 items. Example: \"YWdlbnRfaWQ6NTgwMjkzODE=\". (default to null)
     * @param {Date} opts.publishedDateGt CVE published date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<module:model/String>} opts.exploitedInTheWild Included exploited in the wild values. Available with Ranger Insights. Example: \"EXPLOITED_UNKNOWN,YES\".
     * @param {Date} opts.publishedDateLte CVE published date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.severities Included severities. Example: \"CRITICAL,HIGH\".
     * @param {module:model/String} opts.sortOrder Sort direction. Example: \"asc\". (default to null)
     * @param {Date} opts.publishedDateLt CVE published date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<module:model/String>} opts.exploitCodeMaturity Included exploit code maturity values. Available with Ranger Insights. Example: \"FUNCTIONAL,HIGH\".
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {String} opts.publishedDateBetween Date range for CVE publish date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {Boolean} opts.skipCount If true, total number of items will not be calculated, which speeds up execution time. (default to null)
     * @param {Array.<String>} opts.applicationIds Included application versions by id
     * @param {Array.<String>} opts.cveIdContains Free-text filter by CVE id (supports multiple values). Example: \"CVE-1234-5678\".
     * @param {Number} opts.skip Skip first number of items (0-1000). To iterate over more than 1000 items,  use \"cursor\". Example: \"150\".
     * @param {Boolean} opts.countOnly If true, only total number of items will be returned, without any of the actual objects. (default to false)
     * @param {Array.<module:model/String>} opts.remediationLevels Included remediation level values. Available with Ranger Insights. Example: \"OFFICIAL_FIX,TEMPORARY_FIX\".
     * @param {String} opts.applicationName Application name
     * @param {Array.<module:model/String>} opts.reportConfidence Included report confidence values. Available with Ranger Insights. Example: \"REASONABLE,CONFIRMED\".
     * @param {Array.<module:model/String>} opts.analystVerdict Include Default(not edited)/ False Positives / Added CVEs for Vulnerabilities. Example: \"Default,False Positive,Added CVE\".
     * @param {Date} opts.publishedDateGte CVE published date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.applicationVendor Application vendor
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.applicationVersions Included application versions
     * @param {module:api/ApplicationManagementApi~webApiApplicationManagementRisksCvesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21ApplicationManagementApplicationManagementSchemasRiskyCVEsSchemaMany200}
     */
    this.webApiApplicationManagementRisksCvesGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'sortBy': opts['sortBy'],
        'limit': opts['limit'],
        'cursor': opts['cursor'],
        'publishedDate__gt': opts['publishedDateGt'],
        'publishedDate__lte': opts['publishedDateLte'],
        'sortOrder': opts['sortOrder'],
        'publishedDate__lt': opts['publishedDateLt'],
        'publishedDate__between': opts['publishedDateBetween'],
        'skipCount': opts['skipCount'],
        'skip': opts['skip'],
        'countOnly': opts['countOnly'],
        'applicationName': opts['applicationName'],
        'publishedDate__gte': opts['publishedDateGte'],
        'applicationVendor': opts['applicationVendor'],
      };
      var collectionQueryParams = {
        'exploitedInTheWild': {
          value: opts['exploitedInTheWild'],
          collectionFormat: 'csv'
        },
        'severities': {
          value: opts['severities'],
          collectionFormat: 'csv'
        },
        'exploitCodeMaturity': {
          value: opts['exploitCodeMaturity'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'applicationIds': {
          value: opts['applicationIds'],
          collectionFormat: 'csv'
        },
        'cveId__contains': {
          value: opts['cveIdContains'],
          collectionFormat: 'csv'
        },
        'remediationLevels': {
          value: opts['remediationLevels'],
          collectionFormat: 'csv'
        },
        'reportConfidence': {
          value: opts['reportConfidence'],
          collectionFormat: 'csv'
        },
        'analystVerdict': {
          value: opts['analystVerdict'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'applicationVersions': {
          value: opts['applicationVersions'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21ApplicationManagementApplicationManagementSchemasRiskyCVEsSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/application-management/risks/cves', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiApplicationManagementRisksEndpointsExportCsvGet operation.
     * @callback module:api/ApplicationManagementApi~webApiApplicationManagementRisksEndpointsExportCsvGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Risk Endpoint Data Export
     * Export endpoint data to CSV.
     * @param {Object} opts Optional parameters
     * @param {Date} opts.detectionDateLt Application detection date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.domains Included endpoint domains
     * @param {Array.<String>} opts.statusMessageContains Free-text filter by status message (supports multiple values). Available with Ranger Insights. Example: \"assigned to john,top priority\".
     * @param {Array.<String>} opts.statuses Included statuses. Available with Ranger Insights.
     * @param {Array.<String>} opts.osTypes Included OS types
     * @param {Date} opts.lastScanDateLt Last scan date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.lastScanDateBetween Date range for last scan date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<String>} opts.osVersions Included OS versions
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {Date} opts.lastScanDateLte Last scan date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {Number} opts.daysFromDetection Days from application detection, e.g. 12 days or more. Example: \"12\".
     * @param {Array.<String>} opts.applicationIds Included application versions by id
     * @param {Date} opts.detectionDateGte Application detection date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.endpointNameContains Free-text filter by endpoint name (supports multiple values). Example: \"Office,Test\".
     * @param {Date} opts.lastScanDateGt Last scan date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.ticketIdContains Free-text filter by ticket id. Available with Ranger Insights when using ticket integration. Example: \"ABC-123,ABCD-100\".
     * @param {Date} opts.detectionDateGt Application detection date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.detectionDateLte Application detection date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.daysToMitigationBetween Date range for days left to mitigation. Available with Ranger Insights when using ticket integration. Example: \"1-30\".
     * @param {String} opts.detectionDateBetween Date range for application detection date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<String>} opts.domainContains Free-text filter by domain (supports multiple values). Example: \"mybusiness,workgroup\".
     * @param {String} opts.applicationName Application name
     * @param {Array.<String>} opts.endpointUuidContains Free-text filter by endpoint uuid (supports multiple values)
     * @param {Array.<String>} opts.endpointTypes Included endpoint types
     * @param {Array.<String>} opts.endpointIdContains Free-text filter by endpoint id (supports multiple values)
     * @param {String} opts.applicationVendor Application vendor
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {Date} opts.lastScanDateGte Last scan date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<module:model/String>} opts.lastScanResults Included last scan results. Example: \"Succeeded\".
     * @param {Array.<String>} opts.applicationVersions Included application versions
     * @param {module:api/ApplicationManagementApi~webApiApplicationManagementRisksEndpointsExportCsvGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiApplicationManagementRisksEndpointsExportCsvGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'detectionDate__lt': opts['detectionDateLt'],
        'lastScanDate__lt': opts['lastScanDateLt'],
        'lastScanDate__between': opts['lastScanDateBetween'],
        'lastScanDate__lte': opts['lastScanDateLte'],
        'daysFromDetection': opts['daysFromDetection'],
        'detectionDate__gte': opts['detectionDateGte'],
        'lastScanDate__gt': opts['lastScanDateGt'],
        'detectionDate__gt': opts['detectionDateGt'],
        'detectionDate__lte': opts['detectionDateLte'],
        'daysToMitigation__between': opts['daysToMitigationBetween'],
        'detectionDate__between': opts['detectionDateBetween'],
        'applicationName': opts['applicationName'],
        'applicationVendor': opts['applicationVendor'],
        'lastScanDate__gte': opts['lastScanDateGte'],
      };
      var collectionQueryParams = {
        'domains': {
          value: opts['domains'],
          collectionFormat: 'csv'
        },
        'statusMessage__contains': {
          value: opts['statusMessageContains'],
          collectionFormat: 'csv'
        },
        'statuses': {
          value: opts['statuses'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'osVersions': {
          value: opts['osVersions'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'applicationIds': {
          value: opts['applicationIds'],
          collectionFormat: 'csv'
        },
        'endpointName__contains': {
          value: opts['endpointNameContains'],
          collectionFormat: 'csv'
        },
        'ticketId__contains': {
          value: opts['ticketIdContains'],
          collectionFormat: 'csv'
        },
        'domain__contains': {
          value: opts['domainContains'],
          collectionFormat: 'csv'
        },
        'endpointUuid__contains': {
          value: opts['endpointUuidContains'],
          collectionFormat: 'csv'
        },
        'endpointTypes': {
          value: opts['endpointTypes'],
          collectionFormat: 'csv'
        },
        'endpointId__contains': {
          value: opts['endpointIdContains'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'lastScanResults': {
          value: opts['lastScanResults'],
          collectionFormat: 'csv'
        },
        'applicationVersions': {
          value: opts['applicationVersions'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/application-management/risks/endpoints/export/csv', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiApplicationManagementRisksEndpointsGet operation.
     * @callback module:api/ApplicationManagementApi~webApiApplicationManagementRisksEndpointsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21ApplicationManagementApplicationManagementSchemasRiskyEndpointsSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Endpoints For Vulnerable App
     * Get a list of all endpoints installed with a specific application that contains vulnerabilities.
     * @param {Object} opts Optional parameters
     * @param {Date} opts.detectionDateLt Application detection date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {module:model/String} opts.sortBy The column to sort the results by. Example: \"id\". (default to null)
     * @param {Array.<String>} opts.domains Included endpoint domains
     * @param {Number} opts.limit Limit number of returned items (1-1000). Example: \"10\". (default to 10)
     * @param {Array.<String>} opts.statusMessageContains Free-text filter by status message (supports multiple values). Available with Ranger Insights. Example: \"assigned to john,top priority\".
     * @param {String} opts.cursor Cursor position returned by the last request. Use to iterate over more than 1000 items. Example: \"YWdlbnRfaWQ6NTgwMjkzODE=\". (default to null)
     * @param {Array.<String>} opts.statuses Included statuses. Available with Ranger Insights.
     * @param {Array.<String>} opts.osTypes Included OS types
     * @param {Date} opts.lastScanDateLt Last scan date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.lastScanDateBetween Date range for last scan date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {module:model/String} opts.sortOrder Sort direction. Example: \"asc\". (default to null)
     * @param {Array.<String>} opts.osVersions Included OS versions
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {Date} opts.lastScanDateLte Last scan date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {Number} opts.daysFromDetection Days from application detection, e.g. 12 days or more. Example: \"12\".
     * @param {Boolean} opts.skipCount If true, total number of items will not be calculated, which speeds up execution time. (default to null)
     * @param {Array.<String>} opts.applicationIds Included application versions by id
     * @param {Date} opts.detectionDateGte Application detection date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.endpointNameContains Free-text filter by endpoint name (supports multiple values). Example: \"Office,Test\".
     * @param {Date} opts.lastScanDateGt Last scan date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.ticketIdContains Free-text filter by ticket id. Available with Ranger Insights when using ticket integration. Example: \"ABC-123,ABCD-100\".
     * @param {Date} opts.detectionDateGt Application detection date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Number} opts.skip Skip first number of items (0-1000). To iterate over more than 1000 items,  use \"cursor\". Example: \"150\".
     * @param {Date} opts.detectionDateLte Application detection date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.daysToMitigationBetween Date range for days left to mitigation. Available with Ranger Insights when using ticket integration. Example: \"1-30\".
     * @param {String} opts.detectionDateBetween Date range for application detection date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<String>} opts.domainContains Free-text filter by domain (supports multiple values). Example: \"mybusiness,workgroup\".
     * @param {Boolean} opts.countOnly If true, only total number of items will be returned, without any of the actual objects. (default to false)
     * @param {String} opts.applicationName Application name
     * @param {Array.<String>} opts.endpointUuidContains Free-text filter by endpoint uuid (supports multiple values)
     * @param {Array.<String>} opts.endpointTypes Included endpoint types
     * @param {Array.<String>} opts.endpointIdContains Free-text filter by endpoint id (supports multiple values)
     * @param {String} opts.applicationVendor Application vendor
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {Date} opts.lastScanDateGte Last scan date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<module:model/String>} opts.lastScanResults Included last scan results. Example: \"Succeeded\".
     * @param {Array.<String>} opts.applicationVersions Included application versions
     * @param {module:api/ApplicationManagementApi~webApiApplicationManagementRisksEndpointsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21ApplicationManagementApplicationManagementSchemasRiskyEndpointsSchemaMany200}
     */
    this.webApiApplicationManagementRisksEndpointsGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'detectionDate__lt': opts['detectionDateLt'],
        'sortBy': opts['sortBy'],
        'limit': opts['limit'],
        'cursor': opts['cursor'],
        'lastScanDate__lt': opts['lastScanDateLt'],
        'lastScanDate__between': opts['lastScanDateBetween'],
        'sortOrder': opts['sortOrder'],
        'lastScanDate__lte': opts['lastScanDateLte'],
        'daysFromDetection': opts['daysFromDetection'],
        'skipCount': opts['skipCount'],
        'detectionDate__gte': opts['detectionDateGte'],
        'lastScanDate__gt': opts['lastScanDateGt'],
        'detectionDate__gt': opts['detectionDateGt'],
        'skip': opts['skip'],
        'detectionDate__lte': opts['detectionDateLte'],
        'daysToMitigation__between': opts['daysToMitigationBetween'],
        'detectionDate__between': opts['detectionDateBetween'],
        'countOnly': opts['countOnly'],
        'applicationName': opts['applicationName'],
        'applicationVendor': opts['applicationVendor'],
        'lastScanDate__gte': opts['lastScanDateGte'],
      };
      var collectionQueryParams = {
        'domains': {
          value: opts['domains'],
          collectionFormat: 'csv'
        },
        'statusMessage__contains': {
          value: opts['statusMessageContains'],
          collectionFormat: 'csv'
        },
        'statuses': {
          value: opts['statuses'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'osVersions': {
          value: opts['osVersions'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'applicationIds': {
          value: opts['applicationIds'],
          collectionFormat: 'csv'
        },
        'endpointName__contains': {
          value: opts['endpointNameContains'],
          collectionFormat: 'csv'
        },
        'ticketId__contains': {
          value: opts['ticketIdContains'],
          collectionFormat: 'csv'
        },
        'domain__contains': {
          value: opts['domainContains'],
          collectionFormat: 'csv'
        },
        'endpointUuid__contains': {
          value: opts['endpointUuidContains'],
          collectionFormat: 'csv'
        },
        'endpointTypes': {
          value: opts['endpointTypes'],
          collectionFormat: 'csv'
        },
        'endpointId__contains': {
          value: opts['endpointIdContains'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'lastScanResults': {
          value: opts['lastScanResults'],
          collectionFormat: 'csv'
        },
        'applicationVersions': {
          value: opts['applicationVersions'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21ApplicationManagementApplicationManagementSchemasRiskyEndpointsSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/application-management/risks/endpoints', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiApplicationManagementRisksExportCsvGet operation.
     * @callback module:api/ApplicationManagementApi~webApiApplicationManagementRisksExportCsvGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Risks Data Export
     * Export risks data to CSV.
     * @param {Object} opts Optional parameters
     * @param {Date} opts.detectionDateLt CVE detection date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.riskUpdatedDateGt Significant CVE updates after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.domains Included network domains. Example: \"mybusiness,workgroup\".
     * @param {Array.<module:model/String>} opts.analystVerdict Include Default(not edited)/ False Positives / Added CVEs for Vulnerabilities. Example: \"Default,False Positive,Added CVE\".
     * @param {Date} opts.riskUpdatedDateGte Significant CVE updates after or at this timestamp. Recommended for fetching delta-changes. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.applicationNames Included application names. Example: \"Office 1.1,Test\".
     * @param {Date} opts.publishedDateGt CVE published date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.applicationVendorContains Free-text filter by vendor (supports multiple values). Example: \"Microsoft,Apple\".
     * @param {Array.<String>} opts.applicationContains Free-text filter by application name and version (supports multiple values). Example: \"Office 1.1,Test\".
     * @param {Boolean} opts.includeRemovals Include also removed CVEs in the results
     * @param {Array.<String>} opts.exploitedInTheWild Included exploited in the wild values. Available for VLN SKU. Example: \"EXPLOITED_UNKNOWN,YES\".
     * @param {Array.<module:model/String>} opts.mitigationStatus Filters by the application's mitigation status values.Available for VLN SKU. Example: \"Not mitigated,To be patched,On hold\".
     * @param {Array.<String>} opts.osTypes Included OS types
     * @param {Array.<String>} opts.severities Included severities. Example: \"CRITICAL,HIGH\".
     * @param {Date} opts.publishedDateLte CVE published date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.vendors Included vendors. Example: \"Microsoft,Apple\".
     * @param {Array.<String>} opts.osVersions Included OS versions
     * @param {Date} opts.publishedDateLt CVE published date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.exploitCodeMaturity Included exploit code maturity values. Available for VLN SKU. Example: \"FUNCTIONAL,HIGH\".
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {String} opts.publishedDateBetween Date range for CVE publish date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {Number} opts.daysFromCveDetection Days from CVE detection, e.g. 12 days or more. Example: \"12\".
     * @param {Date} opts.detectionDateGte CVE detection date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.endpointNameContains Free-text filter by endpoint name (supports multiple values). Example: \"Office,Test\".
     * @param {Array.<String>} opts.cveIdContains Free-text filter by CVE id (supports multiple values). Example: \"CVE-1234-5678\".
     * @param {Date} opts.detectionDateGt CVE detection date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.detectionDateLte CVE detection date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.detectionDateBetween Date range for CVE detection date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Date} opts.riskUpdatedDateLte Significant CVE updates before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.domainContains Free-text filter by domain (supports multiple values). Example: \"mybusiness,workgroup\".
     * @param {Array.<String>} opts.remediationLevels Included remediation level values. Available for VLN SKU. Example: \"OFFICIAL_FIX,TEMPORARY_FIX\".
     * @param {String} opts.riskUpdatedDateBetween Significant CVE updates within this date range(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<String>} opts.endpointTypes Included endpoint types
     * @param {Array.<String>} opts.reportConfidence Included report confidence values. Available for VLN SKU. Example: \"REASONABLE,CONFIRMED\".
     * @param {Date} opts.publishedDateGte CVE published date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.riskUpdatedDateLt Significant CVE updates before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {String} opts.riskScoreBetween Risk score (inclusive). Available for VLN SKU. Example: \"5-8.9\".
     * @param {Array.<module:model/String>} opts.lastScanResults Included last scan results. Example: \"Succeeded\".
     * @param {module:api/ApplicationManagementApi~webApiApplicationManagementRisksExportCsvGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiApplicationManagementRisksExportCsvGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'detectionDate__lt': opts['detectionDateLt'],
        'riskUpdatedDate__gt': opts['riskUpdatedDateGt'],
        'riskUpdatedDate__gte': opts['riskUpdatedDateGte'],
        'publishedDate__gt': opts['publishedDateGt'],
        'includeRemovals': opts['includeRemovals'],
        'publishedDate__lte': opts['publishedDateLte'],
        'publishedDate__lt': opts['publishedDateLt'],
        'publishedDate__between': opts['publishedDateBetween'],
        'daysFromCveDetection': opts['daysFromCveDetection'],
        'detectionDate__gte': opts['detectionDateGte'],
        'detectionDate__gt': opts['detectionDateGt'],
        'detectionDate__lte': opts['detectionDateLte'],
        'detectionDate__between': opts['detectionDateBetween'],
        'riskUpdatedDate__lte': opts['riskUpdatedDateLte'],
        'riskUpdatedDate__between': opts['riskUpdatedDateBetween'],
        'publishedDate__gte': opts['publishedDateGte'],
        'riskUpdatedDate__lt': opts['riskUpdatedDateLt'],
        'riskScore__between': opts['riskScoreBetween'],
      };
      var collectionQueryParams = {
        'domains': {
          value: opts['domains'],
          collectionFormat: 'csv'
        },
        'analystVerdict': {
          value: opts['analystVerdict'],
          collectionFormat: 'csv'
        },
        'applicationNames': {
          value: opts['applicationNames'],
          collectionFormat: 'csv'
        },
        'applicationVendor__contains': {
          value: opts['applicationVendorContains'],
          collectionFormat: 'csv'
        },
        'application__contains': {
          value: opts['applicationContains'],
          collectionFormat: 'csv'
        },
        'exploitedInTheWild': {
          value: opts['exploitedInTheWild'],
          collectionFormat: 'csv'
        },
        'mitigationStatus': {
          value: opts['mitigationStatus'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'severities': {
          value: opts['severities'],
          collectionFormat: 'csv'
        },
        'vendors': {
          value: opts['vendors'],
          collectionFormat: 'csv'
        },
        'osVersions': {
          value: opts['osVersions'],
          collectionFormat: 'csv'
        },
        'exploitCodeMaturity': {
          value: opts['exploitCodeMaturity'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'endpointName__contains': {
          value: opts['endpointNameContains'],
          collectionFormat: 'csv'
        },
        'cveId__contains': {
          value: opts['cveIdContains'],
          collectionFormat: 'csv'
        },
        'domain__contains': {
          value: opts['domainContains'],
          collectionFormat: 'csv'
        },
        'remediationLevels': {
          value: opts['remediationLevels'],
          collectionFormat: 'csv'
        },
        'endpointTypes': {
          value: opts['endpointTypes'],
          collectionFormat: 'csv'
        },
        'reportConfidence': {
          value: opts['reportConfidence'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'lastScanResults': {
          value: opts['lastScanResults'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/application-management/risks/export/csv', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiApplicationManagementRisksGet operation.
     * @callback module:api/ApplicationManagementApi~webApiApplicationManagementRisksGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21ApplicationManagementApplicationManagementSchemasBaseRisksCveSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get CVE data
     * Get the CVE vulnerability data for each CVE.
     * @param {Object} opts Optional parameters
     * @param {Date} opts.detectionDateLt CVE detection date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.riskUpdatedDateGt Significant CVE updates after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {module:model/String} opts.sortBy The column to sort the results by. Example: \"id\". (default to null)
     * @param {Array.<String>} opts.domains Included network domains. Example: \"mybusiness,workgroup\".
     * @param {Array.<module:model/String>} opts.analystVerdict Include Default(not edited)/ False Positives / Added CVEs for Vulnerabilities. Example: \"Default,False Positive,Added CVE\".
     * @param {Number} opts.limit Limit number of returned items (1-1000). Example: \"10\". (default to 10)
     * @param {Date} opts.riskUpdatedDateGte Significant CVE updates after or at this timestamp. Recommended for fetching delta-changes. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.applicationNames Included application names. Example: \"Office 1.1,Test\".
     * @param {String} opts.cursor Cursor position returned by the last request. Use to iterate over more than 1000 items. Example: \"YWdlbnRfaWQ6NTgwMjkzODE=\". (default to null)
     * @param {Date} opts.publishedDateGt CVE published date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.applicationVendorContains Free-text filter by vendor (supports multiple values). Example: \"Microsoft,Apple\".
     * @param {Array.<String>} opts.applicationContains Free-text filter by application name and version (supports multiple values). Example: \"Office 1.1,Test\".
     * @param {Boolean} opts.includeRemovals Include also removed CVEs in the results
     * @param {Array.<String>} opts.exploitedInTheWild Included exploited in the wild values. Available for VLN SKU. Example: \"EXPLOITED_UNKNOWN,YES\".
     * @param {Array.<module:model/String>} opts.mitigationStatus Filters by the application's mitigation status values.Available for VLN SKU. Example: \"Not mitigated,To be patched,On hold\".
     * @param {Array.<String>} opts.osTypes Included OS types
     * @param {Array.<String>} opts.severities Included severities. Example: \"CRITICAL,HIGH\".
     * @param {Date} opts.publishedDateLte CVE published date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {module:model/String} opts.sortOrder Sort direction. Example: \"asc\". (default to null)
     * @param {Array.<String>} opts.vendors Included vendors. Example: \"Microsoft,Apple\".
     * @param {Array.<String>} opts.osVersions Included OS versions
     * @param {Date} opts.publishedDateLt CVE published date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.exploitCodeMaturity Included exploit code maturity values. Available for VLN SKU. Example: \"FUNCTIONAL,HIGH\".
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {String} opts.publishedDateBetween Date range for CVE publish date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {Number} opts.daysFromCveDetection Days from CVE detection, e.g. 12 days or more. Example: \"12\".
     * @param {Boolean} opts.skipCount If true, total number of items will not be calculated, which speeds up execution time. (default to null)
     * @param {Date} opts.detectionDateGte CVE detection date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.cveIdContains Free-text filter by CVE id (supports multiple values). Example: \"CVE-1234-5678\".
     * @param {Array.<String>} opts.endpointNameContains Free-text filter by endpoint name (supports multiple values). Example: \"Office,Test\".
     * @param {Date} opts.detectionDateGt CVE detection date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Number} opts.skip Skip first number of items (0-1000). To iterate over more than 1000 items,  use \"cursor\". Example: \"150\".
     * @param {Date} opts.detectionDateLte CVE detection date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.detectionDateBetween Date range for CVE detection date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Date} opts.riskUpdatedDateLte Significant CVE updates before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Boolean} opts.countOnly If true, only total number of items will be returned, without any of the actual objects. (default to false)
     * @param {Array.<String>} opts.domainContains Free-text filter by domain (supports multiple values). Example: \"mybusiness,workgroup\".
     * @param {Array.<String>} opts.remediationLevels Included remediation level values. Available for VLN SKU. Example: \"OFFICIAL_FIX,TEMPORARY_FIX\".
     * @param {String} opts.riskUpdatedDateBetween Significant CVE updates within this date range(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<String>} opts.endpointTypes Included endpoint types
     * @param {Array.<String>} opts.reportConfidence Included report confidence values. Available for VLN SKU. Example: \"REASONABLE,CONFIRMED\".
     * @param {Date} opts.publishedDateGte CVE published date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.riskUpdatedDateLt Significant CVE updates before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {String} opts.riskScoreBetween Risk score (inclusive). Available for VLN SKU. Example: \"5-8.9\".
     * @param {Array.<module:model/String>} opts.lastScanResults Included last scan results. Example: \"Succeeded\".
     * @param {module:api/ApplicationManagementApi~webApiApplicationManagementRisksGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21ApplicationManagementApplicationManagementSchemasBaseRisksCveSchemaMany200}
     */
    this.webApiApplicationManagementRisksGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'detectionDate__lt': opts['detectionDateLt'],
        'riskUpdatedDate__gt': opts['riskUpdatedDateGt'],
        'sortBy': opts['sortBy'],
        'limit': opts['limit'],
        'riskUpdatedDate__gte': opts['riskUpdatedDateGte'],
        'cursor': opts['cursor'],
        'publishedDate__gt': opts['publishedDateGt'],
        'includeRemovals': opts['includeRemovals'],
        'publishedDate__lte': opts['publishedDateLte'],
        'sortOrder': opts['sortOrder'],
        'publishedDate__lt': opts['publishedDateLt'],
        'publishedDate__between': opts['publishedDateBetween'],
        'daysFromCveDetection': opts['daysFromCveDetection'],
        'skipCount': opts['skipCount'],
        'detectionDate__gte': opts['detectionDateGte'],
        'detectionDate__gt': opts['detectionDateGt'],
        'skip': opts['skip'],
        'detectionDate__lte': opts['detectionDateLte'],
        'detectionDate__between': opts['detectionDateBetween'],
        'riskUpdatedDate__lte': opts['riskUpdatedDateLte'],
        'countOnly': opts['countOnly'],
        'riskUpdatedDate__between': opts['riskUpdatedDateBetween'],
        'publishedDate__gte': opts['publishedDateGte'],
        'riskUpdatedDate__lt': opts['riskUpdatedDateLt'],
        'riskScore__between': opts['riskScoreBetween'],
      };
      var collectionQueryParams = {
        'domains': {
          value: opts['domains'],
          collectionFormat: 'csv'
        },
        'analystVerdict': {
          value: opts['analystVerdict'],
          collectionFormat: 'csv'
        },
        'applicationNames': {
          value: opts['applicationNames'],
          collectionFormat: 'csv'
        },
        'applicationVendor__contains': {
          value: opts['applicationVendorContains'],
          collectionFormat: 'csv'
        },
        'application__contains': {
          value: opts['applicationContains'],
          collectionFormat: 'csv'
        },
        'exploitedInTheWild': {
          value: opts['exploitedInTheWild'],
          collectionFormat: 'csv'
        },
        'mitigationStatus': {
          value: opts['mitigationStatus'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'severities': {
          value: opts['severities'],
          collectionFormat: 'csv'
        },
        'vendors': {
          value: opts['vendors'],
          collectionFormat: 'csv'
        },
        'osVersions': {
          value: opts['osVersions'],
          collectionFormat: 'csv'
        },
        'exploitCodeMaturity': {
          value: opts['exploitCodeMaturity'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'cveId__contains': {
          value: opts['cveIdContains'],
          collectionFormat: 'csv'
        },
        'endpointName__contains': {
          value: opts['endpointNameContains'],
          collectionFormat: 'csv'
        },
        'domain__contains': {
          value: opts['domainContains'],
          collectionFormat: 'csv'
        },
        'remediationLevels': {
          value: opts['remediationLevels'],
          collectionFormat: 'csv'
        },
        'endpointTypes': {
          value: opts['endpointTypes'],
          collectionFormat: 'csv'
        },
        'reportConfidence': {
          value: opts['reportConfidence'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'lastScanResults': {
          value: opts['lastScanResults'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21ApplicationManagementApplicationManagementSchemasBaseRisksCveSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/application-management/risks', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiApplicationManagementScanPost operation.
     * @callback module:api/ApplicationManagementApi~webApiApplicationManagementScanPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SuccessResponseSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Initiate scan
     * Initiate application vulnerability scan.
     * @param {Object} opts Optional parameters
     * @param {module:model/V21ApplicationManagementApplicationManagementSchemasScanPostSchema} opts.body 
     * @param {module:api/ApplicationManagementApi~webApiApplicationManagementScanPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SuccessResponseSchema200}
     */
    this.webApiApplicationManagementScanPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SuccessResponseSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/application-management/scan', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiPrivateApplicationManagementInventoryApplicationsGet operation.
     * @callback module:api/ApplicationManagementApi~webApiPrivateApplicationManagementInventoryApplicationsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21ApplicationManagementApplicationManagementSchemasAgentApplicationsSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Endpoint Apps
     * Get the installed applications for a specific endpoint. <BR>To get the Agent ID, run \"agents\".
     * @param {Array.<String>} ids Agent ID list. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/ApplicationManagementApi~webApiPrivateApplicationManagementInventoryApplicationsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21ApplicationManagementApplicationManagementSchemasAgentApplicationsSchemaMany200}
     */
    this.webApiPrivateApplicationManagementInventoryApplicationsGet = function(ids, callback) {
      var postBody = null;

      // verify the required parameter 'ids' is set
      if (ids === undefined || ids === null) {
        throw new Error("Missing the required parameter 'ids' when calling webApiPrivateApplicationManagementInventoryApplicationsGet");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
        'ids': {
          value: ids,
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21ApplicationManagementApplicationManagementSchemasAgentApplicationsSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/private/application-management/inventory/applications', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiPrivateApplicationManagementInventoryEndpointsFiltersAutocompleteGet operation.
     * @callback module:api/ApplicationManagementApi~webApiPrivateApplicationManagementInventoryEndpointsFiltersAutocompleteGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AutoCompleteResponseSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Auto Complete
     * Given an input text, returns auto-complete suggestions that match the text for the selected filter field.
     * @param {String} applicationName Name
     * @param {module:model/String} key Search field key. Example: \"endpointName__contains\".
     * @param {String} applicationVendor Vendor
     * @param {String} text Search term text
     * @param {Object} opts Optional parameters
     * @param {Date} opts.detectionDateLt Application detection date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.versions Included application versions
     * @param {Number} opts.limit Limit number of returned items. Example: \"5\".
     * @param {Array.<String>} opts.osArchitectures Included OS architectures
     * @param {Array.<String>} opts.osTypes Included OS types
     * @param {Array.<String>} opts.osVersions Included OS versions
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.endpointNameContains Free-text filter by endpoint name (supports multiple values). Example: \"Office,Test\".
     * @param {Date} opts.detectionDateGte Application detection date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.detectionDateGt Application detection date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.detectionDateLte Application detection date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.detectionDateBetween Date range for application detection date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<String>} opts.endpointUuidContains Free-text filter by endpoint uuid (supports multiple values)
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {module:api/ApplicationManagementApi~webApiPrivateApplicationManagementInventoryEndpointsFiltersAutocompleteGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AutoCompleteResponseSchema200}
     */
    this.webApiPrivateApplicationManagementInventoryEndpointsFiltersAutocompleteGet = function(applicationName, key, applicationVendor, text, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'applicationName' is set
      if (applicationName === undefined || applicationName === null) {
        throw new Error("Missing the required parameter 'applicationName' when calling webApiPrivateApplicationManagementInventoryEndpointsFiltersAutocompleteGet");
      }

      // verify the required parameter 'key' is set
      if (key === undefined || key === null) {
        throw new Error("Missing the required parameter 'key' when calling webApiPrivateApplicationManagementInventoryEndpointsFiltersAutocompleteGet");
      }

      // verify the required parameter 'applicationVendor' is set
      if (applicationVendor === undefined || applicationVendor === null) {
        throw new Error("Missing the required parameter 'applicationVendor' when calling webApiPrivateApplicationManagementInventoryEndpointsFiltersAutocompleteGet");
      }

      // verify the required parameter 'text' is set
      if (text === undefined || text === null) {
        throw new Error("Missing the required parameter 'text' when calling webApiPrivateApplicationManagementInventoryEndpointsFiltersAutocompleteGet");
      }


      var pathParams = {
      };
      var queryParams = {
        'detectionDate__lt': opts['detectionDateLt'],
        'applicationName': applicationName,
        'key': key,
        'limit': opts['limit'],
        'applicationVendor': applicationVendor,
        'text': text,
        'detectionDate__gte': opts['detectionDateGte'],
        'detectionDate__gt': opts['detectionDateGt'],
        'detectionDate__lte': opts['detectionDateLte'],
        'detectionDate__between': opts['detectionDateBetween'],
      };
      var collectionQueryParams = {
        'versions': {
          value: opts['versions'],
          collectionFormat: 'csv'
        },
        'osArchitectures': {
          value: opts['osArchitectures'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'osVersions': {
          value: opts['osVersions'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'endpointName__contains': {
          value: opts['endpointNameContains'],
          collectionFormat: 'csv'
        },
        'endpointUuid__contains': {
          value: opts['endpointUuidContains'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = AutoCompleteResponseSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/private/application-management/inventory/endpoints/filters-autocomplete', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiPrivateApplicationManagementInventoryEndpointsFiltersCountGet operation.
     * @callback module:api/ApplicationManagementApi~webApiPrivateApplicationManagementInventoryEndpointsFiltersCountGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CountFiltersResponseSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Count Endpoints by Filters
     * Show a count of endpoints for each filter value.
     * @param {String} applicationName Name
     * @param {String} applicationVendor Vendor
     * @param {Object} opts Optional parameters
     * @param {Date} opts.detectionDateLt Application detection date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.versions Included application versions
     * @param {Array.<String>} opts.osArchitectures Included OS architectures
     * @param {Array.<String>} opts.osTypes Included OS types
     * @param {Array.<String>} opts.osVersions Included OS versions
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.endpointNameContains Free-text filter by endpoint name (supports multiple values). Example: \"Office,Test\".
     * @param {Date} opts.detectionDateGte Application detection date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.detectionDateGt Application detection date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.detectionDateLte Application detection date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.detectionDateBetween Date range for application detection date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<String>} opts.endpointUuidContains Free-text filter by endpoint uuid (supports multiple values)
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {module:api/ApplicationManagementApi~webApiPrivateApplicationManagementInventoryEndpointsFiltersCountGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CountFiltersResponseSchemaMany200}
     */
    this.webApiPrivateApplicationManagementInventoryEndpointsFiltersCountGet = function(applicationName, applicationVendor, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'applicationName' is set
      if (applicationName === undefined || applicationName === null) {
        throw new Error("Missing the required parameter 'applicationName' when calling webApiPrivateApplicationManagementInventoryEndpointsFiltersCountGet");
      }

      // verify the required parameter 'applicationVendor' is set
      if (applicationVendor === undefined || applicationVendor === null) {
        throw new Error("Missing the required parameter 'applicationVendor' when calling webApiPrivateApplicationManagementInventoryEndpointsFiltersCountGet");
      }


      var pathParams = {
      };
      var queryParams = {
        'detectionDate__lt': opts['detectionDateLt'],
        'applicationName': applicationName,
        'applicationVendor': applicationVendor,
        'detectionDate__gte': opts['detectionDateGte'],
        'detectionDate__gt': opts['detectionDateGt'],
        'detectionDate__lte': opts['detectionDateLte'],
        'detectionDate__between': opts['detectionDateBetween'],
      };
      var collectionQueryParams = {
        'versions': {
          value: opts['versions'],
          collectionFormat: 'csv'
        },
        'osArchitectures': {
          value: opts['osArchitectures'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'osVersions': {
          value: opts['osVersions'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'endpointName__contains': {
          value: opts['endpointNameContains'],
          collectionFormat: 'csv'
        },
        'endpointUuid__contains': {
          value: opts['endpointUuidContains'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = CountFiltersResponseSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/private/application-management/inventory/endpoints/filters-count', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiPrivateApplicationManagementInventoryEndpointsFreeTextFiltersGet operation.
     * @callback module:api/ApplicationManagementApi~webApiPrivateApplicationManagementInventoryEndpointsFreeTextFiltersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FreeTextFilterResponseSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Free-Text Filters
     * Get a metadata list of the available free-text filters.
     * @param {module:api/ApplicationManagementApi~webApiPrivateApplicationManagementInventoryEndpointsFreeTextFiltersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FreeTextFilterResponseSchemaMany200}
     */
    this.webApiPrivateApplicationManagementInventoryEndpointsFreeTextFiltersGet = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = FreeTextFilterResponseSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/private/application-management/inventory/endpoints/free-text-filters', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiPrivateApplicationManagementInventoryEndpointsGet operation.
     * @callback module:api/ApplicationManagementApi~webApiPrivateApplicationManagementInventoryEndpointsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21ApplicationManagementApplicationManagementSchemasApplicationInventoryEndpointsSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get App Inventory Endpoints
     * Get endpoint data for a specific application.
     * @param {String} applicationName Name
     * @param {String} applicationVendor Vendor
     * @param {Object} opts Optional parameters
     * @param {Date} opts.detectionDateLt Application detection date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {module:model/String} opts.sortBy The column to sort the results by. Example: \"id\". (default to null)
     * @param {Array.<String>} opts.versions Included application versions
     * @param {Number} opts.limit Limit number of returned items (1-1000). Example: \"10\". (default to 10)
     * @param {String} opts.cursor Cursor position returned by the last request. Use to iterate over more than 1000 items. Example: \"YWdlbnRfaWQ6NTgwMjkzODE=\". (default to null)
     * @param {Array.<String>} opts.osArchitectures Included OS architectures
     * @param {Array.<String>} opts.osTypes Included OS types
     * @param {module:model/String} opts.sortOrder Sort direction. Example: \"asc\". (default to null)
     * @param {Array.<String>} opts.osVersions Included OS versions
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.endpointNameContains Free-text filter by endpoint name (supports multiple values). Example: \"Office,Test\".
     * @param {Boolean} opts.skipCount If true, total number of items will not be calculated, which speeds up execution time. (default to null)
     * @param {Date} opts.detectionDateGte Application detection date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.detectionDateGt Application detection date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Number} opts.skip Skip first number of items (0-1000). To iterate over more than 1000 items,  use \"cursor\". Example: \"150\".
     * @param {Date} opts.detectionDateLte Application detection date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.detectionDateBetween Date range for application detection date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Boolean} opts.countOnly If true, only total number of items will be returned, without any of the actual objects. (default to false)
     * @param {Array.<String>} opts.endpointUuidContains Free-text filter by endpoint uuid (supports multiple values)
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {module:api/ApplicationManagementApi~webApiPrivateApplicationManagementInventoryEndpointsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21ApplicationManagementApplicationManagementSchemasApplicationInventoryEndpointsSchemaMany200}
     */
    this.webApiPrivateApplicationManagementInventoryEndpointsGet = function(applicationName, applicationVendor, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'applicationName' is set
      if (applicationName === undefined || applicationName === null) {
        throw new Error("Missing the required parameter 'applicationName' when calling webApiPrivateApplicationManagementInventoryEndpointsGet");
      }

      // verify the required parameter 'applicationVendor' is set
      if (applicationVendor === undefined || applicationVendor === null) {
        throw new Error("Missing the required parameter 'applicationVendor' when calling webApiPrivateApplicationManagementInventoryEndpointsGet");
      }


      var pathParams = {
      };
      var queryParams = {
        'detectionDate__lt': opts['detectionDateLt'],
        'sortBy': opts['sortBy'],
        'applicationName': applicationName,
        'limit': opts['limit'],
        'applicationVendor': applicationVendor,
        'cursor': opts['cursor'],
        'sortOrder': opts['sortOrder'],
        'skipCount': opts['skipCount'],
        'detectionDate__gte': opts['detectionDateGte'],
        'detectionDate__gt': opts['detectionDateGt'],
        'skip': opts['skip'],
        'detectionDate__lte': opts['detectionDateLte'],
        'detectionDate__between': opts['detectionDateBetween'],
        'countOnly': opts['countOnly'],
      };
      var collectionQueryParams = {
        'versions': {
          value: opts['versions'],
          collectionFormat: 'csv'
        },
        'osArchitectures': {
          value: opts['osArchitectures'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'osVersions': {
          value: opts['osVersions'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'endpointName__contains': {
          value: opts['endpointNameContains'],
          collectionFormat: 'csv'
        },
        'endpointUuid__contains': {
          value: opts['endpointUuidContains'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21ApplicationManagementApplicationManagementSchemasApplicationInventoryEndpointsSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/private/application-management/inventory/endpoints', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiPrivateApplicationManagementInventoryFiltersAutocompleteGet operation.
     * @callback module:api/ApplicationManagementApi~webApiPrivateApplicationManagementInventoryFiltersAutocompleteGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AutoCompleteResponseSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Auto Complete
     * Given an input text, returns auto-complete suggestions that match the text for the selected filter field.
     * @param {module:model/String} key Search field key. Example: \"endpointName__contains\".
     * @param {String} text Search term text
     * @param {Object} opts Optional parameters
     * @param {Number} opts.limit Limit number of returned items. Example: \"5\".
     * @param {Array.<String>} opts.osArchitectures Included OS architectures
     * @param {Array.<String>} opts.vendors Included vendors. Example: \"Microsoft,Apple\".
     * @param {Array.<String>} opts.osTypes Included OS types
     * @param {Array.<String>} opts.osVersions Included OS versions
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.endpointNameContains Free-text filter by endpoint name (supports multiple values). Example: \"Office,Test\".
     * @param {Array.<String>} opts.nameContains Free-text filter by application name (supports multiple values). Example: \"Office,Test\".
     * @param {Array.<String>} opts.osVersionContains Free-text filter by os version (supports multiple values). Example: \"Windows 7 ServicePack1\".
     * @param {Array.<String>} opts.endpointUuidContains Free-text filter by endpoint uuid (supports multiple values)
     * @param {Array.<String>} opts.vendorContains Free-text filter by vendor (supports multiple values). Example: \"Microsoft,Apple\".
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {module:api/ApplicationManagementApi~webApiPrivateApplicationManagementInventoryFiltersAutocompleteGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AutoCompleteResponseSchema200}
     */
    this.webApiPrivateApplicationManagementInventoryFiltersAutocompleteGet = function(key, text, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'key' is set
      if (key === undefined || key === null) {
        throw new Error("Missing the required parameter 'key' when calling webApiPrivateApplicationManagementInventoryFiltersAutocompleteGet");
      }

      // verify the required parameter 'text' is set
      if (text === undefined || text === null) {
        throw new Error("Missing the required parameter 'text' when calling webApiPrivateApplicationManagementInventoryFiltersAutocompleteGet");
      }


      var pathParams = {
      };
      var queryParams = {
        'key': key,
        'limit': opts['limit'],
        'text': text,
      };
      var collectionQueryParams = {
        'osArchitectures': {
          value: opts['osArchitectures'],
          collectionFormat: 'csv'
        },
        'vendors': {
          value: opts['vendors'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'osVersions': {
          value: opts['osVersions'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'endpointName__contains': {
          value: opts['endpointNameContains'],
          collectionFormat: 'csv'
        },
        'name__contains': {
          value: opts['nameContains'],
          collectionFormat: 'csv'
        },
        'osVersion__contains': {
          value: opts['osVersionContains'],
          collectionFormat: 'csv'
        },
        'endpointUuid__contains': {
          value: opts['endpointUuidContains'],
          collectionFormat: 'csv'
        },
        'vendor__contains': {
          value: opts['vendorContains'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = AutoCompleteResponseSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/private/application-management/inventory/filters-autocomplete', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiPrivateApplicationManagementInventoryFiltersCountGet operation.
     * @callback module:api/ApplicationManagementApi~webApiPrivateApplicationManagementInventoryFiltersCountGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CountFiltersResponseSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Count applications by filters
     * Show a count of applications for each filter value.
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.osArchitectures Included OS architectures
     * @param {Array.<String>} opts.vendors Included vendors. Example: \"Microsoft,Apple\".
     * @param {Array.<String>} opts.osTypes Included OS types
     * @param {Array.<String>} opts.osVersions Included OS versions
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.endpointNameContains Free-text filter by endpoint name (supports multiple values). Example: \"Office,Test\".
     * @param {Array.<String>} opts.nameContains Free-text filter by application name (supports multiple values). Example: \"Office,Test\".
     * @param {Array.<String>} opts.osVersionContains Free-text filter by os version (supports multiple values). Example: \"Windows 7 ServicePack1\".
     * @param {Array.<String>} opts.endpointUuidContains Free-text filter by endpoint uuid (supports multiple values)
     * @param {Array.<String>} opts.vendorContains Free-text filter by vendor (supports multiple values). Example: \"Microsoft,Apple\".
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {module:api/ApplicationManagementApi~webApiPrivateApplicationManagementInventoryFiltersCountGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CountFiltersResponseSchemaMany200}
     */
    this.webApiPrivateApplicationManagementInventoryFiltersCountGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
        'osArchitectures': {
          value: opts['osArchitectures'],
          collectionFormat: 'csv'
        },
        'vendors': {
          value: opts['vendors'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'osVersions': {
          value: opts['osVersions'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'endpointName__contains': {
          value: opts['endpointNameContains'],
          collectionFormat: 'csv'
        },
        'name__contains': {
          value: opts['nameContains'],
          collectionFormat: 'csv'
        },
        'osVersion__contains': {
          value: opts['osVersionContains'],
          collectionFormat: 'csv'
        },
        'endpointUuid__contains': {
          value: opts['endpointUuidContains'],
          collectionFormat: 'csv'
        },
        'vendor__contains': {
          value: opts['vendorContains'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = CountFiltersResponseSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/private/application-management/inventory/filters-count', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiPrivateApplicationManagementInventoryFreeTextFiltersGet operation.
     * @callback module:api/ApplicationManagementApi~webApiPrivateApplicationManagementInventoryFreeTextFiltersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FreeTextFilterResponseSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Free-Text Filters
     * Get a metadata list of the available free-text filters.
     * @param {module:api/ApplicationManagementApi~webApiPrivateApplicationManagementInventoryFreeTextFiltersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FreeTextFilterResponseSchemaMany200}
     */
    this.webApiPrivateApplicationManagementInventoryFreeTextFiltersGet = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = FreeTextFilterResponseSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/private/application-management/inventory/free-text-filters', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiPrivateApplicationManagementInventoryVersionsCountGet operation.
     * @callback module:api/ApplicationManagementApi~webApiPrivateApplicationManagementInventoryVersionsCountGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21ApplicationManagementApplicationManagementSchemasVersionsCountSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Count endpoints by versions
     * Show endpoint count for all versions of selected application.
     * @param {String} applicationName Name
     * @param {String} applicationVendor Vendor
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {module:api/ApplicationManagementApi~webApiPrivateApplicationManagementInventoryVersionsCountGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21ApplicationManagementApplicationManagementSchemasVersionsCountSchema200}
     */
    this.webApiPrivateApplicationManagementInventoryVersionsCountGet = function(applicationName, applicationVendor, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'applicationName' is set
      if (applicationName === undefined || applicationName === null) {
        throw new Error("Missing the required parameter 'applicationName' when calling webApiPrivateApplicationManagementInventoryVersionsCountGet");
      }

      // verify the required parameter 'applicationVendor' is set
      if (applicationVendor === undefined || applicationVendor === null) {
        throw new Error("Missing the required parameter 'applicationVendor' when calling webApiPrivateApplicationManagementInventoryVersionsCountGet");
      }


      var pathParams = {
      };
      var queryParams = {
        'applicationName': applicationName,
        'applicationVendor': applicationVendor,
      };
      var collectionQueryParams = {
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21ApplicationManagementApplicationManagementSchemasVersionsCountSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/private/application-management/inventory/versions-count', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiPrivateApplicationManagementRisksAggregatedApplicationsExportCsvExtendedGet operation.
     * @callback module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksAggregatedApplicationsExportCsvExtendedGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Aggregated Application Risk Data Export
     * Export aggregated application data to CSV.
     * @param {Object} opts Optional parameters
     * @param {Date} opts.detectionDateLt Application detection date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.sortBy sort by column - will be ignored
     * @param {Array.<String>} opts.vendors Included vendors. Example: \"Microsoft,Apple\".
     * @param {Array.<module:model/String>} opts.mitigationStatuses Filters by the application's highest mitigation status values. Available for VLN SKU. Example: \"Not mitigated,To be patched,On hold\".
     * @param {Array.<module:model/String>} opts.exploitedInTheWild Included exploited in the wild values. Available with Ranger Insights. Example: \"Unknown,Yes\".
     * @param {Array.<String>} opts.highestSeverities Included highest severities. Example: \"CRITICAL,HIGH\".
     * @param {Array.<String>} opts.sortOrder sort order will be ignored
     * @param {Array.<module:model/String>} opts.exploitCodeMaturity Included exploit code maturity values. Available with Ranger Insights. Example: \"Functional,High\".
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {Number} opts.daysFromDetection Days from application detection, e.g. 12 days or more. Example: \"12\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {Date} opts.detectionDateGte Application detection date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.endpointNameContains Free-text filter by endpoint name (supports multiple values). Example: \"Office,Test\".
     * @param {Array.<String>} opts.cveIdContains Free-text filter by CVE id (supports multiple values). Example: \"CVE-1234-5678\".
     * @param {Array.<String>} opts.nameContains Free-text filter by application name (supports multiple values). Example: \"Office 1.1,Test\".
     * @param {Date} opts.detectionDateGt Application detection date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.detectionDateLte Application detection date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.detectionDateBetween Date range for application detection date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<module:model/String>} opts.remediationLevels Included remediation level values. Available with Ranger Insights. Example: \"Official Fix,Temporary Fix\".
     * @param {Array.<String>} opts.applicationTypes Application type. Available with Ranger Insights. Example: \"A,p,p,l,i,c,a,t,i,o,n\".
     * @param {Array.<String>} opts.endpointUuidContains Free-text filter by endpoint uuid (supports multiple values)
     * @param {Array.<String>} opts.vendorContains Free-text filter by vendor (supports multiple values). Example: \"Microsoft,Apple\".
     * @param {Array.<String>} opts.mostCommonStatuses Included most common status values. Available with Ranger Insights.
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksAggregatedApplicationsExportCsvExtendedGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiPrivateApplicationManagementRisksAggregatedApplicationsExportCsvExtendedGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'detectionDate__lt': opts['detectionDateLt'],
        'daysFromDetection': opts['daysFromDetection'],
        'detectionDate__gte': opts['detectionDateGte'],
        'detectionDate__gt': opts['detectionDateGt'],
        'detectionDate__lte': opts['detectionDateLte'],
        'detectionDate__between': opts['detectionDateBetween'],
      };
      var collectionQueryParams = {
        'sortBy': {
          value: opts['sortBy'],
          collectionFormat: 'csv'
        },
        'vendors': {
          value: opts['vendors'],
          collectionFormat: 'csv'
        },
        'mitigationStatuses': {
          value: opts['mitigationStatuses'],
          collectionFormat: 'csv'
        },
        'exploitedInTheWild': {
          value: opts['exploitedInTheWild'],
          collectionFormat: 'csv'
        },
        'highestSeverities': {
          value: opts['highestSeverities'],
          collectionFormat: 'csv'
        },
        'sortOrder': {
          value: opts['sortOrder'],
          collectionFormat: 'csv'
        },
        'exploitCodeMaturity': {
          value: opts['exploitCodeMaturity'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'endpointName__contains': {
          value: opts['endpointNameContains'],
          collectionFormat: 'csv'
        },
        'cveId__contains': {
          value: opts['cveIdContains'],
          collectionFormat: 'csv'
        },
        'name__contains': {
          value: opts['nameContains'],
          collectionFormat: 'csv'
        },
        'remediationLevels': {
          value: opts['remediationLevels'],
          collectionFormat: 'csv'
        },
        'applicationTypes': {
          value: opts['applicationTypes'],
          collectionFormat: 'csv'
        },
        'endpointUuid__contains': {
          value: opts['endpointUuidContains'],
          collectionFormat: 'csv'
        },
        'vendor__contains': {
          value: opts['vendorContains'],
          collectionFormat: 'csv'
        },
        'mostCommonStatuses': {
          value: opts['mostCommonStatuses'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/private/application-management/risks/aggregated-applications/export/csv-extended', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiPrivateApplicationManagementRisksAggregatedApplicationsFiltersAutocompleteGet operation.
     * @callback module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksAggregatedApplicationsFiltersAutocompleteGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AutoCompleteResponseSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Auto Complete
     * Given an input text, returns auto-complete suggestions that match the text for the selected filter field.
     * @param {module:model/String} key Search field key. Example: \"name__contains\".
     * @param {String} text Search term text
     * @param {Object} opts Optional parameters
     * @param {Date} opts.detectionDateLt Application detection date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.domains Included domains.
     * @param {Number} opts.limit Limit number of returned items. Example: \"5\".
     * @param {Array.<String>} opts.vendors Included vendors. Example: \"Microsoft,Apple\".
     * @param {Array.<module:model/String>} opts.exploitedInTheWild Included exploited in the wild values. Available with Ranger Insights. Example: \"Unknown,Yes\".
     * @param {Array.<String>} opts.osTypes Included OS types. Example: \"windows,linux\".
     * @param {Array.<String>} opts.highestSeverities Included highest severities. Example: \"CRITICAL,HIGH\".
     * @param {Array.<module:model/String>} opts.exploitCodeMaturity Included exploit code maturity values. Available with Ranger Insights. Example: \"Functional,High\".
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {Number} opts.daysFromDetection Days from application detection, e.g. 12 days or more. Example: \"12\".
     * @param {Date} opts.detectionDateGte Application detection date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.endpointNameContains Free-text filter by endpoint name (supports multiple values). Example: \"Office,Test\".
     * @param {Array.<String>} opts.cveIdContains Free-text filter by CVE id (supports multiple values). Example: \"CVE-1234-5678\".
     * @param {Array.<String>} opts.nameContains Free-text filter by application name (supports multiple values). Example: \"Office 1.1,Test\".
     * @param {Date} opts.detectionDateGt Application detection date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.detectionDateLte Application detection date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.detectionDateBetween Date range for application detection date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<module:model/String>} opts.remediationLevels Included remediation level values. Available with Ranger Insights. Example: \"Official Fix,Temporary Fix\".
     * @param {Array.<String>} opts.applicationTypes Application type. Available with Ranger Insights. Example: \"A,p,p,l,i,c,a,t,i,o,n\".
     * @param {Array.<String>} opts.endpointUuidContains Free-text filter by endpoint uuid (supports multiple values)
     * @param {Array.<String>} opts.endpointTypes Included endpoint types. Example: \"desktop,laptop\".
     * @param {Array.<String>} opts.vendorContains Free-text filter by vendor (supports multiple values). Example: \"Microsoft,Apple\".
     * @param {Array.<String>} opts.mostCommonStatuses Included most common status values. Available with Ranger Insights.
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksAggregatedApplicationsFiltersAutocompleteGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AutoCompleteResponseSchema200}
     */
    this.webApiPrivateApplicationManagementRisksAggregatedApplicationsFiltersAutocompleteGet = function(key, text, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'key' is set
      if (key === undefined || key === null) {
        throw new Error("Missing the required parameter 'key' when calling webApiPrivateApplicationManagementRisksAggregatedApplicationsFiltersAutocompleteGet");
      }

      // verify the required parameter 'text' is set
      if (text === undefined || text === null) {
        throw new Error("Missing the required parameter 'text' when calling webApiPrivateApplicationManagementRisksAggregatedApplicationsFiltersAutocompleteGet");
      }


      var pathParams = {
      };
      var queryParams = {
        'detectionDate__lt': opts['detectionDateLt'],
        'key': key,
        'limit': opts['limit'],
        'text': text,
        'daysFromDetection': opts['daysFromDetection'],
        'detectionDate__gte': opts['detectionDateGte'],
        'detectionDate__gt': opts['detectionDateGt'],
        'detectionDate__lte': opts['detectionDateLte'],
        'detectionDate__between': opts['detectionDateBetween'],
      };
      var collectionQueryParams = {
        'domains': {
          value: opts['domains'],
          collectionFormat: 'csv'
        },
        'vendors': {
          value: opts['vendors'],
          collectionFormat: 'csv'
        },
        'exploitedInTheWild': {
          value: opts['exploitedInTheWild'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'highestSeverities': {
          value: opts['highestSeverities'],
          collectionFormat: 'csv'
        },
        'exploitCodeMaturity': {
          value: opts['exploitCodeMaturity'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'endpointName__contains': {
          value: opts['endpointNameContains'],
          collectionFormat: 'csv'
        },
        'cveId__contains': {
          value: opts['cveIdContains'],
          collectionFormat: 'csv'
        },
        'name__contains': {
          value: opts['nameContains'],
          collectionFormat: 'csv'
        },
        'remediationLevels': {
          value: opts['remediationLevels'],
          collectionFormat: 'csv'
        },
        'applicationTypes': {
          value: opts['applicationTypes'],
          collectionFormat: 'csv'
        },
        'endpointUuid__contains': {
          value: opts['endpointUuidContains'],
          collectionFormat: 'csv'
        },
        'endpointTypes': {
          value: opts['endpointTypes'],
          collectionFormat: 'csv'
        },
        'vendor__contains': {
          value: opts['vendorContains'],
          collectionFormat: 'csv'
        },
        'mostCommonStatuses': {
          value: opts['mostCommonStatuses'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = AutoCompleteResponseSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/private/application-management/risks/aggregated-applications/filters-autocomplete', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiPrivateApplicationManagementRisksAggregatedApplicationsFiltersCountGet operation.
     * @callback module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksAggregatedApplicationsFiltersCountGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CountFiltersResponseSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Count Risky Aggregated Applications by Filters
     * Show a count of risky aggregated applications for each filter value.
     * @param {Object} opts Optional parameters
     * @param {Date} opts.detectionDateLt Application detection date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.domains Included domains.
     * @param {Array.<String>} opts.vendors Included vendors. Example: \"Microsoft,Apple\".
     * @param {Array.<module:model/String>} opts.exploitedInTheWild Included exploited in the wild values. Available with Ranger Insights. Example: \"Unknown,Yes\".
     * @param {Array.<String>} opts.osTypes Included OS types. Example: \"windows,linux\".
     * @param {Array.<String>} opts.highestSeverities Included highest severities. Example: \"CRITICAL,HIGH\".
     * @param {Array.<module:model/String>} opts.exploitCodeMaturity Included exploit code maturity values. Available with Ranger Insights. Example: \"Functional,High\".
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {Number} opts.daysFromDetection Days from application detection, e.g. 12 days or more. Example: \"12\".
     * @param {Date} opts.detectionDateGte Application detection date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.endpointNameContains Free-text filter by endpoint name (supports multiple values). Example: \"Office,Test\".
     * @param {Array.<String>} opts.cveIdContains Free-text filter by CVE id (supports multiple values). Example: \"CVE-1234-5678\".
     * @param {Array.<String>} opts.nameContains Free-text filter by application name (supports multiple values). Example: \"Office 1.1,Test\".
     * @param {Date} opts.detectionDateGt Application detection date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.detectionDateLte Application detection date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.detectionDateBetween Date range for application detection date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<module:model/String>} opts.remediationLevels Included remediation level values. Available with Ranger Insights. Example: \"Official Fix,Temporary Fix\".
     * @param {Array.<String>} opts.applicationTypes Application type. Available with Ranger Insights. Example: \"A,p,p,l,i,c,a,t,i,o,n\".
     * @param {Array.<String>} opts.endpointUuidContains Free-text filter by endpoint uuid (supports multiple values)
     * @param {Array.<String>} opts.endpointTypes Included endpoint types. Example: \"desktop,laptop\".
     * @param {Array.<String>} opts.vendorContains Free-text filter by vendor (supports multiple values). Example: \"Microsoft,Apple\".
     * @param {Array.<String>} opts.mostCommonStatuses Included most common status values. Available with Ranger Insights.
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksAggregatedApplicationsFiltersCountGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CountFiltersResponseSchemaMany200}
     */
    this.webApiPrivateApplicationManagementRisksAggregatedApplicationsFiltersCountGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'detectionDate__lt': opts['detectionDateLt'],
        'daysFromDetection': opts['daysFromDetection'],
        'detectionDate__gte': opts['detectionDateGte'],
        'detectionDate__gt': opts['detectionDateGt'],
        'detectionDate__lte': opts['detectionDateLte'],
        'detectionDate__between': opts['detectionDateBetween'],
      };
      var collectionQueryParams = {
        'domains': {
          value: opts['domains'],
          collectionFormat: 'csv'
        },
        'vendors': {
          value: opts['vendors'],
          collectionFormat: 'csv'
        },
        'exploitedInTheWild': {
          value: opts['exploitedInTheWild'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'highestSeverities': {
          value: opts['highestSeverities'],
          collectionFormat: 'csv'
        },
        'exploitCodeMaturity': {
          value: opts['exploitCodeMaturity'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'endpointName__contains': {
          value: opts['endpointNameContains'],
          collectionFormat: 'csv'
        },
        'cveId__contains': {
          value: opts['cveIdContains'],
          collectionFormat: 'csv'
        },
        'name__contains': {
          value: opts['nameContains'],
          collectionFormat: 'csv'
        },
        'remediationLevels': {
          value: opts['remediationLevels'],
          collectionFormat: 'csv'
        },
        'applicationTypes': {
          value: opts['applicationTypes'],
          collectionFormat: 'csv'
        },
        'endpointUuid__contains': {
          value: opts['endpointUuidContains'],
          collectionFormat: 'csv'
        },
        'endpointTypes': {
          value: opts['endpointTypes'],
          collectionFormat: 'csv'
        },
        'vendor__contains': {
          value: opts['vendorContains'],
          collectionFormat: 'csv'
        },
        'mostCommonStatuses': {
          value: opts['mostCommonStatuses'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = CountFiltersResponseSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/private/application-management/risks/aggregated-applications/filters-count', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiPrivateApplicationManagementRisksAggregatedApplicationsFreeTextFiltersGet operation.
     * @callback module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksAggregatedApplicationsFreeTextFiltersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FreeTextFilterResponseSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Free-Text Filters
     * Get a metadata list of the available free-text filters.
     * @param {module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksAggregatedApplicationsFreeTextFiltersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FreeTextFilterResponseSchemaMany200}
     */
    this.webApiPrivateApplicationManagementRisksAggregatedApplicationsFreeTextFiltersGet = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = FreeTextFilterResponseSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/private/application-management/risks/aggregated-applications/free-text-filters', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiPrivateApplicationManagementRisksApplicationsFiltersAutocompleteGet operation.
     * @callback module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksApplicationsFiltersAutocompleteGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AutoCompleteResponseSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Auto Complete
     * Given an input text, returns auto-complete suggestions that match the text for the selected filter field.
     * @param {module:model/String} key Search field key. Example: \"application__contains\".
     * @param {String} text Search term text
     * @param {Object} opts Optional parameters
     * @param {Date} opts.detectionDateLt Application detection date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.domains Included domains.
     * @param {Number} opts.limit Limit number of returned items. Example: \"5\".
     * @param {Array.<String>} opts.applicationContains Free-text filter by application name and version (supports multiple values). Example: \"Office 1.1,Test\".
     * @param {Array.<String>} opts.vendors Included vendors. Example: \"Microsoft,Apple\".
     * @param {Array.<module:model/String>} opts.exploitedInTheWild Included exploited in the wild values. Available with Ranger Insights. Example: \"Unknown,Yes\".
     * @param {Array.<String>} opts.osTypes Included OS types. Example: \"windows,linux\".
     * @param {Array.<String>} opts.highestSeverities Included highest severities. Example: \"CRITICAL,HIGH\".
     * @param {Array.<module:model/String>} opts.exploitCodeMaturity Included exploit code maturity values. Available with Ranger Insights. Example: \"Functional,High\".
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {Number} opts.daysFromDetection Days from application detection, e.g. 12 days or more. Example: \"12\".
     * @param {Date} opts.detectionDateGte Application detection date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.endpointNameContains Free-text filter by endpoint name (supports multiple values). Example: \"Office,Test\".
     * @param {Array.<String>} opts.cveIdContains Free-text filter by CVE id (supports multiple values). Example: \"CVE-1234-5678\".
     * @param {Date} opts.detectionDateGt Application detection date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.detectionDateLte Application detection date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.detectionDateBetween Date range for application detection date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<module:model/String>} opts.remediationLevels Included remediation level values. Available with Ranger Insights. Example: \"Official Fix,Temporary Fix\".
     * @param {Array.<String>} opts.applicationTypes Application type. Available with Ranger Insights. Example: \"A,p,p,l,i,c,a,t,i,o,n\".
     * @param {Array.<String>} opts.endpointUuidContains Free-text filter by endpoint uuid (supports multiple values)
     * @param {Array.<String>} opts.endpointTypes Included endpoint types. Example: \"desktop,laptop\".
     * @param {Array.<String>} opts.vendorContains Free-text filter by vendor (supports multiple values). Example: \"Microsoft,Apple\".
     * @param {Array.<String>} opts.mostCommonStatuses Included most common status values. Available with Ranger Insights.
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksApplicationsFiltersAutocompleteGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AutoCompleteResponseSchema200}
     */
    this.webApiPrivateApplicationManagementRisksApplicationsFiltersAutocompleteGet = function(key, text, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'key' is set
      if (key === undefined || key === null) {
        throw new Error("Missing the required parameter 'key' when calling webApiPrivateApplicationManagementRisksApplicationsFiltersAutocompleteGet");
      }

      // verify the required parameter 'text' is set
      if (text === undefined || text === null) {
        throw new Error("Missing the required parameter 'text' when calling webApiPrivateApplicationManagementRisksApplicationsFiltersAutocompleteGet");
      }


      var pathParams = {
      };
      var queryParams = {
        'detectionDate__lt': opts['detectionDateLt'],
        'key': key,
        'limit': opts['limit'],
        'text': text,
        'daysFromDetection': opts['daysFromDetection'],
        'detectionDate__gte': opts['detectionDateGte'],
        'detectionDate__gt': opts['detectionDateGt'],
        'detectionDate__lte': opts['detectionDateLte'],
        'detectionDate__between': opts['detectionDateBetween'],
      };
      var collectionQueryParams = {
        'domains': {
          value: opts['domains'],
          collectionFormat: 'csv'
        },
        'application__contains': {
          value: opts['applicationContains'],
          collectionFormat: 'csv'
        },
        'vendors': {
          value: opts['vendors'],
          collectionFormat: 'csv'
        },
        'exploitedInTheWild': {
          value: opts['exploitedInTheWild'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'highestSeverities': {
          value: opts['highestSeverities'],
          collectionFormat: 'csv'
        },
        'exploitCodeMaturity': {
          value: opts['exploitCodeMaturity'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'endpointName__contains': {
          value: opts['endpointNameContains'],
          collectionFormat: 'csv'
        },
        'cveId__contains': {
          value: opts['cveIdContains'],
          collectionFormat: 'csv'
        },
        'remediationLevels': {
          value: opts['remediationLevels'],
          collectionFormat: 'csv'
        },
        'applicationTypes': {
          value: opts['applicationTypes'],
          collectionFormat: 'csv'
        },
        'endpointUuid__contains': {
          value: opts['endpointUuidContains'],
          collectionFormat: 'csv'
        },
        'endpointTypes': {
          value: opts['endpointTypes'],
          collectionFormat: 'csv'
        },
        'vendor__contains': {
          value: opts['vendorContains'],
          collectionFormat: 'csv'
        },
        'mostCommonStatuses': {
          value: opts['mostCommonStatuses'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = AutoCompleteResponseSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/private/application-management/risks/applications/filters-autocomplete', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiPrivateApplicationManagementRisksApplicationsFiltersCountGet operation.
     * @callback module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksApplicationsFiltersCountGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CountFiltersResponseSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Count Risky Applications by Filters
     * Show a count of risky applications for each filter value.
     * @param {Object} opts Optional parameters
     * @param {Date} opts.detectionDateLt Application detection date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.domains Included domains.
     * @param {Array.<String>} opts.applicationContains Free-text filter by application name and version (supports multiple values). Example: \"Office 1.1,Test\".
     * @param {Array.<String>} opts.vendors Included vendors. Example: \"Microsoft,Apple\".
     * @param {Array.<module:model/String>} opts.exploitedInTheWild Included exploited in the wild values. Available with Ranger Insights. Example: \"Unknown,Yes\".
     * @param {Array.<String>} opts.osTypes Included OS types. Example: \"windows,linux\".
     * @param {Array.<String>} opts.highestSeverities Included highest severities. Example: \"CRITICAL,HIGH\".
     * @param {Array.<module:model/String>} opts.exploitCodeMaturity Included exploit code maturity values. Available with Ranger Insights. Example: \"Functional,High\".
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {Number} opts.daysFromDetection Days from application detection, e.g. 12 days or more. Example: \"12\".
     * @param {Date} opts.detectionDateGte Application detection date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.endpointNameContains Free-text filter by endpoint name (supports multiple values). Example: \"Office,Test\".
     * @param {Array.<String>} opts.cveIdContains Free-text filter by CVE id (supports multiple values). Example: \"CVE-1234-5678\".
     * @param {Date} opts.detectionDateGt Application detection date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.detectionDateLte Application detection date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.detectionDateBetween Date range for application detection date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<module:model/String>} opts.remediationLevels Included remediation level values. Available with Ranger Insights. Example: \"Official Fix,Temporary Fix\".
     * @param {Array.<String>} opts.applicationTypes Application type. Available with Ranger Insights. Example: \"A,p,p,l,i,c,a,t,i,o,n\".
     * @param {Array.<String>} opts.endpointUuidContains Free-text filter by endpoint uuid (supports multiple values)
     * @param {Array.<String>} opts.endpointTypes Included endpoint types. Example: \"desktop,laptop\".
     * @param {Array.<String>} opts.vendorContains Free-text filter by vendor (supports multiple values). Example: \"Microsoft,Apple\".
     * @param {Array.<String>} opts.mostCommonStatuses Included most common status values. Available with Ranger Insights.
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksApplicationsFiltersCountGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CountFiltersResponseSchemaMany200}
     */
    this.webApiPrivateApplicationManagementRisksApplicationsFiltersCountGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'detectionDate__lt': opts['detectionDateLt'],
        'daysFromDetection': opts['daysFromDetection'],
        'detectionDate__gte': opts['detectionDateGte'],
        'detectionDate__gt': opts['detectionDateGt'],
        'detectionDate__lte': opts['detectionDateLte'],
        'detectionDate__between': opts['detectionDateBetween'],
      };
      var collectionQueryParams = {
        'domains': {
          value: opts['domains'],
          collectionFormat: 'csv'
        },
        'application__contains': {
          value: opts['applicationContains'],
          collectionFormat: 'csv'
        },
        'vendors': {
          value: opts['vendors'],
          collectionFormat: 'csv'
        },
        'exploitedInTheWild': {
          value: opts['exploitedInTheWild'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'highestSeverities': {
          value: opts['highestSeverities'],
          collectionFormat: 'csv'
        },
        'exploitCodeMaturity': {
          value: opts['exploitCodeMaturity'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'endpointName__contains': {
          value: opts['endpointNameContains'],
          collectionFormat: 'csv'
        },
        'cveId__contains': {
          value: opts['cveIdContains'],
          collectionFormat: 'csv'
        },
        'remediationLevels': {
          value: opts['remediationLevels'],
          collectionFormat: 'csv'
        },
        'applicationTypes': {
          value: opts['applicationTypes'],
          collectionFormat: 'csv'
        },
        'endpointUuid__contains': {
          value: opts['endpointUuidContains'],
          collectionFormat: 'csv'
        },
        'endpointTypes': {
          value: opts['endpointTypes'],
          collectionFormat: 'csv'
        },
        'vendor__contains': {
          value: opts['vendorContains'],
          collectionFormat: 'csv'
        },
        'mostCommonStatuses': {
          value: opts['mostCommonStatuses'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = CountFiltersResponseSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/private/application-management/risks/applications/filters-count', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiPrivateApplicationManagementRisksApplicationsFreeTextFiltersGet operation.
     * @callback module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksApplicationsFreeTextFiltersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FreeTextFilterResponseSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Free-Text Filters
     * Get a metadata list of the available free-text filters.
     * @param {module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksApplicationsFreeTextFiltersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FreeTextFilterResponseSchemaMany200}
     */
    this.webApiPrivateApplicationManagementRisksApplicationsFreeTextFiltersGet = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = FreeTextFilterResponseSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/private/application-management/risks/applications/free-text-filters', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiPrivateApplicationManagementRisksCvesFiltersAutocompleteGet operation.
     * @callback module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksCvesFiltersAutocompleteGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AutoCompleteResponseSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Auto Complete
     * Given an input text, returns auto-complete suggestions that match the text for the selected filter field.
     * @param {module:model/String} key Search field key. Example: \"cveId__contains\".
     * @param {String} text Search term text
     * @param {Object} opts Optional parameters
     * @param {Number} opts.limit Limit number of returned items. Example: \"5\".
     * @param {Date} opts.publishedDateGt CVE published date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<module:model/String>} opts.exploitedInTheWild Included exploited in the wild values. Available with Ranger Insights. Example: \"EXPLOITED_UNKNOWN,YES\".
     * @param {Date} opts.publishedDateLte CVE published date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.severities Included severities. Example: \"CRITICAL,HIGH\".
     * @param {Date} opts.publishedDateLt CVE published date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<module:model/String>} opts.exploitCodeMaturity Included exploit code maturity values. Available with Ranger Insights. Example: \"FUNCTIONAL,HIGH\".
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {String} opts.publishedDateBetween Date range for CVE publish date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.applicationIds Included application versions by id
     * @param {Array.<String>} opts.cveIdContains Free-text filter by CVE id (supports multiple values). Example: \"CVE-1234-5678\".
     * @param {Array.<module:model/String>} opts.remediationLevels Included remediation level values. Available with Ranger Insights. Example: \"OFFICIAL_FIX,TEMPORARY_FIX\".
     * @param {String} opts.applicationName Application name
     * @param {Array.<module:model/String>} opts.reportConfidence Included report confidence values. Available with Ranger Insights. Example: \"REASONABLE,CONFIRMED\".
     * @param {Array.<module:model/String>} opts.analystVerdict Include Default(not edited)/ False Positives / Added CVEs for Vulnerabilities. Example: \"Default,False Positive,Added CVE\".
     * @param {Date} opts.publishedDateGte CVE published date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.applicationVendor Application vendor
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.applicationVersions Included application versions
     * @param {module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksCvesFiltersAutocompleteGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AutoCompleteResponseSchema200}
     */
    this.webApiPrivateApplicationManagementRisksCvesFiltersAutocompleteGet = function(key, text, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'key' is set
      if (key === undefined || key === null) {
        throw new Error("Missing the required parameter 'key' when calling webApiPrivateApplicationManagementRisksCvesFiltersAutocompleteGet");
      }

      // verify the required parameter 'text' is set
      if (text === undefined || text === null) {
        throw new Error("Missing the required parameter 'text' when calling webApiPrivateApplicationManagementRisksCvesFiltersAutocompleteGet");
      }


      var pathParams = {
      };
      var queryParams = {
        'key': key,
        'limit': opts['limit'],
        'text': text,
        'publishedDate__gt': opts['publishedDateGt'],
        'publishedDate__lte': opts['publishedDateLte'],
        'publishedDate__lt': opts['publishedDateLt'],
        'publishedDate__between': opts['publishedDateBetween'],
        'applicationName': opts['applicationName'],
        'publishedDate__gte': opts['publishedDateGte'],
        'applicationVendor': opts['applicationVendor'],
      };
      var collectionQueryParams = {
        'exploitedInTheWild': {
          value: opts['exploitedInTheWild'],
          collectionFormat: 'csv'
        },
        'severities': {
          value: opts['severities'],
          collectionFormat: 'csv'
        },
        'exploitCodeMaturity': {
          value: opts['exploitCodeMaturity'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'applicationIds': {
          value: opts['applicationIds'],
          collectionFormat: 'csv'
        },
        'cveId__contains': {
          value: opts['cveIdContains'],
          collectionFormat: 'csv'
        },
        'remediationLevels': {
          value: opts['remediationLevels'],
          collectionFormat: 'csv'
        },
        'reportConfidence': {
          value: opts['reportConfidence'],
          collectionFormat: 'csv'
        },
        'analystVerdict': {
          value: opts['analystVerdict'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'applicationVersions': {
          value: opts['applicationVersions'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = AutoCompleteResponseSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/private/application-management/risks/cves/filters-autocomplete', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiPrivateApplicationManagementRisksCvesFiltersCountGet operation.
     * @callback module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksCvesFiltersCountGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CountFiltersResponseSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Count Risky CVEs by Filters
     * Show a count of risky CVEs for each filter value.
     * @param {Object} opts Optional parameters
     * @param {Date} opts.publishedDateGt CVE published date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<module:model/String>} opts.exploitedInTheWild Included exploited in the wild values. Available with Ranger Insights. Example: \"EXPLOITED_UNKNOWN,YES\".
     * @param {Date} opts.publishedDateLte CVE published date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.severities Included severities. Example: \"CRITICAL,HIGH\".
     * @param {Date} opts.publishedDateLt CVE published date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<module:model/String>} opts.exploitCodeMaturity Included exploit code maturity values. Available with Ranger Insights. Example: \"FUNCTIONAL,HIGH\".
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {String} opts.publishedDateBetween Date range for CVE publish date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.applicationIds Included application versions by id
     * @param {Array.<String>} opts.cveIdContains Free-text filter by CVE id (supports multiple values). Example: \"CVE-1234-5678\".
     * @param {Array.<module:model/String>} opts.remediationLevels Included remediation level values. Available with Ranger Insights. Example: \"OFFICIAL_FIX,TEMPORARY_FIX\".
     * @param {String} opts.applicationName Application name
     * @param {Array.<module:model/String>} opts.reportConfidence Included report confidence values. Available with Ranger Insights. Example: \"REASONABLE,CONFIRMED\".
     * @param {Array.<module:model/String>} opts.analystVerdict Include Default(not edited)/ False Positives / Added CVEs for Vulnerabilities. Example: \"Default,False Positive,Added CVE\".
     * @param {Date} opts.publishedDateGte CVE published date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.applicationVendor Application vendor
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.applicationVersions Included application versions
     * @param {module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksCvesFiltersCountGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CountFiltersResponseSchemaMany200}
     */
    this.webApiPrivateApplicationManagementRisksCvesFiltersCountGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'publishedDate__gt': opts['publishedDateGt'],
        'publishedDate__lte': opts['publishedDateLte'],
        'publishedDate__lt': opts['publishedDateLt'],
        'publishedDate__between': opts['publishedDateBetween'],
        'applicationName': opts['applicationName'],
        'publishedDate__gte': opts['publishedDateGte'],
        'applicationVendor': opts['applicationVendor'],
      };
      var collectionQueryParams = {
        'exploitedInTheWild': {
          value: opts['exploitedInTheWild'],
          collectionFormat: 'csv'
        },
        'severities': {
          value: opts['severities'],
          collectionFormat: 'csv'
        },
        'exploitCodeMaturity': {
          value: opts['exploitCodeMaturity'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'applicationIds': {
          value: opts['applicationIds'],
          collectionFormat: 'csv'
        },
        'cveId__contains': {
          value: opts['cveIdContains'],
          collectionFormat: 'csv'
        },
        'remediationLevels': {
          value: opts['remediationLevels'],
          collectionFormat: 'csv'
        },
        'reportConfidence': {
          value: opts['reportConfidence'],
          collectionFormat: 'csv'
        },
        'analystVerdict': {
          value: opts['analystVerdict'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'applicationVersions': {
          value: opts['applicationVersions'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = CountFiltersResponseSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/private/application-management/risks/cves/filters-count', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiPrivateApplicationManagementRisksCvesFreeTextFiltersGet operation.
     * @callback module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksCvesFreeTextFiltersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FreeTextFilterResponseSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Free-Text Filters
     * Get a metadata list of the available free-text filters.
     * @param {module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksCvesFreeTextFiltersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FreeTextFilterResponseSchemaMany200}
     */
    this.webApiPrivateApplicationManagementRisksCvesFreeTextFiltersGet = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = FreeTextFilterResponseSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/private/application-management/risks/cves/free-text-filters', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiPrivateApplicationManagementRisksEndpointsFiltersAutocompleteGet operation.
     * @callback module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksEndpointsFiltersAutocompleteGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AutoCompleteResponseSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Auto Complete
     * Given an input text, returns auto-complete suggestions that match the text for the selected filter field.
     * @param {module:model/String} key Search field key. Example: \"endpointName__contains\".
     * @param {String} text Search term text
     * @param {Object} opts Optional parameters
     * @param {Date} opts.detectionDateLt Application detection date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.domains Included endpoint domains
     * @param {Number} opts.limit Limit number of returned items. Example: \"5\".
     * @param {Array.<String>} opts.statusMessageContains Free-text filter by status message (supports multiple values). Available with Ranger Insights. Example: \"assigned to john,top priority\".
     * @param {Array.<String>} opts.statuses Included statuses. Available with Ranger Insights.
     * @param {Array.<String>} opts.osTypes Included OS types
     * @param {Date} opts.lastScanDateLt Last scan date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.lastScanDateBetween Date range for last scan date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<String>} opts.osVersions Included OS versions
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {Date} opts.lastScanDateLte Last scan date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {Number} opts.daysFromDetection Days from application detection, e.g. 12 days or more. Example: \"12\".
     * @param {Array.<String>} opts.applicationIds Included application versions by id
     * @param {Date} opts.detectionDateGte Application detection date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.endpointNameContains Free-text filter by endpoint name (supports multiple values). Example: \"Office,Test\".
     * @param {Date} opts.lastScanDateGt Last scan date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.ticketIdContains Free-text filter by ticket id. Available with Ranger Insights when using ticket integration. Example: \"ABC-123,ABCD-100\".
     * @param {Date} opts.detectionDateGt Application detection date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.detectionDateLte Application detection date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.daysToMitigationBetween Date range for days left to mitigation. Available with Ranger Insights when using ticket integration. Example: \"1-30\".
     * @param {String} opts.detectionDateBetween Date range for application detection date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<String>} opts.domainContains Free-text filter by domain (supports multiple values). Example: \"mybusiness,workgroup\".
     * @param {String} opts.applicationName Application name
     * @param {Array.<String>} opts.endpointUuidContains Free-text filter by endpoint uuid (supports multiple values)
     * @param {Array.<String>} opts.endpointTypes Included endpoint types
     * @param {Array.<String>} opts.endpointIdContains Free-text filter by endpoint id (supports multiple values)
     * @param {String} opts.applicationVendor Application vendor
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {Date} opts.lastScanDateGte Last scan date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<module:model/String>} opts.lastScanResults Included last scan results. Example: \"Succeeded\".
     * @param {Array.<String>} opts.applicationVersions Included application versions
     * @param {module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksEndpointsFiltersAutocompleteGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AutoCompleteResponseSchema200}
     */
    this.webApiPrivateApplicationManagementRisksEndpointsFiltersAutocompleteGet = function(key, text, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'key' is set
      if (key === undefined || key === null) {
        throw new Error("Missing the required parameter 'key' when calling webApiPrivateApplicationManagementRisksEndpointsFiltersAutocompleteGet");
      }

      // verify the required parameter 'text' is set
      if (text === undefined || text === null) {
        throw new Error("Missing the required parameter 'text' when calling webApiPrivateApplicationManagementRisksEndpointsFiltersAutocompleteGet");
      }


      var pathParams = {
      };
      var queryParams = {
        'detectionDate__lt': opts['detectionDateLt'],
        'key': key,
        'limit': opts['limit'],
        'text': text,
        'lastScanDate__lt': opts['lastScanDateLt'],
        'lastScanDate__between': opts['lastScanDateBetween'],
        'lastScanDate__lte': opts['lastScanDateLte'],
        'daysFromDetection': opts['daysFromDetection'],
        'detectionDate__gte': opts['detectionDateGte'],
        'lastScanDate__gt': opts['lastScanDateGt'],
        'detectionDate__gt': opts['detectionDateGt'],
        'detectionDate__lte': opts['detectionDateLte'],
        'daysToMitigation__between': opts['daysToMitigationBetween'],
        'detectionDate__between': opts['detectionDateBetween'],
        'applicationName': opts['applicationName'],
        'applicationVendor': opts['applicationVendor'],
        'lastScanDate__gte': opts['lastScanDateGte'],
      };
      var collectionQueryParams = {
        'domains': {
          value: opts['domains'],
          collectionFormat: 'csv'
        },
        'statusMessage__contains': {
          value: opts['statusMessageContains'],
          collectionFormat: 'csv'
        },
        'statuses': {
          value: opts['statuses'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'osVersions': {
          value: opts['osVersions'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'applicationIds': {
          value: opts['applicationIds'],
          collectionFormat: 'csv'
        },
        'endpointName__contains': {
          value: opts['endpointNameContains'],
          collectionFormat: 'csv'
        },
        'ticketId__contains': {
          value: opts['ticketIdContains'],
          collectionFormat: 'csv'
        },
        'domain__contains': {
          value: opts['domainContains'],
          collectionFormat: 'csv'
        },
        'endpointUuid__contains': {
          value: opts['endpointUuidContains'],
          collectionFormat: 'csv'
        },
        'endpointTypes': {
          value: opts['endpointTypes'],
          collectionFormat: 'csv'
        },
        'endpointId__contains': {
          value: opts['endpointIdContains'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'lastScanResults': {
          value: opts['lastScanResults'],
          collectionFormat: 'csv'
        },
        'applicationVersions': {
          value: opts['applicationVersions'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = AutoCompleteResponseSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/private/application-management/risks/endpoints/filters-autocomplete', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiPrivateApplicationManagementRisksEndpointsFiltersCountGet operation.
     * @callback module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksEndpointsFiltersCountGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CountFiltersResponseSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Count Risky Endpoints by Filters
     * Show a count of risky endpoints for each filter value.
     * @param {Object} opts Optional parameters
     * @param {Date} opts.detectionDateLt Application detection date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.domains Included endpoint domains
     * @param {Array.<String>} opts.statusMessageContains Free-text filter by status message (supports multiple values). Available with Ranger Insights. Example: \"assigned to john,top priority\".
     * @param {Array.<String>} opts.statuses Included statuses. Available with Ranger Insights.
     * @param {Array.<String>} opts.osTypes Included OS types
     * @param {Date} opts.lastScanDateLt Last scan date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.lastScanDateBetween Date range for last scan date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<String>} opts.osVersions Included OS versions
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {Date} opts.lastScanDateLte Last scan date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {Number} opts.daysFromDetection Days from application detection, e.g. 12 days or more. Example: \"12\".
     * @param {Array.<String>} opts.applicationIds Included application versions by id
     * @param {Date} opts.detectionDateGte Application detection date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.endpointNameContains Free-text filter by endpoint name (supports multiple values). Example: \"Office,Test\".
     * @param {Date} opts.lastScanDateGt Last scan date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.ticketIdContains Free-text filter by ticket id. Available with Ranger Insights when using ticket integration. Example: \"ABC-123,ABCD-100\".
     * @param {Date} opts.detectionDateGt Application detection date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.detectionDateLte Application detection date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.daysToMitigationBetween Date range for days left to mitigation. Available with Ranger Insights when using ticket integration. Example: \"1-30\".
     * @param {String} opts.detectionDateBetween Date range for application detection date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<String>} opts.domainContains Free-text filter by domain (supports multiple values). Example: \"mybusiness,workgroup\".
     * @param {String} opts.applicationName Application name
     * @param {Array.<String>} opts.endpointUuidContains Free-text filter by endpoint uuid (supports multiple values)
     * @param {Array.<String>} opts.endpointTypes Included endpoint types
     * @param {Array.<String>} opts.endpointIdContains Free-text filter by endpoint id (supports multiple values)
     * @param {String} opts.applicationVendor Application vendor
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {Date} opts.lastScanDateGte Last scan date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<module:model/String>} opts.lastScanResults Included last scan results. Example: \"Succeeded\".
     * @param {Array.<String>} opts.applicationVersions Included application versions
     * @param {module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksEndpointsFiltersCountGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CountFiltersResponseSchemaMany200}
     */
    this.webApiPrivateApplicationManagementRisksEndpointsFiltersCountGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'detectionDate__lt': opts['detectionDateLt'],
        'lastScanDate__lt': opts['lastScanDateLt'],
        'lastScanDate__between': opts['lastScanDateBetween'],
        'lastScanDate__lte': opts['lastScanDateLte'],
        'daysFromDetection': opts['daysFromDetection'],
        'detectionDate__gte': opts['detectionDateGte'],
        'lastScanDate__gt': opts['lastScanDateGt'],
        'detectionDate__gt': opts['detectionDateGt'],
        'detectionDate__lte': opts['detectionDateLte'],
        'daysToMitigation__between': opts['daysToMitigationBetween'],
        'detectionDate__between': opts['detectionDateBetween'],
        'applicationName': opts['applicationName'],
        'applicationVendor': opts['applicationVendor'],
        'lastScanDate__gte': opts['lastScanDateGte'],
      };
      var collectionQueryParams = {
        'domains': {
          value: opts['domains'],
          collectionFormat: 'csv'
        },
        'statusMessage__contains': {
          value: opts['statusMessageContains'],
          collectionFormat: 'csv'
        },
        'statuses': {
          value: opts['statuses'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'osVersions': {
          value: opts['osVersions'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'applicationIds': {
          value: opts['applicationIds'],
          collectionFormat: 'csv'
        },
        'endpointName__contains': {
          value: opts['endpointNameContains'],
          collectionFormat: 'csv'
        },
        'ticketId__contains': {
          value: opts['ticketIdContains'],
          collectionFormat: 'csv'
        },
        'domain__contains': {
          value: opts['domainContains'],
          collectionFormat: 'csv'
        },
        'endpointUuid__contains': {
          value: opts['endpointUuidContains'],
          collectionFormat: 'csv'
        },
        'endpointTypes': {
          value: opts['endpointTypes'],
          collectionFormat: 'csv'
        },
        'endpointId__contains': {
          value: opts['endpointIdContains'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'lastScanResults': {
          value: opts['lastScanResults'],
          collectionFormat: 'csv'
        },
        'applicationVersions': {
          value: opts['applicationVersions'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = CountFiltersResponseSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/private/application-management/risks/endpoints/filters-count', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiPrivateApplicationManagementRisksEndpointsFreeTextFiltersGet operation.
     * @callback module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksEndpointsFreeTextFiltersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FreeTextFilterResponseSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Free-Text Filters
     * Get a metadata list of the available free-text filters.
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksEndpointsFreeTextFiltersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FreeTextFilterResponseSchemaMany200}
     */
    this.webApiPrivateApplicationManagementRisksEndpointsFreeTextFiltersGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = FreeTextFilterResponseSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/private/application-management/risks/endpoints/free-text-filters', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiPrivateApplicationManagementRisksExpandedGet operation.
     * @callback module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksExpandedGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21ApplicationManagementApplicationManagementSchemasRiskAdditionalDataSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Additional risk information
     * Get additional information about a selected risk
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {String} opts.id Id. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksExpandedGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21ApplicationManagementApplicationManagementSchemasRiskAdditionalDataSchemaMany200}
     */
    this.webApiPrivateApplicationManagementRisksExpandedGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'id': opts['id'],
      };
      var collectionQueryParams = {
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21ApplicationManagementApplicationManagementSchemasRiskAdditionalDataSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/private/application-management/risks/expanded', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiPrivateApplicationManagementRisksExportCsvExtendedGet operation.
     * @callback module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksExportCsvExtendedGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Risks Data Export
     * Export risks data to CSV.
     * @param {Object} opts Optional parameters
     * @param {Date} opts.detectionDateLt Application detection date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.sortBy sort by column - will be ignored
     * @param {Array.<String>} opts.applicationContains Free-text filter by application name and version (supports multiple values). Example: \"Office 1.1,Test\".
     * @param {Array.<String>} opts.vendors Included vendors. Example: \"Microsoft,Apple\".
     * @param {Array.<module:model/String>} opts.mitigationStatuses Filters by the application's highest mitigation status values. Available for VLN SKU. Example: \"Not mitigated,To be patched,On hold\".
     * @param {Array.<module:model/String>} opts.exploitedInTheWild Included exploited in the wild values. Available with Ranger Insights. Example: \"Unknown,Yes\".
     * @param {Array.<String>} opts.highestSeverities Included highest severities. Example: \"CRITICAL,HIGH\".
     * @param {Array.<String>} opts.sortOrder sort order will be ignored
     * @param {Array.<module:model/String>} opts.exploitCodeMaturity Included exploit code maturity values. Available with Ranger Insights. Example: \"Functional,High\".
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {Number} opts.daysFromDetection Days from application detection, e.g. 12 days or more. Example: \"12\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {Date} opts.detectionDateGte Application detection date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.endpointNameContains Free-text filter by endpoint name (supports multiple values). Example: \"Office,Test\".
     * @param {Array.<String>} opts.cveIdContains Free-text filter by CVE id (supports multiple values). Example: \"CVE-1234-5678\".
     * @param {Date} opts.detectionDateGt Application detection date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.detectionDateLte Application detection date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.detectionDateBetween Date range for application detection date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<module:model/String>} opts.remediationLevels Included remediation level values. Available with Ranger Insights. Example: \"Official Fix,Temporary Fix\".
     * @param {Array.<String>} opts.applicationTypes Application type. Available with Ranger Insights. Example: \"A,p,p,l,i,c,a,t,i,o,n\".
     * @param {Array.<String>} opts.endpointUuidContains Free-text filter by endpoint uuid (supports multiple values)
     * @param {Array.<String>} opts.vendorContains Free-text filter by vendor (supports multiple values). Example: \"Microsoft,Apple\".
     * @param {Array.<String>} opts.mostCommonStatuses Included most common status values. Available with Ranger Insights.
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksExportCsvExtendedGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiPrivateApplicationManagementRisksExportCsvExtendedGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'detectionDate__lt': opts['detectionDateLt'],
        'daysFromDetection': opts['daysFromDetection'],
        'detectionDate__gte': opts['detectionDateGte'],
        'detectionDate__gt': opts['detectionDateGt'],
        'detectionDate__lte': opts['detectionDateLte'],
        'detectionDate__between': opts['detectionDateBetween'],
      };
      var collectionQueryParams = {
        'sortBy': {
          value: opts['sortBy'],
          collectionFormat: 'csv'
        },
        'application__contains': {
          value: opts['applicationContains'],
          collectionFormat: 'csv'
        },
        'vendors': {
          value: opts['vendors'],
          collectionFormat: 'csv'
        },
        'mitigationStatuses': {
          value: opts['mitigationStatuses'],
          collectionFormat: 'csv'
        },
        'exploitedInTheWild': {
          value: opts['exploitedInTheWild'],
          collectionFormat: 'csv'
        },
        'highestSeverities': {
          value: opts['highestSeverities'],
          collectionFormat: 'csv'
        },
        'sortOrder': {
          value: opts['sortOrder'],
          collectionFormat: 'csv'
        },
        'exploitCodeMaturity': {
          value: opts['exploitCodeMaturity'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'endpointName__contains': {
          value: opts['endpointNameContains'],
          collectionFormat: 'csv'
        },
        'cveId__contains': {
          value: opts['cveIdContains'],
          collectionFormat: 'csv'
        },
        'remediationLevels': {
          value: opts['remediationLevels'],
          collectionFormat: 'csv'
        },
        'applicationTypes': {
          value: opts['applicationTypes'],
          collectionFormat: 'csv'
        },
        'endpointUuid__contains': {
          value: opts['endpointUuidContains'],
          collectionFormat: 'csv'
        },
        'vendor__contains': {
          value: opts['vendorContains'],
          collectionFormat: 'csv'
        },
        'mostCommonStatuses': {
          value: opts['mostCommonStatuses'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/private/application-management/risks/export/csv-extended', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiPrivateApplicationManagementRisksFiltersAutocompleteGet operation.
     * @callback module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksFiltersAutocompleteGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AutoCompleteResponseSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Auto Complete
     * Given an input text, returns auto-complete suggestions that match the text for the selected filter field.
     * @param {module:model/String} key Search field key. Example: \"cveId__contains\".
     * @param {String} text Search term text
     * @param {Object} opts Optional parameters
     * @param {Date} opts.detectionDateLt CVE detection date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.riskUpdatedDateGt Significant CVE updates after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.domains Included network domains. Example: \"mybusiness,workgroup\".
     * @param {Array.<module:model/String>} opts.analystVerdict Include Default(not edited)/ False Positives / Added CVEs for Vulnerabilities. Example: \"Default,False Positive,Added CVE\".
     * @param {Number} opts.limit Limit number of returned items. Example: \"5\".
     * @param {Date} opts.riskUpdatedDateGte Significant CVE updates after or at this timestamp. Recommended for fetching delta-changes. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.applicationNames Included application names. Example: \"Office 1.1,Test\".
     * @param {Date} opts.publishedDateGt CVE published date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.applicationVendorContains Free-text filter by vendor (supports multiple values). Example: \"Microsoft,Apple\".
     * @param {Array.<String>} opts.applicationContains Free-text filter by application name and version (supports multiple values). Example: \"Office 1.1,Test\".
     * @param {Boolean} opts.includeRemovals Include also removed CVEs in the results
     * @param {Array.<String>} opts.exploitedInTheWild Included exploited in the wild values. Available for VLN SKU. Example: \"EXPLOITED_UNKNOWN,YES\".
     * @param {Array.<module:model/String>} opts.mitigationStatus Filters by the application's mitigation status values.Available for VLN SKU. Example: \"Not mitigated,To be patched,On hold\".
     * @param {Array.<String>} opts.osTypes Included OS types
     * @param {Array.<String>} opts.severities Included severities. Example: \"CRITICAL,HIGH\".
     * @param {Date} opts.publishedDateLte CVE published date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.vendors Included vendors. Example: \"Microsoft,Apple\".
     * @param {Array.<String>} opts.osVersions Included OS versions
     * @param {Date} opts.publishedDateLt CVE published date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.exploitCodeMaturity Included exploit code maturity values. Available for VLN SKU. Example: \"FUNCTIONAL,HIGH\".
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {String} opts.publishedDateBetween Date range for CVE publish date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {Number} opts.daysFromCveDetection Days from CVE detection, e.g. 12 days or more. Example: \"12\".
     * @param {Date} opts.detectionDateGte CVE detection date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.endpointNameContains Free-text filter by endpoint name (supports multiple values). Example: \"Office,Test\".
     * @param {Array.<String>} opts.cveIdContains Free-text filter by CVE id (supports multiple values). Example: \"CVE-1234-5678\".
     * @param {Date} opts.detectionDateGt CVE detection date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.detectionDateLte CVE detection date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.detectionDateBetween Date range for CVE detection date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Date} opts.riskUpdatedDateLte Significant CVE updates before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.domainContains Free-text filter by domain (supports multiple values). Example: \"mybusiness,workgroup\".
     * @param {Array.<String>} opts.remediationLevels Included remediation level values. Available for VLN SKU. Example: \"OFFICIAL_FIX,TEMPORARY_FIX\".
     * @param {String} opts.riskUpdatedDateBetween Significant CVE updates within this date range(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<String>} opts.endpointTypes Included endpoint types
     * @param {Array.<String>} opts.reportConfidence Included report confidence values. Available for VLN SKU. Example: \"REASONABLE,CONFIRMED\".
     * @param {Date} opts.publishedDateGte CVE published date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.riskUpdatedDateLt Significant CVE updates before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {String} opts.riskScoreBetween Risk score (inclusive). Available for VLN SKU. Example: \"5-8.9\".
     * @param {Array.<module:model/String>} opts.lastScanResults Included last scan results. Example: \"Succeeded\".
     * @param {module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksFiltersAutocompleteGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AutoCompleteResponseSchema200}
     */
    this.webApiPrivateApplicationManagementRisksFiltersAutocompleteGet = function(key, text, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'key' is set
      if (key === undefined || key === null) {
        throw new Error("Missing the required parameter 'key' when calling webApiPrivateApplicationManagementRisksFiltersAutocompleteGet");
      }

      // verify the required parameter 'text' is set
      if (text === undefined || text === null) {
        throw new Error("Missing the required parameter 'text' when calling webApiPrivateApplicationManagementRisksFiltersAutocompleteGet");
      }


      var pathParams = {
      };
      var queryParams = {
        'detectionDate__lt': opts['detectionDateLt'],
        'riskUpdatedDate__gt': opts['riskUpdatedDateGt'],
        'key': key,
        'limit': opts['limit'],
        'text': text,
        'riskUpdatedDate__gte': opts['riskUpdatedDateGte'],
        'publishedDate__gt': opts['publishedDateGt'],
        'includeRemovals': opts['includeRemovals'],
        'publishedDate__lte': opts['publishedDateLte'],
        'publishedDate__lt': opts['publishedDateLt'],
        'publishedDate__between': opts['publishedDateBetween'],
        'daysFromCveDetection': opts['daysFromCveDetection'],
        'detectionDate__gte': opts['detectionDateGte'],
        'detectionDate__gt': opts['detectionDateGt'],
        'detectionDate__lte': opts['detectionDateLte'],
        'detectionDate__between': opts['detectionDateBetween'],
        'riskUpdatedDate__lte': opts['riskUpdatedDateLte'],
        'riskUpdatedDate__between': opts['riskUpdatedDateBetween'],
        'publishedDate__gte': opts['publishedDateGte'],
        'riskUpdatedDate__lt': opts['riskUpdatedDateLt'],
        'riskScore__between': opts['riskScoreBetween'],
      };
      var collectionQueryParams = {
        'domains': {
          value: opts['domains'],
          collectionFormat: 'csv'
        },
        'analystVerdict': {
          value: opts['analystVerdict'],
          collectionFormat: 'csv'
        },
        'applicationNames': {
          value: opts['applicationNames'],
          collectionFormat: 'csv'
        },
        'applicationVendor__contains': {
          value: opts['applicationVendorContains'],
          collectionFormat: 'csv'
        },
        'application__contains': {
          value: opts['applicationContains'],
          collectionFormat: 'csv'
        },
        'exploitedInTheWild': {
          value: opts['exploitedInTheWild'],
          collectionFormat: 'csv'
        },
        'mitigationStatus': {
          value: opts['mitigationStatus'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'severities': {
          value: opts['severities'],
          collectionFormat: 'csv'
        },
        'vendors': {
          value: opts['vendors'],
          collectionFormat: 'csv'
        },
        'osVersions': {
          value: opts['osVersions'],
          collectionFormat: 'csv'
        },
        'exploitCodeMaturity': {
          value: opts['exploitCodeMaturity'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'endpointName__contains': {
          value: opts['endpointNameContains'],
          collectionFormat: 'csv'
        },
        'cveId__contains': {
          value: opts['cveIdContains'],
          collectionFormat: 'csv'
        },
        'domain__contains': {
          value: opts['domainContains'],
          collectionFormat: 'csv'
        },
        'remediationLevels': {
          value: opts['remediationLevels'],
          collectionFormat: 'csv'
        },
        'endpointTypes': {
          value: opts['endpointTypes'],
          collectionFormat: 'csv'
        },
        'reportConfidence': {
          value: opts['reportConfidence'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'lastScanResults': {
          value: opts['lastScanResults'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = AutoCompleteResponseSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/private/application-management/risks/filters-autocomplete', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiPrivateApplicationManagementRisksFiltersCountGet operation.
     * @callback module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksFiltersCountGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CountFiltersResponseSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Count Risks by Filters
     * Show a count of risks for each filter value.
     * @param {Object} opts Optional parameters
     * @param {Date} opts.detectionDateLt CVE detection date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.riskUpdatedDateGt Significant CVE updates after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.domains Included network domains. Example: \"mybusiness,workgroup\".
     * @param {Array.<module:model/String>} opts.analystVerdict Include Default(not edited)/ False Positives / Added CVEs for Vulnerabilities. Example: \"Default,False Positive,Added CVE\".
     * @param {Date} opts.riskUpdatedDateGte Significant CVE updates after or at this timestamp. Recommended for fetching delta-changes. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.applicationNames Included application names. Example: \"Office 1.1,Test\".
     * @param {Date} opts.publishedDateGt CVE published date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.applicationVendorContains Free-text filter by vendor (supports multiple values). Example: \"Microsoft,Apple\".
     * @param {Array.<String>} opts.applicationContains Free-text filter by application name and version (supports multiple values). Example: \"Office 1.1,Test\".
     * @param {Boolean} opts.includeRemovals Include also removed CVEs in the results
     * @param {Array.<String>} opts.exploitedInTheWild Included exploited in the wild values. Available for VLN SKU. Example: \"EXPLOITED_UNKNOWN,YES\".
     * @param {Array.<module:model/String>} opts.mitigationStatus Filters by the application's mitigation status values.Available for VLN SKU. Example: \"Not mitigated,To be patched,On hold\".
     * @param {Array.<String>} opts.osTypes Included OS types
     * @param {Array.<String>} opts.severities Included severities. Example: \"CRITICAL,HIGH\".
     * @param {Date} opts.publishedDateLte CVE published date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.vendors Included vendors. Example: \"Microsoft,Apple\".
     * @param {Array.<String>} opts.osVersions Included OS versions
     * @param {Date} opts.publishedDateLt CVE published date before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.exploitCodeMaturity Included exploit code maturity values. Available for VLN SKU. Example: \"FUNCTIONAL,HIGH\".
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {String} opts.publishedDateBetween Date range for CVE publish date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {Number} opts.daysFromCveDetection Days from CVE detection, e.g. 12 days or more. Example: \"12\".
     * @param {Date} opts.detectionDateGte CVE detection date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.endpointNameContains Free-text filter by endpoint name (supports multiple values). Example: \"Office,Test\".
     * @param {Array.<String>} opts.cveIdContains Free-text filter by CVE id (supports multiple values). Example: \"CVE-1234-5678\".
     * @param {Date} opts.detectionDateGt CVE detection date after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.detectionDateLte CVE detection date before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.detectionDateBetween Date range for CVE detection date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Date} opts.riskUpdatedDateLte Significant CVE updates before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.domainContains Free-text filter by domain (supports multiple values). Example: \"mybusiness,workgroup\".
     * @param {Array.<String>} opts.remediationLevels Included remediation level values. Available for VLN SKU. Example: \"OFFICIAL_FIX,TEMPORARY_FIX\".
     * @param {String} opts.riskUpdatedDateBetween Significant CVE updates within this date range(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<String>} opts.endpointTypes Included endpoint types
     * @param {Array.<String>} opts.reportConfidence Included report confidence values. Available for VLN SKU. Example: \"REASONABLE,CONFIRMED\".
     * @param {Date} opts.publishedDateGte CVE published date after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.riskUpdatedDateLt Significant CVE updates before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {String} opts.riskScoreBetween Risk score (inclusive). Available for VLN SKU. Example: \"5-8.9\".
     * @param {Array.<module:model/String>} opts.lastScanResults Included last scan results. Example: \"Succeeded\".
     * @param {module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksFiltersCountGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CountFiltersResponseSchemaMany200}
     */
    this.webApiPrivateApplicationManagementRisksFiltersCountGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'detectionDate__lt': opts['detectionDateLt'],
        'riskUpdatedDate__gt': opts['riskUpdatedDateGt'],
        'riskUpdatedDate__gte': opts['riskUpdatedDateGte'],
        'publishedDate__gt': opts['publishedDateGt'],
        'includeRemovals': opts['includeRemovals'],
        'publishedDate__lte': opts['publishedDateLte'],
        'publishedDate__lt': opts['publishedDateLt'],
        'publishedDate__between': opts['publishedDateBetween'],
        'daysFromCveDetection': opts['daysFromCveDetection'],
        'detectionDate__gte': opts['detectionDateGte'],
        'detectionDate__gt': opts['detectionDateGt'],
        'detectionDate__lte': opts['detectionDateLte'],
        'detectionDate__between': opts['detectionDateBetween'],
        'riskUpdatedDate__lte': opts['riskUpdatedDateLte'],
        'riskUpdatedDate__between': opts['riskUpdatedDateBetween'],
        'publishedDate__gte': opts['publishedDateGte'],
        'riskUpdatedDate__lt': opts['riskUpdatedDateLt'],
        'riskScore__between': opts['riskScoreBetween'],
      };
      var collectionQueryParams = {
        'domains': {
          value: opts['domains'],
          collectionFormat: 'csv'
        },
        'analystVerdict': {
          value: opts['analystVerdict'],
          collectionFormat: 'csv'
        },
        'applicationNames': {
          value: opts['applicationNames'],
          collectionFormat: 'csv'
        },
        'applicationVendor__contains': {
          value: opts['applicationVendorContains'],
          collectionFormat: 'csv'
        },
        'application__contains': {
          value: opts['applicationContains'],
          collectionFormat: 'csv'
        },
        'exploitedInTheWild': {
          value: opts['exploitedInTheWild'],
          collectionFormat: 'csv'
        },
        'mitigationStatus': {
          value: opts['mitigationStatus'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'severities': {
          value: opts['severities'],
          collectionFormat: 'csv'
        },
        'vendors': {
          value: opts['vendors'],
          collectionFormat: 'csv'
        },
        'osVersions': {
          value: opts['osVersions'],
          collectionFormat: 'csv'
        },
        'exploitCodeMaturity': {
          value: opts['exploitCodeMaturity'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'endpointName__contains': {
          value: opts['endpointNameContains'],
          collectionFormat: 'csv'
        },
        'cveId__contains': {
          value: opts['cveIdContains'],
          collectionFormat: 'csv'
        },
        'domain__contains': {
          value: opts['domainContains'],
          collectionFormat: 'csv'
        },
        'remediationLevels': {
          value: opts['remediationLevels'],
          collectionFormat: 'csv'
        },
        'endpointTypes': {
          value: opts['endpointTypes'],
          collectionFormat: 'csv'
        },
        'reportConfidence': {
          value: opts['reportConfidence'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'lastScanResults': {
          value: opts['lastScanResults'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = CountFiltersResponseSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/private/application-management/risks/filters-count', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiPrivateApplicationManagementRisksFreeTextFiltersGet operation.
     * @callback module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksFreeTextFiltersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FreeTextFilterResponseSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Free-Text Filters
     * Get a metadata list of the available free-text filters.
     * @param {module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksFreeTextFiltersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FreeTextFilterResponseSchemaMany200}
     */
    this.webApiPrivateApplicationManagementRisksFreeTextFiltersGet = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = FreeTextFilterResponseSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/private/application-management/risks/free-text-filters', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiPrivateApplicationManagementRisksidGet operation.
     * @callback module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksidGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21ApplicationManagementApplicationManagementSchemasRiskDetailSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Risk detail
     * Get detailed information about a selected risk
     * @param {String} id Id. Example: \"225494730938493804\".
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.accountIds Single Account ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.siteIds Single Site ID to filter by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.groupIds Single Group ID to filter by. Example: \"225494730938493804\".
     * @param {module:api/ApplicationManagementApi~webApiPrivateApplicationManagementRisksidGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21ApplicationManagementApplicationManagementSchemasRiskDetailSchema200}
     */
    this.webApiPrivateApplicationManagementRisksidGet = function(id, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling webApiPrivateApplicationManagementRisksidGet");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21ApplicationManagementApplicationManagementSchemasRiskDetailSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/private/application-management/risks/{id}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiPrivateApplicationManagementScanGet operation.
     * @callback module:api/ApplicationManagementApi~webApiPrivateApplicationManagementScanGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21ApplicationManagementApplicationManagementSchemasApplicationManagementScanSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Scan availability.
     * Get information about application vulnerability scan times and availability.
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.accountIds account scope ID to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.siteIds site scope ID to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/ApplicationManagementApi~webApiPrivateApplicationManagementScanGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21ApplicationManagementApplicationManagementSchemasApplicationManagementScanSchema200}
     */
    this.webApiPrivateApplicationManagementScanGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21ApplicationManagementApplicationManagementSchemasApplicationManagementScanSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/private/application-management/scan', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiPrivateApplicationManagementSkuGet operation.
     * @callback module:api/ApplicationManagementApi~webApiPrivateApplicationManagementSkuGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21ApplicationManagementApplicationManagementSchemasApplicationManagementSkuGetSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get application management sku
     * Get whether application management sku is available for the specify scopes.
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.accountIds account scope IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.siteIds site scope IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.groupIds group scope to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/ApplicationManagementApi~webApiPrivateApplicationManagementSkuGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21ApplicationManagementApplicationManagementSchemasApplicationManagementSkuGetSchema200}
     */
    this.webApiPrivateApplicationManagementSkuGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21ApplicationManagementApplicationManagementSchemasApplicationManagementSkuGetSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/private/application-management/sku', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
