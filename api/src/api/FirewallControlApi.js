/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AffectedResultsSchema200', 'model/FirewallControlSchemasChangeRulesTagsSchema', 'model/FirewallControlSchemasCopyRuleSchema', 'model/FirewallControlSchemasEnableRuleSchema', 'model/FirewallControlSchemasFirewallSchema200', 'model/FirewallControlSchemasFirewallSchemaMany200', 'model/FirewallControlSchemasFirewallSettingsSchema200', 'model/FirewallControlSchemasPostFirewallSchema', 'model/FirewallControlSchemasPostFirewallSettingsSchema', 'model/FirewallControlSchemasProtocolSchemaMany200', 'model/FirewallControlSchemasPutFirewallSchema', 'model/FirewallControlSchemasReorderSchema', 'model/FirewallControlSchemasRuleDeleteSchema', 'model/FirewallControlSchemasSetLocationSchema', 'model/NoDataSchema400', 'model/NoDataSchema401', 'model/NoDataSchema404', 'model/SuccessResponseSchema200'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/AffectedResultsSchema200'), require('../model/FirewallControlSchemasChangeRulesTagsSchema'), require('../model/FirewallControlSchemasCopyRuleSchema'), require('../model/FirewallControlSchemasEnableRuleSchema'), require('../model/FirewallControlSchemasFirewallSchema200'), require('../model/FirewallControlSchemasFirewallSchemaMany200'), require('../model/FirewallControlSchemasFirewallSettingsSchema200'), require('../model/FirewallControlSchemasPostFirewallSchema'), require('../model/FirewallControlSchemasPostFirewallSettingsSchema'), require('../model/FirewallControlSchemasProtocolSchemaMany200'), require('../model/FirewallControlSchemasPutFirewallSchema'), require('../model/FirewallControlSchemasReorderSchema'), require('../model/FirewallControlSchemasRuleDeleteSchema'), require('../model/FirewallControlSchemasSetLocationSchema'), require('../model/NoDataSchema400'), require('../model/NoDataSchema401'), require('../model/NoDataSchema404'), require('../model/SuccessResponseSchema200'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.FirewallControlApi = factory(root.S1MgmtApi.ApiClient, root.S1MgmtApi.AffectedResultsSchema200, root.S1MgmtApi.FirewallControlSchemasChangeRulesTagsSchema, root.S1MgmtApi.FirewallControlSchemasCopyRuleSchema, root.S1MgmtApi.FirewallControlSchemasEnableRuleSchema, root.S1MgmtApi.FirewallControlSchemasFirewallSchema200, root.S1MgmtApi.FirewallControlSchemasFirewallSchemaMany200, root.S1MgmtApi.FirewallControlSchemasFirewallSettingsSchema200, root.S1MgmtApi.FirewallControlSchemasPostFirewallSchema, root.S1MgmtApi.FirewallControlSchemasPostFirewallSettingsSchema, root.S1MgmtApi.FirewallControlSchemasProtocolSchemaMany200, root.S1MgmtApi.FirewallControlSchemasPutFirewallSchema, root.S1MgmtApi.FirewallControlSchemasReorderSchema, root.S1MgmtApi.FirewallControlSchemasRuleDeleteSchema, root.S1MgmtApi.FirewallControlSchemasSetLocationSchema, root.S1MgmtApi.NoDataSchema400, root.S1MgmtApi.NoDataSchema401, root.S1MgmtApi.NoDataSchema404, root.S1MgmtApi.SuccessResponseSchema200);
  }
}(this, function(ApiClient, AffectedResultsSchema200, FirewallControlSchemasChangeRulesTagsSchema, FirewallControlSchemasCopyRuleSchema, FirewallControlSchemasEnableRuleSchema, FirewallControlSchemasFirewallSchema200, FirewallControlSchemasFirewallSchemaMany200, FirewallControlSchemasFirewallSettingsSchema200, FirewallControlSchemasPostFirewallSchema, FirewallControlSchemasPostFirewallSettingsSchema, FirewallControlSchemasProtocolSchemaMany200, FirewallControlSchemasPutFirewallSchema, FirewallControlSchemasReorderSchema, FirewallControlSchemasRuleDeleteSchema, FirewallControlSchemasSetLocationSchema, NoDataSchema400, NoDataSchema401, NoDataSchema404, SuccessResponseSchema200) {
  'use strict';

  /**
   * FirewallControl service.
   * @module api/FirewallControlApi
   * @version 2.1
   */

  /**
   * Constructs a new FirewallControlApi. 
   * @alias module:api/FirewallControlApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the webApiFirewallControlAddTagsPost operation.
     * @callback module:api/FirewallControlApi~webApiFirewallControlAddTagsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add Rule Tags
     * Create a Firewall Rule tag. <br>Create tags to represent Firewall policies - a set of rules in a specific order. After you create the tag, add rules to it.<br>Notes:<br>* Tags apply to a scope and cannot be linked to rules from different scopes.<br>* Tags must be 2 to 256 characters.
     * @param {Object} opts Optional parameters
     * @param {module:model/FirewallControlSchemasChangeRulesTagsSchema} opts.body 
     * @param {module:api/FirewallControlApi~webApiFirewallControlAddTagsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiFirewallControlAddTagsPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/firewall-control/add-tags', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiFirewallControlConfigurationGet operation.
     * @callback module:api/FirewallControlApi~webApiFirewallControlConfigurationGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FirewallControlSchemasFirewallSettingsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Configuration
     * Get the Firewall Control configuration for a given scope.<br>To filter the results for a scope:<br>* Global - Make sure \"tenant\" is \"true\" and no other scope ID is given.<br>* Account - Make sure \"tenant\" is \"false\" and at least one Account ID is given.<br>* Site - Make sure \"tenant\" is \"false\" and at least one Site ID is given.<br>The response shows if Firewall Control is enabled for the scope, if Location Awareness is enabled, the higher scope from which this scope inherited the configuration, and whether a lower scope inherits this configuration.<br>Firewall Control requires Control SKU.
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Boolean} opts.tenant Indicates a tenant scope request
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/FirewallControlApi~webApiFirewallControlConfigurationGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FirewallControlSchemasFirewallSettingsSchema200}
     */
    this.webApiFirewallControlConfigurationGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'tenant': opts['tenant'],
      };
      var collectionQueryParams = {
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = FirewallControlSchemasFirewallSettingsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/firewall-control/configuration', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiFirewallControlConfigurationPut operation.
     * @callback module:api/FirewallControlApi~webApiFirewallControlConfigurationPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FirewallControlSchemasFirewallSettingsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Configuration
     * Change the Firewall Control configuration for a given scope.  <br>To get the ID of a scope, run \"accounts\", \"sites\", or \"groups\". To change the Global configuration, leave the filters empty and set \"tenant\" to \"true\". In the Body, you can set if Firewall Control is enabled for the scope, if Location Awareness is enabled, the higher scope from which this scope inherits the configuration (\"Global\" or a scope ID), whether the lower scopes inherit this configuration, and whether blocked actions are reported.<br>Firewall Control requires Control SKU.
     * @param {Object} opts Optional parameters
     * @param {module:model/FirewallControlSchemasPostFirewallSettingsSchema} opts.body 
     * @param {module:api/FirewallControlApi~webApiFirewallControlConfigurationPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FirewallControlSchemasFirewallSettingsSchema200}
     */
    this.webApiFirewallControlConfigurationPut = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = FirewallControlSchemasFirewallSettingsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/firewall-control/configuration', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiFirewallControlCopyRulesPost operation.
     * @callback module:api/FirewallControlApi~webApiFirewallControlCopyRulesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Copy Rules
     * Copy a set of rules to other scopes. <br>In the filter of the body, enter the properties to define the source. In the data field of the body, define the targets by ID. To get a scope ID, run 'accounts', 'sites', or 'groups'.
     * @param {Object} opts Optional parameters
     * @param {module:model/FirewallControlSchemasCopyRuleSchema} opts.body 
     * @param {module:api/FirewallControlApi~webApiFirewallControlCopyRulesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiFirewallControlCopyRulesPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/firewall-control/copy-rules', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiFirewallControlDelete operation.
     * @callback module:api/FirewallControlApi~webApiFirewallControlDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Rules
     * Delete Firewall Control rules that match the filter.
     * @param {Object} opts Optional parameters
     * @param {module:model/FirewallControlSchemasRuleDeleteSchema} opts.body 
     * @param {module:api/FirewallControlApi~webApiFirewallControlDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiFirewallControlDelete = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/firewall-control', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiFirewallControlEnablePut operation.
     * @callback module:api/FirewallControlApi~webApiFirewallControlEnablePutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Enable/Disable Rules
     * Change the status of a set of Firewall Control rules that match the filter to \"Enabled\" or \"Disabled\". In one request, you can set one status or the other.
     * @param {Object} opts Optional parameters
     * @param {module:model/FirewallControlSchemasEnableRuleSchema} opts.body 
     * @param {module:api/FirewallControlApi~webApiFirewallControlEnablePutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiFirewallControlEnablePut = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/firewall-control/enable', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiFirewallControlExportGet operation.
     * @callback module:api/FirewallControlApi~webApiFirewallControlExportGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Export Rules
     * Export Firewall Control rules that match the filter to a JSON file from a scope specified by ID (run \"accounts\", \"sites\", \"groups\", or leave the scope empty and set \"tenant\" to \"true\") and import them to another scope (with the \"import\" command. <br>Firewall Control requires Control SKU.
     * @param {Object} opts Optional parameters
     * @param {Date} opts.createdAtGt Return firewall rules created after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.nameContains Free-text filter by the Rule name (supports multiple values)
     * @param {Array.<String>} opts.serviceContains Free-text filter by service (supports multiple values)
     * @param {Array.<module:model/String>} opts.actions Return firewall rules with the filtered action. Example: \"Allow\".
     * @param {Array.<String>} opts.tagIds Filter by associated tags. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<module:model/String>} opts.directions Return firewall rules with the filtered directions. Example: \"any\".
     * @param {Array.<String>} opts.protocols Return firewall rules with the filtered protocols.
     * @param {Array.<String>} opts.ids List of ids to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {String} opts.query Free text search on name, tag, application, protocol
     * @param {Date} opts.createdAtLt Return firewall rules created before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<module:model/String>} opts.osTypes Return firewall rules with the filtered os_type. Example: \"windows\".
     * @param {Date} opts.createdAtLte Return firewall rules created before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<module:model/String>} opts.scopes Return only firewall rules in this scope. Example: \"site\".
     * @param {Array.<module:model/String>} opts.statuses Return firewall rules with the filtered status. Example: \"Enabled\".
     * @param {Array.<String>} opts.protocolContains Free-text filter by protocol (supports multiple values)
     * @param {Array.<String>} opts.applicationContains Free-text filter by application (supports multiple values)
     * @param {Array.<String>} opts.locationIds Filter by associated locations. Example: \"225494730938493804,225494730938493915\".
     * @param {Boolean} opts.tenant Indicates a tenant scope request
     * @param {String} opts.createdAtBetween Return firewall rules created within this range (inclusive). Example: \"1514978764288-1514978999999\".
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Date} opts.createdAtGte Return firewall rules created after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {String} opts.name Return firewall rules with the filtered name.
     * @param {Array.<String>} opts.tagNameContains Free-text filter by the Tag name (supports multiple values)
     * @param {Array.<String>} opts.applications Return firewall rules with the filtered firewall class.
     * @param {module:api/FirewallControlApi~webApiFirewallControlExportGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiFirewallControlExportGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'createdAt__gt': opts['createdAtGt'],
        'query': opts['query'],
        'createdAt__lt': opts['createdAtLt'],
        'createdAt__lte': opts['createdAtLte'],
        'tenant': opts['tenant'],
        'createdAt__between': opts['createdAtBetween'],
        'createdAt__gte': opts['createdAtGte'],
        'name': opts['name'],
      };
      var collectionQueryParams = {
        'name__contains': {
          value: opts['nameContains'],
          collectionFormat: 'csv'
        },
        'service__contains': {
          value: opts['serviceContains'],
          collectionFormat: 'csv'
        },
        'actions': {
          value: opts['actions'],
          collectionFormat: 'csv'
        },
        'tagIds': {
          value: opts['tagIds'],
          collectionFormat: 'csv'
        },
        'directions': {
          value: opts['directions'],
          collectionFormat: 'csv'
        },
        'protocols': {
          value: opts['protocols'],
          collectionFormat: 'csv'
        },
        'ids': {
          value: opts['ids'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'scopes': {
          value: opts['scopes'],
          collectionFormat: 'csv'
        },
        'statuses': {
          value: opts['statuses'],
          collectionFormat: 'csv'
        },
        'protocol__contains': {
          value: opts['protocolContains'],
          collectionFormat: 'csv'
        },
        'application__contains': {
          value: opts['applicationContains'],
          collectionFormat: 'csv'
        },
        'locationIds': {
          value: opts['locationIds'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'tagName__contains': {
          value: opts['tagNameContains'],
          collectionFormat: 'csv'
        },
        'applications': {
          value: opts['applications'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/firewall-control/export', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiFirewallControlGet operation.
     * @callback module:api/FirewallControlApi~webApiFirewallControlGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FirewallControlSchemasFirewallSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Firewall Rules
     * Get the Firewall Control rules for a scope specified by ID (run \"accounts\", \"sites, \"groups\", or set \"tenant\" to \"true\") that match the filter. <br>The response will be quite long because it includes all the rule properties, thus at least one of these filters is required: action, status, osType, name, or scope ID.
     * @param {Object} opts Optional parameters
     * @param {String} opts.cursor Cursor position returned by the last request. Use to iterate over more than 1000 items. Example: \"YWdlbnRfaWQ6NTgwMjkzODE=\". (default to null)
     * @param {Date} opts.createdAtGt Return firewall rules created after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.nameContains Free-text filter by the Rule name (supports multiple values)
     * @param {Array.<String>} opts.serviceContains Free-text filter by service (supports multiple values)
     * @param {Array.<module:model/String>} opts.actions Return firewall rules with the filtered action. Example: \"Allow\".
     * @param {Array.<String>} opts.tagIds Filter by associated tags. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<module:model/String>} opts.directions Return firewall rules with the filtered directions. Example: \"any\".
     * @param {Array.<String>} opts.protocols Return firewall rules with the filtered protocols.
     * @param {String} opts.query Free text search on name, tag, application, protocol
     * @param {Array.<String>} opts.ids List of ids to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Boolean} opts.countOnly If true, only total number of items will be returned, without any of the actual objects. (default to false)
     * @param {Date} opts.createdAtLt Return firewall rules created before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Number} opts.limit Limit number of returned items (1-1000). Example: \"10\". (default to 10)
     * @param {Array.<module:model/String>} opts.osTypes Return firewall rules with the filtered os_type. Example: \"windows\".
     * @param {Number} opts.skip Skip first number of items (0-1000). To iterate over more than 1000 items,  use \"cursor\". Example: \"150\".
     * @param {Boolean} opts.skipCount If true, total number of items will not be calculated, which speeds up execution time. (default to null)
     * @param {module:model/String} opts.sortOrder Sort direction. Example: \"asc\". (default to null)
     * @param {Date} opts.createdAtLte Return firewall rules created before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<module:model/String>} opts.scopes Return only firewall rules in this scope. Example: \"site\".
     * @param {Array.<module:model/String>} opts.statuses Return firewall rules with the filtered status. Example: \"Enabled\".
     * @param {Array.<String>} opts.protocolContains Free-text filter by protocol (supports multiple values)
     * @param {Array.<String>} opts.applicationContains Free-text filter by application (supports multiple values)
     * @param {Boolean} opts.disablePagination If true, all rules for requested scope will be returned
     * @param {Array.<String>} opts.locationIds Filter by associated locations. Example: \"225494730938493804,225494730938493915\".
     * @param {module:model/String} opts.sortBy The column to sort the results by. Example: \"id\". (default to null)
     * @param {Boolean} opts.tenant Indicates a tenant scope request
     * @param {String} opts.createdAtBetween Return firewall rules created within this range (inclusive). Example: \"1514978764288-1514978999999\".
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Date} opts.createdAtGte Return firewall rules created after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {String} opts.name Return firewall rules with the filtered name.
     * @param {Array.<String>} opts.tagNameContains Free-text filter by the Tag name (supports multiple values)
     * @param {Array.<String>} opts.applications Return firewall rules with the filtered firewall class.
     * @param {module:api/FirewallControlApi~webApiFirewallControlGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FirewallControlSchemasFirewallSchemaMany200}
     */
    this.webApiFirewallControlGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'cursor': opts['cursor'],
        'createdAt__gt': opts['createdAtGt'],
        'query': opts['query'],
        'countOnly': opts['countOnly'],
        'createdAt__lt': opts['createdAtLt'],
        'limit': opts['limit'],
        'skip': opts['skip'],
        'skipCount': opts['skipCount'],
        'sortOrder': opts['sortOrder'],
        'createdAt__lte': opts['createdAtLte'],
        'disablePagination': opts['disablePagination'],
        'sortBy': opts['sortBy'],
        'tenant': opts['tenant'],
        'createdAt__between': opts['createdAtBetween'],
        'createdAt__gte': opts['createdAtGte'],
        'name': opts['name'],
      };
      var collectionQueryParams = {
        'name__contains': {
          value: opts['nameContains'],
          collectionFormat: 'csv'
        },
        'service__contains': {
          value: opts['serviceContains'],
          collectionFormat: 'csv'
        },
        'actions': {
          value: opts['actions'],
          collectionFormat: 'csv'
        },
        'tagIds': {
          value: opts['tagIds'],
          collectionFormat: 'csv'
        },
        'directions': {
          value: opts['directions'],
          collectionFormat: 'csv'
        },
        'protocols': {
          value: opts['protocols'],
          collectionFormat: 'csv'
        },
        'ids': {
          value: opts['ids'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'scopes': {
          value: opts['scopes'],
          collectionFormat: 'csv'
        },
        'statuses': {
          value: opts['statuses'],
          collectionFormat: 'csv'
        },
        'protocol__contains': {
          value: opts['protocolContains'],
          collectionFormat: 'csv'
        },
        'application__contains': {
          value: opts['applicationContains'],
          collectionFormat: 'csv'
        },
        'locationIds': {
          value: opts['locationIds'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'tagName__contains': {
          value: opts['tagNameContains'],
          collectionFormat: 'csv'
        },
        'applications': {
          value: opts['applications'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = FirewallControlSchemasFirewallSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/firewall-control', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiFirewallControlImportPost operation.
     * @callback module:api/FirewallControlApi~webApiFirewallControlImportPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SuccessResponseSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Import Rules
     * Import Firewall Control rules from an exported JSON file to scopes specified by ID (run \"accounts\", \"sites\", \"groups\", or leave the scope empty and set \"tenant\" to \"true\").<br>Firewall Control requires Control SKU, in the target and in the source.
     * @param {File} file File
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Boolean} opts.tenant Indicates a tenant scope request
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/FirewallControlApi~webApiFirewallControlImportPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SuccessResponseSchema200}
     */
    this.webApiFirewallControlImportPost = function(file, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'file' is set
      if (file === undefined || file === null) {
        throw new Error("Missing the required parameter 'file' when calling webApiFirewallControlImportPost");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
        'accountIds': this.apiClient.buildCollectionParam(opts['accountIds'], 'multi'),
        'groupIds': this.apiClient.buildCollectionParam(opts['groupIds'], 'multi'),
        'tenant': opts['tenant'],
        'siteIds': this.apiClient.buildCollectionParam(opts['siteIds'], 'multi'),
        'file': file
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['multipart/form-data'];
      var accepts = ['application/json'];
      var returnType = SuccessResponseSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/firewall-control/import', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiFirewallControlMoveRulesPost operation.
     * @callback module:api/FirewallControlApi~webApiFirewallControlMoveRulesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Move Rules
     * Remove Firewall Rules, defined with the ID of the rules (run 'firewall-control'), from scopes specified by ID (run 'accounts', 'sites', or 'groups') and add the rules to the scope IDs in the data field.<br>Firewall Control requires Control SKU.
     * @param {Object} opts Optional parameters
     * @param {module:model/FirewallControlSchemasCopyRuleSchema} opts.body 
     * @param {module:api/FirewallControlApi~webApiFirewallControlMoveRulesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiFirewallControlMoveRulesPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/firewall-control/move-rules', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiFirewallControlPost operation.
     * @callback module:api/FirewallControlApi~webApiFirewallControlPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FirewallControlSchemasFirewallSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Firewall Rule
     * Create a Firewall Control rule for a scope specified by ID (run \"accounts\", \"sites\", \"groups\", or set \"tenant\" to \"true\") and specific OS, to allow or block network traffic to matching endpoints.<br>You can create one clean-up rule, with the Action of Allow or Block and with no other parameters defined explicitly. Make this the default rule at the end of your rule list. Traffic that does not match other rules first will match this rule. If you do not have a clean-up rule to match all traffic, the default Firewall Control behavior is to allow traffic that is not explicitly blocked.<br>Firewall Control requires Control SKU.
     * @param {Object} opts Optional parameters
     * @param {module:model/FirewallControlSchemasPostFirewallSchema} opts.body 
     * @param {module:api/FirewallControlApi~webApiFirewallControlPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FirewallControlSchemasFirewallSchema200}
     */
    this.webApiFirewallControlPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = FirewallControlSchemasFirewallSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/firewall-control', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiFirewallControlProtocolsGet operation.
     * @callback module:api/FirewallControlApi~webApiFirewallControlProtocolsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FirewallControlSchemasProtocolSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Protocols
     * Get a list of protocols that can be used in Firewall Control rules.
     * @param {Object} opts Optional parameters
     * @param {String} opts.cursor Cursor position returned by the last request. Use to iterate over more than 1000 items. Example: \"YWdlbnRfaWQ6NTgwMjkzODE=\". (default to null)
     * @param {Number} opts.skip Skip first number of items (0-1000). To iterate over more than 1000 items,  use \"cursor\". Example: \"150\".
     * @param {Boolean} opts.skipCount If true, total number of items will not be calculated, which speeds up execution time. (default to null)
     * @param {Boolean} opts.disablePagination If true, all rules for requested scope will be returned
     * @param {module:model/String} opts.sortOrder Sort direction. Example: \"asc\". (default to null)
     * @param {module:model/String} opts.sortBy The column to sort the results by. Example: \"id\". (default to null)
     * @param {String} opts.query Full text search on protocols
     * @param {Boolean} opts.countOnly If true, only total number of items will be returned, without any of the actual objects. (default to false)
     * @param {Number} opts.limit Limit number of returned items (1-1000). Example: \"10\". (default to 10)
     * @param {module:api/FirewallControlApi~webApiFirewallControlProtocolsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FirewallControlSchemasProtocolSchemaMany200}
     */
    this.webApiFirewallControlProtocolsGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'cursor': opts['cursor'],
        'skip': opts['skip'],
        'skipCount': opts['skipCount'],
        'disablePagination': opts['disablePagination'],
        'sortOrder': opts['sortOrder'],
        'sortBy': opts['sortBy'],
        'query': opts['query'],
        'countOnly': opts['countOnly'],
        'limit': opts['limit'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = FirewallControlSchemasProtocolSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/firewall-control/protocols', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiFirewallControlRemoveTagsPost operation.
     * @callback module:api/FirewallControlApi~webApiFirewallControlRemoveTagsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove Rule Tags
     * Remove firewall tags from rules matching the filter.<br>Tags represent Firewall policies - a set of rules in a specific order. When you remove a rule with a tag, all scopes that subscribe to the tag get the change.
     * @param {Object} opts Optional parameters
     * @param {module:model/FirewallControlSchemasChangeRulesTagsSchema} opts.body 
     * @param {module:api/FirewallControlApi~webApiFirewallControlRemoveTagsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiFirewallControlRemoveTagsPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/firewall-control/remove-tags', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiFirewallControlReorderPut operation.
     * @callback module:api/FirewallControlApi~webApiFirewallControlReorderPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SuccessResponseSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reorder Rules
     * Change the order of rules for a scope  specified by ID (run \"accounts\", \"sites\", or \"groups\"). <br>The Agent looks at the rules based on their order in the Firewall Control policy, from the top to the bottom. First it goes through the Group rules, then the Site rules, then the Account rules, then the Global rules. When the Agent finds a rule that matches the parameters of the traffic, that rule is applied. The Agent does not continue to the lower rules in the list. Thus, the scope and the order of the rules is important.<br>Firewall Control requires Control SKU.
     * @param {Object} opts Optional parameters
     * @param {module:model/FirewallControlSchemasReorderSchema} opts.body 
     * @param {module:api/FirewallControlApi~webApiFirewallControlReorderPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SuccessResponseSchema200}
     */
    this.webApiFirewallControlReorderPut = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SuccessResponseSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/firewall-control/reorder', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiFirewallControlSetLocationPost operation.
     * @callback module:api/FirewallControlApi~webApiFirewallControlSetLocationPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Set Location
     * Set location attributes for a Location Aware Firewall Control rule. These rules are applied by Agents only if the network parameters of the endpoint match the properties of the location definition. To get a Location ID, run \"locations\". <br>Firewall Control requires Control SKU.
     * @param {Object} opts Optional parameters
     * @param {module:model/FirewallControlSchemasSetLocationSchema} opts.body 
     * @param {module:api/FirewallControlApi~webApiFirewallControlSetLocationPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiFirewallControlSetLocationPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/firewall-control/set-location', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiFirewallControlTagRulestagIdGet operation.
     * @callback module:api/FirewallControlApi~webApiFirewallControlTagRulestagIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FirewallControlSchemasFirewallSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Tag Firewall Rules
     * Get all Firewall rules linked to tag, regardless of inheritance mode. <br>To get the ID of a tag, run the firewall-control API (see Get Firewall Rules) and see tagIDs in the response.
     * @param {String} tagId Rule ID. Example: \"225494730938493804\".
     * @param {Object} opts Optional parameters
     * @param {String} opts.cursor Cursor position returned by the last request. Use to iterate over more than 1000 items. Example: \"YWdlbnRfaWQ6NTgwMjkzODE=\". (default to null)
     * @param {Date} opts.createdAtGt Return firewall rules created after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.nameContains Free-text filter by the Rule name (supports multiple values)
     * @param {Array.<String>} opts.serviceContains Free-text filter by service (supports multiple values)
     * @param {Array.<module:model/String>} opts.actions Return firewall rules with the filtered action. Example: \"Allow\".
     * @param {Array.<String>} opts.tagIds Filter by associated tags. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<module:model/String>} opts.directions Return firewall rules with the filtered directions. Example: \"any\".
     * @param {Array.<String>} opts.protocols Return firewall rules with the filtered protocols.
     * @param {String} opts.query Free text search on name, tag, application, protocol
     * @param {Array.<String>} opts.ids List of ids to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Boolean} opts.countOnly If true, only total number of items will be returned, without any of the actual objects. (default to false)
     * @param {Date} opts.createdAtLt Return firewall rules created before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Number} opts.limit Limit number of returned items (1-1000). Example: \"10\". (default to 10)
     * @param {Array.<module:model/String>} opts.osTypes Return firewall rules with the filtered os_type. Example: \"windows\".
     * @param {Number} opts.skip Skip first number of items (0-1000). To iterate over more than 1000 items,  use \"cursor\". Example: \"150\".
     * @param {Boolean} opts.skipCount If true, total number of items will not be calculated, which speeds up execution time. (default to null)
     * @param {module:model/String} opts.sortOrder Sort direction. Example: \"asc\". (default to null)
     * @param {Date} opts.createdAtLte Return firewall rules created before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<module:model/String>} opts.scopes Return only firewall rules in this scope. Example: \"site\".
     * @param {Array.<module:model/String>} opts.statuses Return firewall rules with the filtered status. Example: \"Enabled\".
     * @param {Array.<String>} opts.protocolContains Free-text filter by protocol (supports multiple values)
     * @param {Array.<String>} opts.applicationContains Free-text filter by application (supports multiple values)
     * @param {Boolean} opts.disablePagination If true, all rules for requested scope will be returned
     * @param {Array.<String>} opts.locationIds Filter by associated locations. Example: \"225494730938493804,225494730938493915\".
     * @param {module:model/String} opts.sortBy The column to sort the results by. Example: \"id\". (default to null)
     * @param {Boolean} opts.tenant Indicates a tenant scope request
     * @param {String} opts.createdAtBetween Return firewall rules created within this range (inclusive). Example: \"1514978764288-1514978999999\".
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Date} opts.createdAtGte Return firewall rules created after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {String} opts.name Return firewall rules with the filtered name.
     * @param {Array.<String>} opts.tagNameContains Free-text filter by the Tag name (supports multiple values)
     * @param {Array.<String>} opts.applications Return firewall rules with the filtered firewall class.
     * @param {module:api/FirewallControlApi~webApiFirewallControlTagRulestagIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FirewallControlSchemasFirewallSchemaMany200}
     */
    this.webApiFirewallControlTagRulestagIdGet = function(tagId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'tagId' is set
      if (tagId === undefined || tagId === null) {
        throw new Error("Missing the required parameter 'tagId' when calling webApiFirewallControlTagRulestagIdGet");
      }


      var pathParams = {
        'tag_id': tagId
      };
      var queryParams = {
        'cursor': opts['cursor'],
        'createdAt__gt': opts['createdAtGt'],
        'query': opts['query'],
        'countOnly': opts['countOnly'],
        'createdAt__lt': opts['createdAtLt'],
        'limit': opts['limit'],
        'skip': opts['skip'],
        'skipCount': opts['skipCount'],
        'sortOrder': opts['sortOrder'],
        'createdAt__lte': opts['createdAtLte'],
        'disablePagination': opts['disablePagination'],
        'sortBy': opts['sortBy'],
        'tenant': opts['tenant'],
        'createdAt__between': opts['createdAtBetween'],
        'createdAt__gte': opts['createdAtGte'],
        'name': opts['name'],
      };
      var collectionQueryParams = {
        'name__contains': {
          value: opts['nameContains'],
          collectionFormat: 'csv'
        },
        'service__contains': {
          value: opts['serviceContains'],
          collectionFormat: 'csv'
        },
        'actions': {
          value: opts['actions'],
          collectionFormat: 'csv'
        },
        'tagIds': {
          value: opts['tagIds'],
          collectionFormat: 'csv'
        },
        'directions': {
          value: opts['directions'],
          collectionFormat: 'csv'
        },
        'protocols': {
          value: opts['protocols'],
          collectionFormat: 'csv'
        },
        'ids': {
          value: opts['ids'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'scopes': {
          value: opts['scopes'],
          collectionFormat: 'csv'
        },
        'statuses': {
          value: opts['statuses'],
          collectionFormat: 'csv'
        },
        'protocol__contains': {
          value: opts['protocolContains'],
          collectionFormat: 'csv'
        },
        'application__contains': {
          value: opts['applicationContains'],
          collectionFormat: 'csv'
        },
        'locationIds': {
          value: opts['locationIds'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'tagName__contains': {
          value: opts['tagNameContains'],
          collectionFormat: 'csv'
        },
        'applications': {
          value: opts['applications'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = FirewallControlSchemasFirewallSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/firewall-control/tag-rules/{tag_id}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiFirewallControlfirewallRuleCategoryPut operation.
     * @callback module:api/FirewallControlApi~webApiFirewallControlfirewallRuleCategoryPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FirewallControlSchemasFirewallSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Firewall Rule
     * Change a Firewall Control rule. <br>This command requires the rule ID, which you can get from \"firewall-control\" (see Get Firewall Rules) or \"firewall-control/unscoped\" (see Get Unscoped Rules).
     * @param {String} firewallRuleCategory Rule ID. Example: \"225494730938493804\".
     * @param {Object} opts Optional parameters
     * @param {module:model/FirewallControlSchemasPutFirewallSchema} opts.body 
     * @param {module:api/FirewallControlApi~webApiFirewallControlfirewallRuleCategoryPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FirewallControlSchemasFirewallSchema200}
     */
    this.webApiFirewallControlfirewallRuleCategoryPut = function(firewallRuleCategory, opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];

      // verify the required parameter 'firewallRuleCategory' is set
      if (firewallRuleCategory === undefined || firewallRuleCategory === null) {
        throw new Error("Missing the required parameter 'firewallRuleCategory' when calling webApiFirewallControlfirewallRuleCategoryPut");
      }


      var pathParams = {
        'firewall_rule_category': firewallRuleCategory
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = FirewallControlSchemasFirewallSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/firewall-control/{firewall_rule_category}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
