/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ForensicsApplicationContentFields200', 'model/ForensicsApplicationDetailsContentFields200', 'model/ForensicsConnectionsSchema200', 'model/NoDataSchema400', 'model/NoDataSchema401', 'model/NoDataSchema404'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/ForensicsApplicationContentFields200'), require('../model/ForensicsApplicationDetailsContentFields200'), require('../model/ForensicsConnectionsSchema200'), require('../model/NoDataSchema400'), require('../model/NoDataSchema401'), require('../model/NoDataSchema404'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.ForensicsApi = factory(root.S1MgmtApi.ApiClient, root.S1MgmtApi.ForensicsApplicationContentFields200, root.S1MgmtApi.ForensicsApplicationDetailsContentFields200, root.S1MgmtApi.ForensicsConnectionsSchema200, root.S1MgmtApi.NoDataSchema400, root.S1MgmtApi.NoDataSchema401, root.S1MgmtApi.NoDataSchema404);
  }
}(this, function(ApiClient, ForensicsApplicationContentFields200, ForensicsApplicationDetailsContentFields200, ForensicsConnectionsSchema200, NoDataSchema400, NoDataSchema401, NoDataSchema404) {
  'use strict';

  /**
   * Forensics service.
   * @module api/ForensicsApi
   * @version 2.1
   */

  /**
   * Constructs a new ForensicsApi. 
   * @alias module:api/ForensicsApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the webApiApplicationsapplicationIdForensicsConnectionsGet operation.
     * @callback module:api/ForensicsApi~webApiApplicationsapplicationIdForensicsConnectionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ForensicsConnectionsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Application Connections
     * [DEPRECATED] Returns an empty array
     * @param {String} applicationId Application ID. Example: \"56ee72a79c7e5c62dd36e6b1\".
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {String} opts.countryCode Country code (default to )
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/ForensicsApi~webApiApplicationsapplicationIdForensicsConnectionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ForensicsConnectionsSchema200}
     */
    this.webApiApplicationsapplicationIdForensicsConnectionsGet = function(applicationId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'applicationId' is set
      if (applicationId === undefined || applicationId === null) {
        throw new Error("Missing the required parameter 'applicationId' when calling webApiApplicationsapplicationIdForensicsConnectionsGet");
      }


      var pathParams = {
        'application_id': applicationId
      };
      var queryParams = {
        'country_code': opts['countryCode'],
      };
      var collectionQueryParams = {
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = ForensicsConnectionsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/applications/{application_id}/forensics/connections', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiApplicationsapplicationIdForensicsDetailsGet operation.
     * @callback module:api/ForensicsApi~webApiApplicationsapplicationIdForensicsDetailsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ForensicsApplicationDetailsContentFields200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Application Forensics - Detailed
     * [DEPRECATED] Returns an empty array
     * @param {String} applicationId Application ID. Example: \"56ee72a79c7e5c62dd36e6b1\".
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/ForensicsApi~webApiApplicationsapplicationIdForensicsDetailsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ForensicsApplicationDetailsContentFields200}
     */
    this.webApiApplicationsapplicationIdForensicsDetailsGet = function(applicationId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'applicationId' is set
      if (applicationId === undefined || applicationId === null) {
        throw new Error("Missing the required parameter 'applicationId' when calling webApiApplicationsapplicationIdForensicsDetailsGet");
      }


      var pathParams = {
        'application_id': applicationId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = ForensicsApplicationDetailsContentFields200;

      return this.apiClient.callApi(
        '/web/api/v2.1/applications/{application_id}/forensics/details', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiApplicationsapplicationIdForensicsExportexportFormatGet operation.
     * @callback module:api/ForensicsApi~webApiApplicationsapplicationIdForensicsExportexportFormatGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Export Application
     * [DEPRECATED] Returns an empty array
     * @param {String} applicationId Application ID. Example: \"56ee72a79c7e5c62dd36e6b1\".
     * @param {module:model/String} exportFormat Export format. Example: \"csv\".
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/ForensicsApi~webApiApplicationsapplicationIdForensicsExportexportFormatGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiApplicationsapplicationIdForensicsExportexportFormatGet = function(applicationId, exportFormat, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'applicationId' is set
      if (applicationId === undefined || applicationId === null) {
        throw new Error("Missing the required parameter 'applicationId' when calling webApiApplicationsapplicationIdForensicsExportexportFormatGet");
      }

      // verify the required parameter 'exportFormat' is set
      if (exportFormat === undefined || exportFormat === null) {
        throw new Error("Missing the required parameter 'exportFormat' when calling webApiApplicationsapplicationIdForensicsExportexportFormatGet");
      }


      var pathParams = {
        'application_id': applicationId,
        'export_format': exportFormat
      };
      var queryParams = {
      };
      var collectionQueryParams = {
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/applications/{application_id}/forensics/export/{export_format}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiApplicationsapplicationIdForensicsGet operation.
     * @callback module:api/ForensicsApi~webApiApplicationsapplicationIdForensicsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ForensicsApplicationContentFields200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Application Forensics
     * DEPRECATED
     * @param {String} applicationId Application ID. Example: \"56ee72a79c7e5c62dd36e6b1\".
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/ForensicsApi~webApiApplicationsapplicationIdForensicsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ForensicsApplicationContentFields200}
     */
    this.webApiApplicationsapplicationIdForensicsGet = function(applicationId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'applicationId' is set
      if (applicationId === undefined || applicationId === null) {
        throw new Error("Missing the required parameter 'applicationId' when calling webApiApplicationsapplicationIdForensicsGet");
      }


      var pathParams = {
        'application_id': applicationId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = ForensicsApplicationContentFields200;

      return this.apiClient.callApi(
        '/web/api/v2.1/applications/{application_id}/forensics', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
