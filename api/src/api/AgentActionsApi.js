/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AffectedResultsSchema200', 'model/AgentsSchemasAgentDisableActionSchema', 'model/AgentsSchemasAgentEnableActionSchema', 'model/AgentsSchemasAgentFetchFilesActionSchema', 'model/AgentsSchemasAgentFetchFirewallRulesActionSchema', 'model/AgentsSchemasAgentFetchLogsActionSchema', 'model/AgentsSchemasAgentFirewallLoggingActionSchema', 'model/AgentsSchemasAgentLocalUpgradeAuthorizationActionSchema', 'model/AgentsSchemasAgentStartProfilingActionSchema', 'model/AgentsSchemasAgentStopProfilingActionSchema', 'model/AgentsSchemasAgentsActionSchema', 'model/AgentsSchemasAgentsBroadcastActionSchema', 'model/AgentsSchemasAgentsCleaninstallerSchema', 'model/AgentsSchemasAgentsDangerousActionSchema', 'model/AgentsSchemasAgentsMoveToConsoleSchema', 'model/AgentsSchemasAgentsMoveToSiteSchema', 'model/AgentsSchemasAgentsSetConfigSchema', 'model/AgentsSchemasAgentsUpdateExternalIdScheme', 'model/AgentsSchemasAgentsUpdateSoftwareActionSchema', 'model/AgentsSchemasManageEndpointTagsSchema', 'model/AgentsSchemasStartRemoteShellResponseSchemaMany200', 'model/AgentsSchemasStartRemoteShellSchema', 'model/AgentsSchemasTerminateRemoteShellSchema', 'model/NoDataSchema400', 'model/NoDataSchema401', 'model/NoDataSchema403', 'model/NoDataSchema404', 'model/NoDataSchema409', 'model/SuccessResponseSchema200'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/AffectedResultsSchema200'), require('../model/AgentsSchemasAgentDisableActionSchema'), require('../model/AgentsSchemasAgentEnableActionSchema'), require('../model/AgentsSchemasAgentFetchFilesActionSchema'), require('../model/AgentsSchemasAgentFetchFirewallRulesActionSchema'), require('../model/AgentsSchemasAgentFetchLogsActionSchema'), require('../model/AgentsSchemasAgentFirewallLoggingActionSchema'), require('../model/AgentsSchemasAgentLocalUpgradeAuthorizationActionSchema'), require('../model/AgentsSchemasAgentStartProfilingActionSchema'), require('../model/AgentsSchemasAgentStopProfilingActionSchema'), require('../model/AgentsSchemasAgentsActionSchema'), require('../model/AgentsSchemasAgentsBroadcastActionSchema'), require('../model/AgentsSchemasAgentsCleaninstallerSchema'), require('../model/AgentsSchemasAgentsDangerousActionSchema'), require('../model/AgentsSchemasAgentsMoveToConsoleSchema'), require('../model/AgentsSchemasAgentsMoveToSiteSchema'), require('../model/AgentsSchemasAgentsSetConfigSchema'), require('../model/AgentsSchemasAgentsUpdateExternalIdScheme'), require('../model/AgentsSchemasAgentsUpdateSoftwareActionSchema'), require('../model/AgentsSchemasManageEndpointTagsSchema'), require('../model/AgentsSchemasStartRemoteShellResponseSchemaMany200'), require('../model/AgentsSchemasStartRemoteShellSchema'), require('../model/AgentsSchemasTerminateRemoteShellSchema'), require('../model/NoDataSchema400'), require('../model/NoDataSchema401'), require('../model/NoDataSchema403'), require('../model/NoDataSchema404'), require('../model/NoDataSchema409'), require('../model/SuccessResponseSchema200'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.AgentActionsApi = factory(root.S1MgmtApi.ApiClient, root.S1MgmtApi.AffectedResultsSchema200, root.S1MgmtApi.AgentsSchemasAgentDisableActionSchema, root.S1MgmtApi.AgentsSchemasAgentEnableActionSchema, root.S1MgmtApi.AgentsSchemasAgentFetchFilesActionSchema, root.S1MgmtApi.AgentsSchemasAgentFetchFirewallRulesActionSchema, root.S1MgmtApi.AgentsSchemasAgentFetchLogsActionSchema, root.S1MgmtApi.AgentsSchemasAgentFirewallLoggingActionSchema, root.S1MgmtApi.AgentsSchemasAgentLocalUpgradeAuthorizationActionSchema, root.S1MgmtApi.AgentsSchemasAgentStartProfilingActionSchema, root.S1MgmtApi.AgentsSchemasAgentStopProfilingActionSchema, root.S1MgmtApi.AgentsSchemasAgentsActionSchema, root.S1MgmtApi.AgentsSchemasAgentsBroadcastActionSchema, root.S1MgmtApi.AgentsSchemasAgentsCleaninstallerSchema, root.S1MgmtApi.AgentsSchemasAgentsDangerousActionSchema, root.S1MgmtApi.AgentsSchemasAgentsMoveToConsoleSchema, root.S1MgmtApi.AgentsSchemasAgentsMoveToSiteSchema, root.S1MgmtApi.AgentsSchemasAgentsSetConfigSchema, root.S1MgmtApi.AgentsSchemasAgentsUpdateExternalIdScheme, root.S1MgmtApi.AgentsSchemasAgentsUpdateSoftwareActionSchema, root.S1MgmtApi.AgentsSchemasManageEndpointTagsSchema, root.S1MgmtApi.AgentsSchemasStartRemoteShellResponseSchemaMany200, root.S1MgmtApi.AgentsSchemasStartRemoteShellSchema, root.S1MgmtApi.AgentsSchemasTerminateRemoteShellSchema, root.S1MgmtApi.NoDataSchema400, root.S1MgmtApi.NoDataSchema401, root.S1MgmtApi.NoDataSchema403, root.S1MgmtApi.NoDataSchema404, root.S1MgmtApi.NoDataSchema409, root.S1MgmtApi.SuccessResponseSchema200);
  }
}(this, function(ApiClient, AffectedResultsSchema200, AgentsSchemasAgentDisableActionSchema, AgentsSchemasAgentEnableActionSchema, AgentsSchemasAgentFetchFilesActionSchema, AgentsSchemasAgentFetchFirewallRulesActionSchema, AgentsSchemasAgentFetchLogsActionSchema, AgentsSchemasAgentFirewallLoggingActionSchema, AgentsSchemasAgentLocalUpgradeAuthorizationActionSchema, AgentsSchemasAgentStartProfilingActionSchema, AgentsSchemasAgentStopProfilingActionSchema, AgentsSchemasAgentsActionSchema, AgentsSchemasAgentsBroadcastActionSchema, AgentsSchemasAgentsCleaninstallerSchema, AgentsSchemasAgentsDangerousActionSchema, AgentsSchemasAgentsMoveToConsoleSchema, AgentsSchemasAgentsMoveToSiteSchema, AgentsSchemasAgentsSetConfigSchema, AgentsSchemasAgentsUpdateExternalIdScheme, AgentsSchemasAgentsUpdateSoftwareActionSchema, AgentsSchemasManageEndpointTagsSchema, AgentsSchemasStartRemoteShellResponseSchemaMany200, AgentsSchemasStartRemoteShellSchema, AgentsSchemasTerminateRemoteShellSchema, NoDataSchema400, NoDataSchema401, NoDataSchema403, NoDataSchema404, NoDataSchema409, SuccessResponseSchema200) {
  'use strict';

  /**
   * AgentActions service.
   * @module api/AgentActionsApi
   * @version 2.1
   */

  /**
   * Constructs a new AgentActionsApi. 
   * @alias module:api/AgentActionsApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the webApiAgentsActionsAbortScanPost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsAbortScanPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Abort Scan
     * Immediately stop a Full Disk Scan on all Agents that match the filter. See \"Initiate scan\" to learn more about Full Disk Scan.
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentsActionSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsAbortScanPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsAbortScanPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/abort-scan', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsApproveStatelessUpgradePost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsApproveStatelessUpgradePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Approve Stateless Upgrades
     * Approve stateless upgrade for agents
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentsCleaninstallerSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsApproveStatelessUpgradePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsApproveStatelessUpgradePost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/approve-stateless-upgrade', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsApproveUninstallPost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsApproveUninstallPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Approve Uninstall
     * If a user tries to uninstall the SentinelOne Agent from an endpoint, an uninstall request is sent to the Management. You must approve the request. <BR>After you approve a request, users see a message that the request was approved. They can restart to complete the Agent uninstall.<BR>We recommend that you do not approve these requests until you understand the reason for the request, you agree with the request, and you have alternative security for the endpoint until you install the Agent again.<BR>This command will approve pending uninstall requests for all Agents that match the filter.
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentsActionSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsApproveUninstallPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsApproveUninstallPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/approve-uninstall', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsBroadcastPost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsBroadcastPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Broadcast Message
     * You can send a message through the Agents that users can see. <BR>This is useful for endpoints that have human users. This command is supported on Windows and macOS endpoints (not supported on Linux). The message is sent to all endpoints that match the filter. <br>Put the message in the data parameter: \"data\":{\"message\":\"<your message>\"} <br>The message must be 140 characters or less.
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentsBroadcastActionSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsBroadcastPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsBroadcastPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/broadcast', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsCanStartRemoteShellPost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsCanStartRemoteShellPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Can run Remote Shell
     * Who can run Remote Shell? Remote Shell is a powerful way to respond remotely to events on endpoints. It lets you open full shell capabilities - PowerShell on Windows and Bash on macOS and Linux. To be able to run a Remote Shell session, SentinelOne users require permissions, which are set on different levels. It can be confusing to know who has permission. Use this command to see if a username you created for someone else or the API, or your own name, has permission.<BR> If a user does not have Remote Shell permission, how can you grant it? First, you need the Control SKU. Then, the user must have a role with permission to use Remote Shell: Admin, SOC, IR Team. The IT role does not have Remote Shell permission, and the user must be responsible for the Account, Site, or Group on whose policy Remote Shell is enabled.
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentsActionSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsCanStartRemoteShellPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsCanStartRemoteShellPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/can-start-remote-shell', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsConnectPost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsConnectPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Connect to Network
     * After you run \"disconnect from network\" on endpoints, analyze the issue, and mitigate threats. Use this command to reconnect to the network all endpoints that match the filter. To learn more, see \"Disconnect from Network\". 
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentsActionSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsConnectPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsConnectPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/connect', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsDecommissionPost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsDecommissionPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Decommission
     * If a user is scheduled for time off, or a device is scheduled for maintenance, you can decommission the Agent. This removes the Agent from the Management Console. <BR>When the Agent communicates with the Management again, the Management recommissions it and returns it to the Console. Use this command to decommission the Agents that match the filter.
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentsDangerousActionSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsDecommissionPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsDecommissionPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/decommission', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsDisableAgentPost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsDisableAgentPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Disable Agent
     * Use this command to disable Agents that match the filter. <BR>Disabled agents run with minimal footprint and do not detect or mitigate threats, but they maintain connectivity with the Management Console. <BR>If the command returns \"Insufficient permissions\", make sure you have permissions for the Account, Site, or Group and a role that allows Disable Agent (Admin, IR team or IT).<BR>In the body of this command, the data parameter set is mandatory.
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentDisableActionSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsDisableAgentPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsDisableAgentPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/disable-agent', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsDisconnectPost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsDisconnectPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Disconnect from Network
     * Use this command to isolate (quarantine) endpoints from the network, if the endpoints match the filter. <BR>The Agent can communicate with the Management, which lets you analyze and mitigate threats. Best practice: For Active threats that spread, apply \"Disconnect from network\" immediately. In the policy, you can set this is to be automatic. When the Agent detects a high-confidence malicious threat, it will mitigate the threat (on Protect) with the action set by the policy. Then the Agent will immediately quarantine the endpoint. To make Disconnect from network automatic in an Account policy, run the \"accounts/{id} command (see \"Update Account\") with: \"networkQuarantine\":true. 
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentsDangerousActionSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsDisconnectPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsDisconnectPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/disconnect', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsEnableAgentPost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsEnableAgentPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Enable Agent
     * Use this command to enable disabled Agents that match the filter. <BR>If the command returns \"Insufficient permissions\", make sure you have permissions for the Account, Site, or Group and a role that allows Disable Agent (Admin, IR team or IT).<BR>In the body of this command, the data parameter set is mandatory.
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentEnableActionSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsEnableAgentPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsEnableAgentPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/enable-agent', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsFetchFirewallRulesPost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsFetchFirewallRulesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch Firewall Rules
     * Firewall Control is disabled at the Global level. When it is first enabled, all Sites and Groups inherit the Firewall Control policy from the Global policy. Agents have Firewall Control disabled, until they connect to a Site or Group with an enabled Firewall Control policy. <BR>After Agents get Firewall Control, if you add or change a Firewall rule, you can use this command to make sure all Agents fetch the rules, (though Agents usually update their policies every few seconds). Use the filter parameter to set which Agents will fetch the rules, if you do not want all of them to attempt it.<BR>Firewall Control requires a Control SKU.
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentFetchFirewallRulesActionSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsFetchFirewallRulesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsFetchFirewallRulesPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/fetch-firewall-rules', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsFetchInstalledAppsPost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsFetchInstalledAppsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Applications
     * Application Risk Management is an EA feature. Contact your partner or SentinelOne SE to learn how to join the EA program.<BR> If you have this feature, you can use this command to have all Agents update the data of the applications that are installed on the endpoint. Change the filter parameter values to send this command to matching Agents only. The updated data of installed applications shows on the Console.<BR>Some filter fields are required. <BR>Best practice: Enter all fields in the body. Click in the Body sample to get a copy of the fields in the body form.
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentsDangerousActionSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsFetchInstalledAppsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsFetchInstalledAppsPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/fetch-installed-apps', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsFetchLogsPost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsFetchLogsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch Logs
     * Get the Agent and Endpoint logs from Agents that match the filter. <BR>The Agent logs are encrypted and only Support can read them. <BR>The Endpoint logs, for operations on the computers, laptops, or servers that have the Agent installed, are readable. The Endpoint logs are available for Windows endpoints only and require Agent version 3.6 or later. After you run this command, download the fetched logs. You can download the logs from the Console GUI or collect them. <BR>On Windows: C:\\ProgramData\\Sentinel\\logs.<BR>On macOS: Run sudo sentinelctl logreport and get the log files on the desktop.<BR>On Linux: Run sudo /opt/sentinelone/bin/sentinelctl log generate.
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentFetchLogsActionSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsFetchLogsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsFetchLogsPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/fetch-logs', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsFirewallLoggingPost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsFirewallLoggingPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch Firewall Logs
     * Get Firewall Control events in the local log file, written in clear text, for Firewall Control events of an endpoint with Firewall Control enabled. Enable the logs for Agents that match the filter. <BR>When Firewall Logging is enabled, you can choose if blocked traffic events go only to a local log on the endpoint (reportMgmt: false, reportLog: true), or also to Console > Activity (reportMgmt: true).<BR>Allowed traffic is not logged. <BR>Each Agent with Firewall Control Event Logging enabled keeps five log files, for a total of 100 MB maximum. The logs cycle older lines to maintain the size threshold. <BR>On Windows endpoints, the Firewall Control logs are in C:\\ProgramData\\Sentinel\\logs\\. Search for log files with \"visible\" in the filename.<BR>On macOS, run: sudo sentinelctl log.<BR>On Linux, run: sudo /opt/sentinelone/bin/sentinelctl log generate /output_path.<BR>Make sure the Group and Site of the Agent has Firewall Control enabled. Firewall Control requires a Control SKU.
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentFirewallLoggingActionSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsFirewallLoggingPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsFirewallLoggingPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/firewall-logging', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsInitiateScanPost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsInitiateScanPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Initiate Scan
     * Use this command to run a Full Disk Scan on Agents that match the filter. <BR>Full Disk Scan finds dormant suspicious activity, threats, and compliance violations, that are then mitigated according to the policy. It scans the local file system.<BR>Full Disk Scan does not inspect drives that require user credentials (such as network drives) or external drives. <BR>Full Disk Scan does not work on hashes. It does not check each file against the blocklist. <BR>If the Static AI determines a file is suspicious, the Agent calculates its hash and sees if the hash is in the blocklist. If a file is executed, all aspects of the process are inspected, including hash-based analysis and blocklist checks. Full Disk Scan can run when the endpoint is offline, but when it is connected to the Management, it can use the most updated Cloud data to improve detection.
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentsActionSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsInitiateScanPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsInitiateScanPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/initiate-scan', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsLocalUpgradeAuthorizationPost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsLocalUpgradeAuthorizationPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Edit local upgrade site authorization
     * Edit when authorization of local upgrades expires.
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentLocalUpgradeAuthorizationActionSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsLocalUpgradeAuthorizationPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsLocalUpgradeAuthorizationPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/local-upgrade-authorization', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsManageTagsPost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsManageTagsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Manage endpoint tags: add, remove, override
     * Override forces the new key and value to be added to the endpoints. If you use add to add a key when that key already exists with a different value, it will not take effect.
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasManageEndpointTagsSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsManageTagsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsManageTagsPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/manage-tags', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsMarkUpToDatePost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsMarkUpToDatePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Mark as up-to-date
     * The value of the Agent version as \"up-to-date\" is a useful filter for many actions. There are scenarios where the Management does not recognize a version as latest. <BR>For example, if Agents that were sent a new version with the update-software command did not yet report to their Management. <BR>You can manually mark these Agents as up-to-date. <BR>This command is not available to users with the SOC role. 
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentsActionSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsMarkUpToDatePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsMarkUpToDatePost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/mark-up-to-date', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsMoveToConsolePost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsMoveToConsolePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Move to Console
     * You can move Agents between Management Consoles. This command moves Agents to a target Console, Account, and Site, given the Console URL and Site token. <BR>You must have Global permissions for the source Console and access to the Site token of the target Site. <BR>Resolve all threats on the Agents to move before you run this command. <BR>If the Agents have local configurations, the configurations are maintained. <BR>If the new Management has different blocklists, exclusions, and other assets, these are applied the next time the Agent communicates with the Management. <BR>This command works on these Agent versions: Windows 3.0 and later, macOS 3.0 and later, Linux 3.4 and later. <BR>An Agent tries to connect to the new Management Console for 3 minutes. If the Agent cannot connect (has unresolved threats or other requirements are not met), it stays in the original Management Console. <BR>To get the Site token, run the \"sites\" command (see Sites list) and take the \"registrationToken\" value. 
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentsMoveToConsoleSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsMoveToConsolePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsMoveToConsolePost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/move-to-console', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsMoveToSitePost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsMoveToSitePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Move between Sites
     * This command requires Account or Global level access. <BR>Agents are assigned to a Site when they are first installed with a Site Token. If you have the required access level, a role with permissions (the SOC role does not allow this action), and permission for both Sites, you can move Agents from one Site to a different Site. Agents will be moved to the best matching dynamic group, or to the Default group if no dynamic group matches.
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentsMoveToSiteSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsMoveToSitePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsMoveToSitePost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/move-to-site', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsRandomizeUuidPost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsRandomizeUuidPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Randomize UUID
     * IMPORTANT: This action will assign a new UUID to Agents that match the filter. <BR>Run it only when instructed to do so by SentinelOne Support. <BR>If you clone the Agent on a VM or VDI without the /VDI switch, you might need to run this command. It is best to ask for Support assistance. Historical threat and Deep Visibility data will be kept in the Management, but that data will be disassociated from the Agent.
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentsDangerousActionSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsRandomizeUuidPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsRandomizeUuidPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/randomize-uuid', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsRangerDisablePost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsRangerDisablePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Disable Ranger
     * Disable Ranger from the Agents that match the filter.<BR>SentinelOne Ranger gives full visibility of all devices connected to your network. Ranger scans your corporate environment to identify and manage connected devices, even those not protected by or supported by SentinelOne. When Ranger is enabled on an Agent, the Agent adds \"Scanner\" to its functionality. It is the starting point for the Ranger scans.<BR>Best Practice: Disable Ranger on endpoints that are performance-sensitive and on endpoints that often connect to non-corporate networks.
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentsActionSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsRangerDisablePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsRangerDisablePost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/ranger-disable', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsRangerEnablePost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsRangerEnablePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Enable Ranger
     * SentinelOne Ranger gives full visibility of all devices connected to your network. Ranger scans your corporate environment to identify and manage connected devices, even those not protected by or supported by SentinelOne. Use this command to enable Ranger on Agents that match the filter. The Agent adds \"Scanner\" to its functionality.<BR>If the given Agent cannot support Ranger, or if Ranger is already enabled, this command does nothing.<BR>Ranger requires a special license. Consult with your SentinelOne SE.
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentsActionSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsRangerEnablePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsRangerEnablePost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/ranger-enable', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsRejectUninstallPost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsRejectUninstallPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reject uninstall
     * Reject uninstall requests for all Agents that match the filter. To learn more about Uninstall Requests, see \"Approve Uninstall\".
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentsActionSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsRejectUninstallPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsRejectUninstallPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/reject-uninstall', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsResetLocalConfigPost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsResetLocalConfigPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reset Local Config
     * SentinelCtl is the CLI for Agents. It runs commands directly on one Agent at a time. You can use this command to clear the SentinelCtl changes from all Agents that match the filter. Specific SentinelCtl settings are not cleared: <BR>On Windows: proxy address and Management token.<BR>On macOC: Management server address and server site key.
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentsActionSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsResetLocalConfigPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsResetLocalConfigPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/reset-local-config', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsRestartMachinePost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsRestartMachinePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Restart
     * Use this command to restart endpoints that have an Agent installed and that fit the filter. We recommend that you use the \"broadcast\" command to send a message to users of endpoints before you restart their computers.
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentsDangerousActionSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsRestartMachinePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsRestartMachinePost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/restart-machine', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsSetConfigPost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsSetConfigPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Set Persistent Configuration Overrides
     * This command requires Global permissions or Support.<BR>The configuration of an Agent can be changed in different ways, such as through  Policy settings, Policy Override, SentinelCtl, and changes to the LocalConfig.json file. <BR>For Windows, Policy Override overwrites policy settings, and local changes (to the file and from this command) overwrite Policy Override from the Console or with policy updates from the API. <BR>For macOS, the Policy Override has the highest priority. If you run this command and then update a Group policy that affects both Windows and macOS endpoints, the settings of this command are applied to the Windows endpoints. But the macOS endpoints will apply the settings of the policy, for settings that are duplicated in both the policy and this command.<BR>When you use this command, enter the filter values to set which Agents get the change. Then use the data parameter to set the actual changes. Get the JSON settings for data from the Agent Configuration or see the Knowledge Base: https://support.sentinelone.com/hc/en-us/articles/360022158673-sentinelctl
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentsSetConfigSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsSetConfigPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsSetConfigPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/set-config', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsSetExternalIdPost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsSetExternalIdPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Set External ID
     * You can add a Customer Identifier (a string) to identify each endpoint or to tag sets of endpoints. The string shows in the Endpoint Details of the Management Console. For example, you can tag endpoints based on their state, installed applications, or endpoint status. The identifier is set on all Agents that match the filter.
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentsUpdateExternalIdScheme} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsSetExternalIdPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsSetExternalIdPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/set-external-id', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsShutdownPost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsShutdownPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Shutdown
     * You can shut down endpoints remotely for performance, maintenance, or security. <BR>This command shuts down all endpoints that match the filter. Best Practice:  If an endpoint is infected, we recommend the \"disconnect\" command and not the \"shutdown\" command. The disconnect command secures the environment from infection while you analyze the cause and best response.<BR>If the endpoint is offline, the shutdown command is not available.
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentsDangerousActionSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsShutdownPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsShutdownPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/shutdown', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsStartProfilingPost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsStartProfilingPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Start Remote Profiling
     * Use this command to start remote profiling on Agents that match the filter. <BR>Remote profiling lets you collect runtime diagnostic information for Agents on containers. <BR>If the command returns \"Insufficient permissions\", make sure you have permissions for the Account, Site, or Group and a role that allows Start Remote Profiling (Admin or IT).
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentStartProfilingActionSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsStartProfilingPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsStartProfilingPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/start-profiling', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsStartRemoteShellPost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsStartRemoteShellPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AgentsSchemasStartRemoteShellResponseSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Start Remote Shell
     * Remote shell is an opened websocket between the browser and the Agent, with a proprietary communication protocol that requires an unreasonable effort to run from the API. We recommend that you not use this call.<BR><BR> If you do want to use this API, you must have permission through your user role (not IT or Viewer), specific Remote Shell permissions, 2FA enabled on the username with a valid code in the twoFaCode parameter, valid code in the twoFaCode parameter, and permissions for the Account, Site, or Group on whose policy Remote Shell is enabled. To make sure you have permission to start Remote Shell, use the \"can-start-remote-shell\" command. Best practice: Use the UUID filter to run Remote Shell on a specific endpoint. To get the UUID, run the \"agents\" command. <BR>In the body of this command, the data parameter set is mandatory. <BR>Remote Shell requires a Control SKU. 
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasStartRemoteShellSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsStartRemoteShellPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AgentsSchemasStartRemoteShellResponseSchemaMany200}
     */
    this.webApiAgentsActionsStartRemoteShellPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AgentsSchemasStartRemoteShellResponseSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/start-remote-shell', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsStopProfilingPost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsStopProfilingPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Stop Remote Profiling
     * Use this command to stop remote profiling on Agents that match the filter. <BR>If the command returns \"Insufficient permissions\", make sure you have permissions for the Account, Site, or Group and a role that allows Stop Remote Profiling (Admin or IT).
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentStopProfilingActionSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsStopProfilingPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsStopProfilingPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/stop-profiling', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsTerminateRemoteShellPost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsTerminateRemoteShellPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Terminate Remote Shell
     * Remote Shell is a powerful, full shell for Windows, macOS, and Linux. It is best practice to terminate Remote Shell sessions when they are not in use. A Remote Shell session terminates when the user closes the session, the session times out, or the session is idle longer than the idle-timeout. <BR>Use this command terminate a session immediately.
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasTerminateRemoteShellSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsTerminateRemoteShellPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsTerminateRemoteShellPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/terminate-remote-shell', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsUninstallPost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsUninstallPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Uninstall
     * Use this command to uninstall Agents that match the filter. For Windows and macOS, make sure that all remnants of the Agent are removed: reboot the endpoints after uninstall. Use the \"restart\" command.
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentsDangerousActionSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsUninstallPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsUninstallPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/uninstall', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsActionsUpdateSoftwarePost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsActionsUpdateSoftwarePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Software
     * Use this command to update the Agent version on endpoints that have the Agent installed and that match the filter. For a cloud-based Management, SentinelOne updates your Management Console with the latest Agent versions. For On-Prem environments, or if you need a package that is not in your Management Console, request files from SentinelOne Support. <BR>IMPORTANT: These parameters are required:<br>packageType - example: \"packageType\": \"AgentAndRanger\",osType - example: \"osType\": \"windows\",fileName - example: \"fileName\": \"SentinelInstaller-x86_windows_32bit_v4_6_12_241.exe\"<BR>Best Practice:  Upgrade your SentinelOne Agents by group or OS. Note about macOS endpoints: It is important that you upgrade the Agent before the endpoint operating system is upgraded to a version that the Agent does not support. More best practices: read the Release Notes, review the system requirements, and if you decide to not upgrade Agents yet, review the Agent Lifecycle. Make sure your deployment is in the supportable bounds.
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentsUpdateSoftwareActionSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsActionsUpdateSoftwarePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsUpdateSoftwarePost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/update-software', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsagentIdActionsFetchFilesPost operation.
     * @callback module:api/AgentActionsApi~webApiAgentsagentIdActionsFetchFilesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SuccessResponseSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch Files
     * Fetch files from endpoints (up to 10 MB for each command) to analyze the root of threats (that come from files - of course, this does not help for fileless threats). Set the pathnames in the body of the request. <BR>Regular expressions and metacharacters are not allowed. Spaces are allowed.<BR>You must enter a new password, which you will use to open the archive of downloaded files. The password must be 10 or more characters with a mix of upper and lower case letters, numbers, and symbols.<BR>This command collects the file and uploads them to the Management. To get the files, download them from the Management.<BR>FedRAMP-compliant and other Managements in GovCloud require a Support ticket to enable this feature. 
     * @param {String} agentId Agent ID. Example: \"225494730938493804\".
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentFetchFilesActionSchema} opts.body 
     * @param {module:api/AgentActionsApi~webApiAgentsagentIdActionsFetchFilesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SuccessResponseSchema200}
     */
    this.webApiAgentsagentIdActionsFetchFilesPost = function(agentId, opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];

      // verify the required parameter 'agentId' is set
      if (agentId === undefined || agentId === null) {
        throw new Error("Missing the required parameter 'agentId' when calling webApiAgentsagentIdActionsFetchFilesPost");
      }


      var pathParams = {
        'agent_id': agentId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SuccessResponseSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/{agent_id}/actions/fetch-files', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
