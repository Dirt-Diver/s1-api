/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AffectedResultsSchema200', 'model/NoDataSchema400', 'model/NoDataSchema401', 'model/NoDataSchema403', 'model/NoDataSchema404', 'model/ServiceUsersSchemasBulkDeleteServiceUsersSchema', 'model/ServiceUsersSchemasCreateServiceUserSchema', 'model/ServiceUsersSchemasCreatedServiceUserSchema200', 'model/ServiceUsersSchemasGetServiceUserSchema200', 'model/ServiceUsersSchemasGetServiceUserSchemaMany200', 'model/ServiceUsersSchemasUpdateServiceUserSchema', 'model/SuccessResponseSchema200'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/AffectedResultsSchema200'), require('../model/NoDataSchema400'), require('../model/NoDataSchema401'), require('../model/NoDataSchema403'), require('../model/NoDataSchema404'), require('../model/ServiceUsersSchemasBulkDeleteServiceUsersSchema'), require('../model/ServiceUsersSchemasCreateServiceUserSchema'), require('../model/ServiceUsersSchemasCreatedServiceUserSchema200'), require('../model/ServiceUsersSchemasGetServiceUserSchema200'), require('../model/ServiceUsersSchemasGetServiceUserSchemaMany200'), require('../model/ServiceUsersSchemasUpdateServiceUserSchema'), require('../model/SuccessResponseSchema200'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.ServiceUsersApi = factory(root.S1MgmtApi.ApiClient, root.S1MgmtApi.AffectedResultsSchema200, root.S1MgmtApi.NoDataSchema400, root.S1MgmtApi.NoDataSchema401, root.S1MgmtApi.NoDataSchema403, root.S1MgmtApi.NoDataSchema404, root.S1MgmtApi.ServiceUsersSchemasBulkDeleteServiceUsersSchema, root.S1MgmtApi.ServiceUsersSchemasCreateServiceUserSchema, root.S1MgmtApi.ServiceUsersSchemasCreatedServiceUserSchema200, root.S1MgmtApi.ServiceUsersSchemasGetServiceUserSchema200, root.S1MgmtApi.ServiceUsersSchemasGetServiceUserSchemaMany200, root.S1MgmtApi.ServiceUsersSchemasUpdateServiceUserSchema, root.S1MgmtApi.SuccessResponseSchema200);
  }
}(this, function(ApiClient, AffectedResultsSchema200, NoDataSchema400, NoDataSchema401, NoDataSchema403, NoDataSchema404, ServiceUsersSchemasBulkDeleteServiceUsersSchema, ServiceUsersSchemasCreateServiceUserSchema, ServiceUsersSchemasCreatedServiceUserSchema200, ServiceUsersSchemasGetServiceUserSchema200, ServiceUsersSchemasGetServiceUserSchemaMany200, ServiceUsersSchemasUpdateServiceUserSchema, SuccessResponseSchema200) {
  'use strict';

  /**
   * ServiceUsers service.
   * @module api/ServiceUsersApi
   * @version 2.1
   */

  /**
   * Constructs a new ServiceUsersApi. 
   * @alias module:api/ServiceUsersApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the webApiExportServiceUsersGet operation.
     * @callback module:api/ServiceUsersApi~webApiExportServiceUsersGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Export Service Users
     * Export Service User data to a CSV, for Service Users that match the filter.
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {String} opts.query Full text search for fields: full_name, email, description
     * @param {Array.<String>} opts.ids List of service user IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.roleIds List of rbac roles to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/ServiceUsersApi~webApiExportServiceUsersGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiExportServiceUsersGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'query': opts['query'],
      };
      var collectionQueryParams = {
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'ids': {
          value: opts['ids'],
          collectionFormat: 'csv'
        },
        'roleIds': {
          value: opts['roleIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/export/service-users', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiServiceUsersDeleteServiceUsersPost operation.
     * @callback module:api/ServiceUsersApi~webApiServiceUsersDeleteServiceUsersPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Bulk Delete Service Users
     * Delete all service users that match the filter.
     * @param {Object} opts Optional parameters
     * @param {module:model/ServiceUsersSchemasBulkDeleteServiceUsersSchema} opts.body 
     * @param {module:api/ServiceUsersApi~webApiServiceUsersDeleteServiceUsersPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiServiceUsersDeleteServiceUsersPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/service-users/delete-service-users', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiServiceUsersGet operation.
     * @callback module:api/ServiceUsersApi~webApiServiceUsersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceUsersSchemasGetServiceUserSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Service Users
     * Get a list of service users.
     * @param {Object} opts Optional parameters
     * @param {String} opts.cursor Cursor position returned by the last request. Use to iterate over more than 1000 items. Example: \"YWdlbnRfaWQ6NTgwMjkzODE=\". (default to null)
     * @param {Number} opts.skip Skip first number of items (0-1000). To iterate over more than 1000 items,  use \"cursor\". Example: \"150\".
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {String} opts.query Full text search for fields: full_name, email, description
     * @param {Boolean} opts.skipCount If true, total number of items will not be calculated, which speeds up execution time. (default to null)
     * @param {module:model/String} opts.sortOrder Sort direction. Example: \"asc\". (default to null)
     * @param {module:model/String} opts.sortBy The column to sort the results by. Example: \"id\". (default to null)
     * @param {Array.<String>} opts.roleIds List of rbac roles to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.ids List of service user IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Boolean} opts.countOnly If true, only total number of items will be returned, without any of the actual objects. (default to false)
     * @param {Number} opts.limit Limit number of returned items (1-1000). Example: \"10\". (default to 10)
     * @param {module:api/ServiceUsersApi~webApiServiceUsersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceUsersSchemasGetServiceUserSchemaMany200}
     */
    this.webApiServiceUsersGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'cursor': opts['cursor'],
        'skip': opts['skip'],
        'query': opts['query'],
        'skipCount': opts['skipCount'],
        'sortOrder': opts['sortOrder'],
        'sortBy': opts['sortBy'],
        'countOnly': opts['countOnly'],
        'limit': opts['limit'],
      };
      var collectionQueryParams = {
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'roleIds': {
          value: opts['roleIds'],
          collectionFormat: 'csv'
        },
        'ids': {
          value: opts['ids'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = ServiceUsersSchemasGetServiceUserSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/service-users', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiServiceUsersPost operation.
     * @callback module:api/ServiceUsersApi~webApiServiceUsersPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceUsersSchemasCreatedServiceUserSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Service User
     * Create a new service user.
     * @param {Object} opts Optional parameters
     * @param {module:model/ServiceUsersSchemasCreateServiceUserSchema} opts.body 
     * @param {module:api/ServiceUsersApi~webApiServiceUsersPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceUsersSchemasCreatedServiceUserSchema200}
     */
    this.webApiServiceUsersPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ServiceUsersSchemasCreatedServiceUserSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/service-users', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiServiceUsersserviceUserIdDelete operation.
     * @callback module:api/ServiceUsersApi~webApiServiceUsersserviceUserIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SuccessResponseSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Service User
     * Delete a service user by ID.
     * @param {String} serviceUserId Service User ID. Example: \"225494730938493804\".
     * @param {module:api/ServiceUsersApi~webApiServiceUsersserviceUserIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SuccessResponseSchema200}
     */
    this.webApiServiceUsersserviceUserIdDelete = function(serviceUserId, callback) {
      var postBody = null;

      // verify the required parameter 'serviceUserId' is set
      if (serviceUserId === undefined || serviceUserId === null) {
        throw new Error("Missing the required parameter 'serviceUserId' when calling webApiServiceUsersserviceUserIdDelete");
      }


      var pathParams = {
        'service_user_id': serviceUserId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = SuccessResponseSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/service-users/{service_user_id}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiServiceUsersserviceUserIdGet operation.
     * @callback module:api/ServiceUsersApi~webApiServiceUsersserviceUserIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceUsersSchemasGetServiceUserSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Service User
     * Get a specific service user by ID.
     * @param {String} serviceUserId Service User ID. Example: \"225494730938493804\".
     * @param {module:api/ServiceUsersApi~webApiServiceUsersserviceUserIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceUsersSchemasGetServiceUserSchema200}
     */
    this.webApiServiceUsersserviceUserIdGet = function(serviceUserId, callback) {
      var postBody = null;

      // verify the required parameter 'serviceUserId' is set
      if (serviceUserId === undefined || serviceUserId === null) {
        throw new Error("Missing the required parameter 'serviceUserId' when calling webApiServiceUsersserviceUserIdGet");
      }


      var pathParams = {
        'service_user_id': serviceUserId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = ServiceUsersSchemasGetServiceUserSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/service-users/{service_user_id}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiServiceUsersserviceUserIdPut operation.
     * @callback module:api/ServiceUsersApi~webApiServiceUsersserviceUserIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceUsersSchemasGetServiceUserSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Service User
     * Change properties of the service user with the given ID.
     * @param {String} serviceUserId Service User ID. Example: \"225494730938493804\".
     * @param {Object} opts Optional parameters
     * @param {module:model/ServiceUsersSchemasUpdateServiceUserSchema} opts.body 
     * @param {module:api/ServiceUsersApi~webApiServiceUsersserviceUserIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceUsersSchemasGetServiceUserSchema200}
     */
    this.webApiServiceUsersserviceUserIdPut = function(serviceUserId, opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];

      // verify the required parameter 'serviceUserId' is set
      if (serviceUserId === undefined || serviceUserId === null) {
        throw new Error("Missing the required parameter 'serviceUserId' when calling webApiServiceUsersserviceUserIdPut");
      }


      var pathParams = {
        'service_user_id': serviceUserId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ServiceUsersSchemasGetServiceUserSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/service-users/{service_user_id}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
