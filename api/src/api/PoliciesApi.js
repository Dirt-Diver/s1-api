/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/NoDataSchema400', 'model/NoDataSchema401', 'model/NoDataSchema404', 'model/PoliciesSchemasEnrichedPolicySchema200', 'model/PoliciesTenantPolicySchema'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/NoDataSchema400'), require('../model/NoDataSchema401'), require('../model/NoDataSchema404'), require('../model/PoliciesSchemasEnrichedPolicySchema200'), require('../model/PoliciesTenantPolicySchema'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.PoliciesApi = factory(root.S1MgmtApi.ApiClient, root.S1MgmtApi.NoDataSchema400, root.S1MgmtApi.NoDataSchema401, root.S1MgmtApi.NoDataSchema404, root.S1MgmtApi.PoliciesSchemasEnrichedPolicySchema200, root.S1MgmtApi.PoliciesTenantPolicySchema);
  }
}(this, function(ApiClient, NoDataSchema400, NoDataSchema401, NoDataSchema404, PoliciesSchemasEnrichedPolicySchema200, PoliciesTenantPolicySchema) {
  'use strict';

  /**
   * Policies service.
   * @module api/PoliciesApi
   * @version 2.1
   */

  /**
   * Constructs a new PoliciesApi. 
   * @alias module:api/PoliciesApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the webApiAccountsaccountIdPolicyGet operation.
     * @callback module:api/PoliciesApi~webApiAccountsaccountIdPolicyGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PoliciesSchemasEnrichedPolicySchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Account Policy
     * Get the policy for the Account given by ID. To get the ID of an Account, run \"accounts\". See also: Get Policy.
     * @param {String} accountId Account ID. You can get the ID from the Get accounts command. Example: \"225494730938493804\".
     * @param {module:api/PoliciesApi~webApiAccountsaccountIdPolicyGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PoliciesSchemasEnrichedPolicySchema200}
     */
    this.webApiAccountsaccountIdPolicyGet = function(accountId, callback) {
      var postBody = null;

      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling webApiAccountsaccountIdPolicyGet");
      }


      var pathParams = {
        'account_id': accountId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = PoliciesSchemasEnrichedPolicySchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/accounts/{account_id}/policy', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAccountsaccountIdPolicyPut operation.
     * @callback module:api/PoliciesApi~webApiAccountsaccountIdPolicyPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PoliciesSchemasEnrichedPolicySchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Account Policy
     * Change the policy for the Account given by ID. Best practice: Get the policy of the Account before you attempt to change it. See also:  Get Policy.
     * @param {String} accountId Account ID. You can get the ID from the Get accounts command. Example: \"225494730938493804\".
     * @param {Object} opts Optional parameters
     * @param {module:model/PoliciesTenantPolicySchema} opts.body 
     * @param {module:api/PoliciesApi~webApiAccountsaccountIdPolicyPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PoliciesSchemasEnrichedPolicySchema200}
     */
    this.webApiAccountsaccountIdPolicyPut = function(accountId, opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];

      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling webApiAccountsaccountIdPolicyPut");
      }


      var pathParams = {
        'account_id': accountId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = PoliciesSchemasEnrichedPolicySchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/accounts/{account_id}/policy', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiGroupsgroupIdPolicyGet operation.
     * @callback module:api/PoliciesApi~webApiGroupsgroupIdPolicyGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PoliciesSchemasEnrichedPolicySchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Group Policy
     * Get the policy of the Group given by ID. To get the ID of a Group, run \"groups\". See also: Get Policy.
     * @param {String} groupId Group ID. Example: \"225494730938493804\".
     * @param {module:api/PoliciesApi~webApiGroupsgroupIdPolicyGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PoliciesSchemasEnrichedPolicySchema200}
     */
    this.webApiGroupsgroupIdPolicyGet = function(groupId, callback) {
      var postBody = null;

      // verify the required parameter 'groupId' is set
      if (groupId === undefined || groupId === null) {
        throw new Error("Missing the required parameter 'groupId' when calling webApiGroupsgroupIdPolicyGet");
      }


      var pathParams = {
        'group_id': groupId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = PoliciesSchemasEnrichedPolicySchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/groups/{group_id}/policy', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiGroupsgroupIdPolicyPut operation.
     * @callback module:api/PoliciesApi~webApiGroupsgroupIdPolicyPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PoliciesSchemasEnrichedPolicySchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Group Policy
     * Change the policy for the Group given by ID. Best practice: Get the policy of the Group before you attempt to change it. See also:  Get Policy.
     * @param {String} groupId Group ID. Example: \"225494730938493804\".
     * @param {Object} opts Optional parameters
     * @param {module:model/PoliciesTenantPolicySchema} opts.body 
     * @param {module:api/PoliciesApi~webApiGroupsgroupIdPolicyPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PoliciesSchemasEnrichedPolicySchema200}
     */
    this.webApiGroupsgroupIdPolicyPut = function(groupId, opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];

      // verify the required parameter 'groupId' is set
      if (groupId === undefined || groupId === null) {
        throw new Error("Missing the required parameter 'groupId' when calling webApiGroupsgroupIdPolicyPut");
      }


      var pathParams = {
        'group_id': groupId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = PoliciesSchemasEnrichedPolicySchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/groups/{group_id}/policy', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSitessiteIdPolicyGet operation.
     * @callback module:api/PoliciesApi~webApiSitessiteIdPolicyGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PoliciesSchemasEnrichedPolicySchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Site Policy
     * Get the policy of the Site given by ID. To get the ID of a Site, run \"sites\". See also: Get Policy.
     * @param {String} siteId Site ID. Example: \"225494730938493804\".
     * @param {module:api/PoliciesApi~webApiSitessiteIdPolicyGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PoliciesSchemasEnrichedPolicySchema200}
     */
    this.webApiSitessiteIdPolicyGet = function(siteId, callback) {
      var postBody = null;

      // verify the required parameter 'siteId' is set
      if (siteId === undefined || siteId === null) {
        throw new Error("Missing the required parameter 'siteId' when calling webApiSitessiteIdPolicyGet");
      }


      var pathParams = {
        'site_id': siteId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = PoliciesSchemasEnrichedPolicySchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/sites/{site_id}/policy', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSitessiteIdPolicyPut operation.
     * @callback module:api/PoliciesApi~webApiSitessiteIdPolicyPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PoliciesSchemasEnrichedPolicySchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Site Policy
     * Change the policy for the Site given by ID. Best practice: Get the policy of the Site before you attempt to change it. See also:  Get Policy.
     * @param {String} siteId Site ID. Example: \"225494730938493804\".
     * @param {Object} opts Optional parameters
     * @param {module:model/PoliciesTenantPolicySchema} opts.body 
     * @param {module:api/PoliciesApi~webApiSitessiteIdPolicyPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PoliciesSchemasEnrichedPolicySchema200}
     */
    this.webApiSitessiteIdPolicyPut = function(siteId, opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];

      // verify the required parameter 'siteId' is set
      if (siteId === undefined || siteId === null) {
        throw new Error("Missing the required parameter 'siteId' when calling webApiSitessiteIdPolicyPut");
      }


      var pathParams = {
        'site_id': siteId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = PoliciesSchemasEnrichedPolicySchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/sites/{site_id}/policy', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiTenantPolicyGet operation.
     * @callback module:api/PoliciesApi~webApiTenantPolicyGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PoliciesSchemasEnrichedPolicySchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Global Policy
     * Get the Global policy. This is the default policy for your deployment. See also: Get Policy.
     * @param {module:api/PoliciesApi~webApiTenantPolicyGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PoliciesSchemasEnrichedPolicySchema200}
     */
    this.webApiTenantPolicyGet = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = PoliciesSchemasEnrichedPolicySchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/tenant/policy', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiTenantPolicyPut operation.
     * @callback module:api/PoliciesApi~webApiTenantPolicyPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PoliciesSchemasEnrichedPolicySchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Global Policy
     * Change the policy of your deployment. Best practice: Get the Global policy before you attempt to change it. See also:  Get Policy.    You must be a Global Admin user to change the Global Policy.
     * @param {Object} opts Optional parameters
     * @param {module:model/PoliciesTenantPolicySchema} opts.body 
     * @param {module:api/PoliciesApi~webApiTenantPolicyPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PoliciesSchemasEnrichedPolicySchema200}
     */
    this.webApiTenantPolicyPut = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = PoliciesSchemasEnrichedPolicySchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/tenant/policy', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
