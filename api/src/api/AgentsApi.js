/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AgentsSchemasAgentApplicationsSchemaMany200', 'model/AgentsSchemasAgentPassphraseSchemaMany200', 'model/AgentsSchemasAgentProcessesSchemaMany200', 'model/AgentsSchemasAgentViewSchemaMany200', 'model/AgentsSchemasAgentsCountSchema200', 'model/AgentsSchemasGetAgentApprovalResponse200', 'model/NoDataSchema400', 'model/NoDataSchema401', 'model/NoDataSchema403', 'model/NoDataSchema404', 'model/TagManagerSchemasAgentTagSchemaMany200'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/AgentsSchemasAgentApplicationsSchemaMany200'), require('../model/AgentsSchemasAgentPassphraseSchemaMany200'), require('../model/AgentsSchemasAgentProcessesSchemaMany200'), require('../model/AgentsSchemasAgentViewSchemaMany200'), require('../model/AgentsSchemasAgentsCountSchema200'), require('../model/AgentsSchemasGetAgentApprovalResponse200'), require('../model/NoDataSchema400'), require('../model/NoDataSchema401'), require('../model/NoDataSchema403'), require('../model/NoDataSchema404'), require('../model/TagManagerSchemasAgentTagSchemaMany200'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.AgentsApi = factory(root.S1MgmtApi.ApiClient, root.S1MgmtApi.AgentsSchemasAgentApplicationsSchemaMany200, root.S1MgmtApi.AgentsSchemasAgentPassphraseSchemaMany200, root.S1MgmtApi.AgentsSchemasAgentProcessesSchemaMany200, root.S1MgmtApi.AgentsSchemasAgentViewSchemaMany200, root.S1MgmtApi.AgentsSchemasAgentsCountSchema200, root.S1MgmtApi.AgentsSchemasGetAgentApprovalResponse200, root.S1MgmtApi.NoDataSchema400, root.S1MgmtApi.NoDataSchema401, root.S1MgmtApi.NoDataSchema403, root.S1MgmtApi.NoDataSchema404, root.S1MgmtApi.TagManagerSchemasAgentTagSchemaMany200);
  }
}(this, function(ApiClient, AgentsSchemasAgentApplicationsSchemaMany200, AgentsSchemasAgentPassphraseSchemaMany200, AgentsSchemasAgentProcessesSchemaMany200, AgentsSchemasAgentViewSchemaMany200, AgentsSchemasAgentsCountSchema200, AgentsSchemasGetAgentApprovalResponse200, NoDataSchema400, NoDataSchema401, NoDataSchema403, NoDataSchema404, TagManagerSchemasAgentTagSchemaMany200) {
  'use strict';

  /**
   * Agents service.
   * @module api/AgentsApi
   * @version 2.1
   */

  /**
   * Constructs a new AgentsApi. 
   * @alias module:api/AgentsApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the webApiAgentsApplicationsGet operation.
     * @callback module:api/AgentsApi~webApiAgentsApplicationsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AgentsSchemasAgentApplicationsSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Applications
     * Get the installed applications for a specific Agent. <BR>To get the Agent ID, run \"agents\".
     * @param {Array.<String>} ids Agent ID list. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/AgentsApi~webApiAgentsApplicationsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AgentsSchemasAgentApplicationsSchemaMany200}
     */
    this.webApiAgentsApplicationsGet = function(ids, callback) {
      var postBody = null;

      // verify the required parameter 'ids' is set
      if (ids === undefined || ids === null) {
        throw new Error("Missing the required parameter 'ids' when calling webApiAgentsApplicationsGet");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
        'ids': {
          value: ids,
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = AgentsSchemasAgentApplicationsSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/applications', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsCountGet operation.
     * @callback module:api/AgentsApi~webApiAgentsCountGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AgentsSchemasAgentsCountSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Count Agents
     * Get the count of Agents that match a filter. This command is useful to run before you run other commands. You will be able to manage Agent maintenance better if you know how many Agents will get a command that takes time (such as Update Software).
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.agentVersionsNin Agent versions not to include. Example: \"2.0.0.0,2.1.5.144\".
     * @param {String} opts.registeredAtBetween Date range for first registration time (format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978764288-1514978999999\".
     * @param {Date} opts.registeredAtLte Agents registered before or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.adComputerQueryContains Free-text filter by Active Directory computer name or its groups (supports multiple values). Example: \"DC=sentinelone,Windows\".
     * @param {module:model/String} opts.mitigationModeSuspicious Mitigation mode policy for suspicious activity. Example: \"detect\".
     * @param {Boolean} opts.hasLocalConfiguration Agent has a local configuration set
     * @param {Array.<String>} opts.adUserQueryContains Free-text filter by Active Directory computer name or its groups (supports multiple values). Example: \"DC=sentinelone,John\".
     * @param {String} opts.query A free-text search term, will match applicable attributes (sub-string match). Note: Device's physical addresses will be matched if they start with the search term only (no match if they contain the term). Example: \"Linux\".
     * @param {Array.<String>} opts.cloudProvider Agents from which cloud provider
     * @param {Number} opts.coreCountGt CPU cores (more than)
     * @param {Date} opts.decommissionedAtGt Agents decommissioned after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.registeredAtGte Agents registered after or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Number} opts.totalMemoryGt Memory size (MB, more than)
     * @param {Date} opts.updatedAtGt Agents updated after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Boolean} opts.hasContainerizedWorkload Include only Agents protecting containerized workloads
     * @param {Array.<String>} opts.cloudImageContains Free-text filter by cloud image (supports multiple values)
     * @param {Date} opts.threatCreatedAtGte Agents with threats reported after or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<module:model/String>} opts.appsVulnerabilityStatusesNin Apps vulnerability status nin. Example: \"patch_required\".
     * @param {Array.<module:model/String>} opts.scanStatusesNin Not included scan statuses. Example: \"started,aborted\".
     * @param {Array.<String>} opts.adComputerMemberContains Free-text filter by Active Directory computer groups string (supports multiple values). Example: \"DC=sentinelone\".
     * @param {Number} opts.coreCountLte CPU cores (less than or equal)
     * @param {Array.<String>} opts.rangerVersions Ranger versions to include. Example: \"2.0.0.0,2.1.5.144\".
     * @param {Array.<module:model/String>} opts.machineTypes Included machine types. Example: \"laptop,desktop\".
     * @param {Number} opts.coreCountGte CPU cores (more than or equal)
     * @param {Array.<String>} opts.locationIds Include only Agents reporting these locations. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.locationIdsNin Do not include only Agents reporting these locations. Example: \"225494730938493804,225494730938493915\".
     * @param {String} opts.gatewayIp Gateway ip. Example: \"192.168.0.1\".
     * @param {Date} opts.updatedAtLte Agents updated before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<module:model/String>} opts.missingPermissionsNin Excluded missing permissions. Example: \"user_action_needed_bluetooth_per,user_action_needed_fda_helper\".
     * @param {module:model/String} opts.migrationStatus Migration status. Example: \"N/A\".
     * @param {Array.<Boolean>} opts.threatRebootRequired Has at least one threat with at least one mitigation action pending reboot to succeed
     * @param {Array.<String>} opts.serialNumberContains Free-text filter by Serial Number (supports multiple values)
     * @param {Date} opts.decommissionedAtGte Agents decommissioned after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.lastSuccessfulScanDateBetween Date range for last successful full disk scan(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978764288-1514978999999\".
     * @param {Date} opts.lastActiveDateLte Agents last active before or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.lastActiveDateBetween Date range for last active date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978764288-1514978999999\".
     * @param {Array.<Boolean>} opts.networkQuarantineEnabled The agents supports Network Quarantine Control and its enabled for the agent's group
     * @param {Array.<String>} opts.cloudTagsContains Free-text filter by cloud tags (supports multiple values)
     * @param {String} opts.threatCreatedAtBetween Agents with threats reported in a date range (format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978764288-1514978999999\".
     * @param {Boolean} opts.encryptedApplications Disk encryption status
     * @param {Array.<Boolean>} opts.isUninstalled Include installed, uninstalled or both. Example: \"True,False\".
     * @param {Array.<String>} opts.networkInterfacePhysicalContains Free-text filter by MAC address (supports multiple values). Example: \"aa:0f,:41:\".
     * @param {String} opts.agentVersionGte Agents versions greater than or equal to given version. Example: \"2.5.1.1320\".
     * @param {Date} opts.lastSuccessfulScanDateGte Agents last successful full disk scan after or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.operationalStates Agent operational state
     * @param {Array.<String>} opts.adUserNameContains Free-text filter by Active Directory username string (supports multiple values). Example: \"DC=sentinelone\".
     * @param {Array.<module:model/String>} opts.osTypesNin Not included OS types. Example: \"windows\".
     * @param {String} opts.csvFilterId The ID of the CSV file to filter by. Example: \"225494730938493804\".
     * @param {Boolean} opts.isActive Include only active Agents
     * @param {module:model/String} opts.mitigationMode Agent mitigation mode policy. Example: \"detect\".
     * @param {Array.<String>} opts.awsSubnetIdsContains Free-text filter by aws subnet ids (supports multiple values)
     * @param {String} opts.agentVersionLte Agents versions less than or equal to given version. Example: \"2.5.1.1320\".
     * @param {Date} opts.updatedAtGte Agents updated after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.osVersionContains Free-text filter by OS full name and version (supports multiple values). Example: \"Service Pack 1\".
     * @param {Array.<String>} opts.externalIpContains Free-text filter by visible IP (supports multiple values). Example: \"205,127.0\".
     * @param {Array.<String>} opts.awsSecurityGroupsContains Free-text filter by aws securityGroups(supports multiple values)
     * @param {Array.<String>} opts.k8sNodeNameContains Free-text filter by K8s node name (supports multiple values)
     * @param {String} opts.agentVersionBetween Version range for agent version (format: <from_version>-<to_version>, inclusive). Example: \"2.0.0.0-2.1.5.144\".
     * @param {Number} opts.activeThreats Include Agents with this amount of active threats. Example: \"3\".
     * @param {Boolean} opts.hasTags Include only Agents that have any tags assigned if True, or none if False
     * @param {Array.<String>} opts.agentNamespaceContains Free-text filter by agent namespace (supports multiple values)
     * @param {Number} opts.cpuCountLt Number of CPUs (less than)
     * @param {Date} opts.registeredAtLt Agents registered before this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.networkInterfaceInetContains Free-text filter by local IP (supports multiple values). Example: \"192,10.0.0\".
     * @param {Array.<String>} opts.computerNameContains Free-text filter by computer name (supports multiple values). Example: \"john-office,WIN\".
     * @param {Array.<String>} opts.cloudNetworkContains Free-text filter by cloud network (supports multiple values)
     * @param {Boolean} opts.remoteOpsForensicsSupported Include only agents that has Remote Ops Forensicsfeature supported
     * @param {Array.<String>} opts.remoteProfilingStates Agent remote profiling state
     * @param {Array.<String>} opts.filteredGroupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.agentPodNameContains Free-text filter by agent pod name (supports multiple values)
     * @param {Array.<module:model/String>} opts.userActionsNeededNin Excluded pending user actions. Example: \"reboot_needed,upgrade_needed\".
     * @param {Array.<module:model/String>} opts.rangerStatuses Status of Ranger. Example: \"NotApplicable\".
     * @param {String} opts.computerNameLike Match computer name partially (substring). Example: \"Lab1\".
     * @param {Array.<String>} opts.externalIdContains Free-text filter by external ID (Customer ID). Example: \"Tag#1 - monitoring,Performance machine\".
     * @param {String} opts.createdAtBetween Date range for creation time (format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<module:model/String>} opts.consoleMigrationStatusesNin Migration status nin. Example: \"N/A\".
     * @param {Array.<String>} opts.cpuIdContains Free-text filter by CPU name (supports multiple values). Example: \"Intel,AMD\".
     * @param {String} opts.coreCountBetween Possible number of CPU cores (inclusive). Example: \"2-8\".
     * @param {Boolean} opts.isUpToDate Include only Agents with updated software
     * @param {Date} opts.threatCreatedAtLt Agents with threats reported before this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {module:model/String} opts.rangerStatus [DEPRECATED] Use rangerStatuses. Example: \"NotApplicable\".
     * @param {String} opts.totalMemoryBetween Total memory range (GB, inclusive). Example: \"4-8\".
     * @param {Date} opts.lastSuccessfulScanDateLte Agents last successful full disk scan before or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.domains Included network domains. Example: \"mybusiness.net,workgroup\".
     * @param {Array.<String>} opts.awsRoleContains Free-text filter by aws role(supports multiple values)
     * @param {Array.<String>} opts.lastLoggedInUserNameContains Free-text filter by username (supports multiple values). Example: \"admin,johnd1\".
     * @param {Number} opts.cpuCountGt Number of CPUs (more than)
     * @param {Array.<String>} opts.cloudAccountContains Free-text filter by cloud account (supports multiple values)
     * @param {Array.<String>} opts.clusterNameContains Free-text filter by cluster name (supports multiple values)
     * @param {Array.<module:model/String>} opts.scanStatuses Included scan statuses. Example: \"started,aborted\".
     * @param {Date} opts.updatedAtLt Agents updated before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.ids A list of Agent IDs. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.liveUpdateIdContains Free-text filter by live update ID (supports multiple values)
     * @param {String} opts.computerName Computer name. Example: \"My Office Desktop\".
     * @param {String} opts.uuid Agent's universally unique identifier. Example: \"ff819e70af13be381993075eb0ce5f2f6de05be2\".
     * @param {Array.<module:model/String>} opts.osTypes Included OS types. Example: \"windows\".
     * @param {Array.<module:model/String>} opts.appsVulnerabilityStatuses Apps vulnerability status in. Example: \"patch_required\".
     * @param {Date} opts.lastActiveDateGte Agents last active after or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.threatContentHash Include only Agents that have at least one threat with this content hash. Example: \"cf23df2207d99a74fbe169e3eba035e633b65d94\".
     * @param {Array.<String>} opts.remoteProfilingStatesNin Do not include these Agent remote profiling states
     * @param {Date} opts.createdAtLte Agents created before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {module:model/String} opts.scanStatus Scan status. Example: \"none\".
     * @param {Array.<String>} opts.filteredSiteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<module:model/String>} opts.userActionsNeeded Included pending user actions. Example: \"reboot_needed,upgrade_needed\".
     * @param {Date} opts.registeredAtGt Agents registered after this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {module:model/String} opts.osArch OS architecture. Example: \"32 bit\".
     * @param {Array.<String>} opts.adComputerNameContains Free-text filter by Active Directory computer name string (supports multiple values). Example: \"DC=sentinelone\".
     * @param {Number} opts.totalMemoryGte Memory size (MB, more than or equal)
     * @param {Boolean} opts.threatHidden Include only Agents with at least one hidden threat
     * @param {Date} opts.lastActiveDateGt Agents last active after this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.threatCreatedAtLte Agents with threats reported before or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Number} opts.cpuCountGte Number of CPUs (more than or equal)
     * @param {Array.<String>} opts.cloudInstanceIdContains Free-text filter by cloud instance id(supports multiple values)
     * @param {Array.<String>} opts.agentVersions Agent versions to include. Example: \"2.0.0.0,2.1.5.144\".
     * @param {Array.<String>} opts.adQueryContains Free-text filter by Active Directory string (supports multiple values). Example: \"DC=sentinelone\".
     * @param {Date} opts.createdAtGte Agents created after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<Boolean>} opts.locationEnabled The agents supports Location Awareness and it is enabled for the agent's group
     * @param {Array.<String>} opts.cloudProviderNin Exclude Agents from these cloud provider
     * @param {Boolean} opts.isPendingUninstall Include only Agents with pending uninstall requests
     * @param {Array.<String>} opts.k8sNodeLabelsContains Free-text filter by K8s node labels (supports multiple values)
     * @param {Date} opts.decommissionedAtLte Agents decommissioned before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.tagsData Filter agents by their assigned tags. Given in form of a JSON where each key represents a tag key, and each value represents a list of string values to filter by. To filter by unassigned tag values, use __nin suffix in the tag key. Example: \"{\"key1\": [\"value1_1\", \"value1_2\"], \"key2__nin\": [\"value2\"]}\".
     * @param {String} opts.agentVersionGt Agents versions greater than given version. Example: \"2.5.1.1320\".
     * @param {Date} opts.createdAtGt Agents created after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {module:model/String} opts.threatMitigationStatus Include only Agents that have threats with this mitigation status. Example: \"mitigated\".
     * @param {Date} opts.lastSuccessfulScanDateGt Agents last successful full disk scan after this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<Boolean>} opts.firewallEnabled The agents supports Firewall Control and it is enabled for the agent's group
     * @param {Date} opts.decommissionedAtLt Agents decommissioned before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.decommissionedAtBetween Date range for decommission time (format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<String>} opts.domainsNin Not included network domains. Example: \"mybusiness.net,workgroup\".
     * @param {Date} opts.createdAtLt Agents created before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.gcpServiceAccountContains Free-text filter by gcp service account (supports multiple values)
     * @param {Boolean} opts.threatResolved Include only Agents with at least one resolved threat
     * @param {Array.<String>} opts.cloudLocationContains Free-text filter by cloud location (supports multiple values)
     * @param {Date} opts.lastActiveDateLt Agents last active before this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<module:model/String>} opts.networkStatuses Included network statuses. Example: \"connected,connecting\".
     * @param {Array.<String>} opts.k8sTypeContains Free-text filter by K8s type(supports multiple values)
     * @param {Array.<String>} opts.networkInterfaceGatewayMacAddressContains Free-text filter by Gateway MAC address (supports multiple values). Example: \"aa:0f,:41:\".
     * @param {String} opts.cpuCountBetween Possible number of CPU cores (inclusive). Example: \"2-8\".
     * @param {Array.<String>} opts.operationalStatesNin Do not include these Agent operational states
     * @param {Number} opts.totalMemoryLt Memory size (MB, less than)
     * @param {Array.<String>} opts.k8sVersionContains Free-text filter by K8s version (supports multiple values)
     * @param {Array.<module:model/String>} opts.installerTypes Include only Agents installed with these package types. Example: \".msi\".
     * @param {Array.<String>} opts.adUserMemberContains Free-text filter by Active Directory user groups string (supports multiple values). Example: \"DC=sentinelone\".
     * @param {Boolean} opts.infected Include only Agents with at least one active threat
     * @param {Number} opts.coreCountLt CPU cores (less than)
     * @param {Array.<module:model/String>} opts.missingPermissions Included missing permissions. Example: \"user_action_needed_bluetooth_per,user_action_needed_fda_helper\".
     * @param {Array.<module:model/String>} opts.installerTypesNin Exclude Agents installed with these package types. Example: \".msi\".
     * @param {Array.<module:model/String>} opts.machineTypesNin Not included machine types. Example: \"laptop,desktop\".
     * @param {String} opts.filterId Include all Agents matching this saved filter. Example: \"225494730938493804\".
     * @param {Array.<Boolean>} opts.isDecommissioned Include active, decommissioned or both. Example: \"True,False\".
     * @param {String} opts.agentVersionLt Agents versions less than given version. Example: \"2.5.1.1320\".
     * @param {Array.<module:model/String>} opts.rangerStatusesNin Do not include these Ranger Statuses. Example: \"NotApplicable\".
     * @param {Array.<String>} opts.cloudInstanceSizeContains Free-text filter by cloud instance size(supports multiple values)
     * @param {Array.<String>} opts.rangerVersionsNin Ranger versions not to include. Example: \"2.0.0.0,2.1.5.144\".
     * @param {module:model/String} opts.rsoLevel Supported Remote Script Orchestration level. Example: \"none\".
     * @param {Number} opts.cpuCountLte Number of CPUs (less than or equal)
     * @param {String} opts.updatedAtBetween Date range for update time (format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<module:model/String>} opts.consoleMigrationStatuses Migration status in. Example: \"N/A\".
     * @param {Array.<String>} opts.azureResourceGroupContains Free-text filter by azure resource group(supports multiple values)
     * @param {Date} opts.threatCreatedAtGt Agents with threats reported after this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.uuidContains Free-text filter by Agent UUID (supports multiple values). Example: \"e92-01928,b055\".
     * @param {Array.<module:model/String>} opts.networkStatusesNin Included network statuses. Example: \"connected,connecting\".
     * @param {Number} opts.totalMemoryLte Memory size (MB, less than or equal)
     * @param {Number} opts.activeThreatsGt Include Agents with at least this amount of active threats. Example: \"5\".
     * @param {Date} opts.lastSuccessfulScanDateLt Agents last successful full disk scan before this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.adQuery An Active Directory query string. Example: \"CN=Managers,DC=sentinelone,DC=com\".
     * @param {Array.<String>} opts.uuids A list of included UUIDs. Example: \"ff819e70af13be381993075eb0ce5f2f6de05b11,ff819e70af13be381993075eb0ce5f2f6de05c22\".
     * @param {module:api/AgentsApi~webApiAgentsCountGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AgentsSchemasAgentsCountSchema200}
     */
    this.webApiAgentsCountGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'registeredAt__between': opts['registeredAtBetween'],
        'registeredAt__lte': opts['registeredAtLte'],
        'mitigationModeSuspicious': opts['mitigationModeSuspicious'],
        'hasLocalConfiguration': opts['hasLocalConfiguration'],
        'query': opts['query'],
        'coreCount__gt': opts['coreCountGt'],
        'decommissionedAt__gt': opts['decommissionedAtGt'],
        'registeredAt__gte': opts['registeredAtGte'],
        'totalMemory__gt': opts['totalMemoryGt'],
        'updatedAt__gt': opts['updatedAtGt'],
        'hasContainerizedWorkload': opts['hasContainerizedWorkload'],
        'threatCreatedAt__gte': opts['threatCreatedAtGte'],
        'coreCount__lte': opts['coreCountLte'],
        'coreCount__gte': opts['coreCountGte'],
        'gatewayIp': opts['gatewayIp'],
        'updatedAt__lte': opts['updatedAtLte'],
        'migrationStatus': opts['migrationStatus'],
        'decommissionedAt__gte': opts['decommissionedAtGte'],
        'lastSuccessfulScanDate__between': opts['lastSuccessfulScanDateBetween'],
        'lastActiveDate__lte': opts['lastActiveDateLte'],
        'lastActiveDate__between': opts['lastActiveDateBetween'],
        'threatCreatedAt__between': opts['threatCreatedAtBetween'],
        'encryptedApplications': opts['encryptedApplications'],
        'agentVersion__gte': opts['agentVersionGte'],
        'lastSuccessfulScanDate__gte': opts['lastSuccessfulScanDateGte'],
        'csvFilterId': opts['csvFilterId'],
        'isActive': opts['isActive'],
        'mitigationMode': opts['mitigationMode'],
        'agentVersion__lte': opts['agentVersionLte'],
        'updatedAt__gte': opts['updatedAtGte'],
        'agentVersion__between': opts['agentVersionBetween'],
        'activeThreats': opts['activeThreats'],
        'hasTags': opts['hasTags'],
        'cpuCount__lt': opts['cpuCountLt'],
        'registeredAt__lt': opts['registeredAtLt'],
        'remoteOpsForensicsSupported': opts['remoteOpsForensicsSupported'],
        'computerName__like': opts['computerNameLike'],
        'createdAt__between': opts['createdAtBetween'],
        'coreCount__between': opts['coreCountBetween'],
        'isUpToDate': opts['isUpToDate'],
        'threatCreatedAt__lt': opts['threatCreatedAtLt'],
        'rangerStatus': opts['rangerStatus'],
        'totalMemory__between': opts['totalMemoryBetween'],
        'lastSuccessfulScanDate__lte': opts['lastSuccessfulScanDateLte'],
        'cpuCount__gt': opts['cpuCountGt'],
        'updatedAt__lt': opts['updatedAtLt'],
        'computerName': opts['computerName'],
        'uuid': opts['uuid'],
        'lastActiveDate__gte': opts['lastActiveDateGte'],
        'threatContentHash': opts['threatContentHash'],
        'createdAt__lte': opts['createdAtLte'],
        'scanStatus': opts['scanStatus'],
        'registeredAt__gt': opts['registeredAtGt'],
        'osArch': opts['osArch'],
        'totalMemory__gte': opts['totalMemoryGte'],
        'threatHidden': opts['threatHidden'],
        'lastActiveDate__gt': opts['lastActiveDateGt'],
        'threatCreatedAt__lte': opts['threatCreatedAtLte'],
        'cpuCount__gte': opts['cpuCountGte'],
        'createdAt__gte': opts['createdAtGte'],
        'isPendingUninstall': opts['isPendingUninstall'],
        'decommissionedAt__lte': opts['decommissionedAtLte'],
        'tagsData': opts['tagsData'],
        'agentVersion__gt': opts['agentVersionGt'],
        'createdAt__gt': opts['createdAtGt'],
        'threatMitigationStatus': opts['threatMitigationStatus'],
        'lastSuccessfulScanDate__gt': opts['lastSuccessfulScanDateGt'],
        'decommissionedAt__lt': opts['decommissionedAtLt'],
        'decommissionedAt__between': opts['decommissionedAtBetween'],
        'createdAt__lt': opts['createdAtLt'],
        'threatResolved': opts['threatResolved'],
        'lastActiveDate__lt': opts['lastActiveDateLt'],
        'cpuCount__between': opts['cpuCountBetween'],
        'totalMemory__lt': opts['totalMemoryLt'],
        'infected': opts['infected'],
        'coreCount__lt': opts['coreCountLt'],
        'filterId': opts['filterId'],
        'agentVersion__lt': opts['agentVersionLt'],
        'rsoLevel': opts['rsoLevel'],
        'cpuCount__lte': opts['cpuCountLte'],
        'updatedAt__between': opts['updatedAtBetween'],
        'threatCreatedAt__gt': opts['threatCreatedAtGt'],
        'totalMemory__lte': opts['totalMemoryLte'],
        'activeThreats__gt': opts['activeThreatsGt'],
        'lastSuccessfulScanDate__lt': opts['lastSuccessfulScanDateLt'],
        'adQuery': opts['adQuery'],
      };
      var collectionQueryParams = {
        'agentVersionsNin': {
          value: opts['agentVersionsNin'],
          collectionFormat: 'csv'
        },
        'adComputerQuery__contains': {
          value: opts['adComputerQueryContains'],
          collectionFormat: 'csv'
        },
        'adUserQuery__contains': {
          value: opts['adUserQueryContains'],
          collectionFormat: 'csv'
        },
        'cloudProvider': {
          value: opts['cloudProvider'],
          collectionFormat: 'csv'
        },
        'cloudImage__contains': {
          value: opts['cloudImageContains'],
          collectionFormat: 'csv'
        },
        'appsVulnerabilityStatusesNin': {
          value: opts['appsVulnerabilityStatusesNin'],
          collectionFormat: 'csv'
        },
        'scanStatusesNin': {
          value: opts['scanStatusesNin'],
          collectionFormat: 'csv'
        },
        'adComputerMember__contains': {
          value: opts['adComputerMemberContains'],
          collectionFormat: 'csv'
        },
        'rangerVersions': {
          value: opts['rangerVersions'],
          collectionFormat: 'csv'
        },
        'machineTypes': {
          value: opts['machineTypes'],
          collectionFormat: 'csv'
        },
        'locationIds': {
          value: opts['locationIds'],
          collectionFormat: 'csv'
        },
        'locationIdsNin': {
          value: opts['locationIdsNin'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'missingPermissionsNin': {
          value: opts['missingPermissionsNin'],
          collectionFormat: 'csv'
        },
        'threatRebootRequired': {
          value: opts['threatRebootRequired'],
          collectionFormat: 'csv'
        },
        'serialNumber__contains': {
          value: opts['serialNumberContains'],
          collectionFormat: 'csv'
        },
        'networkQuarantineEnabled': {
          value: opts['networkQuarantineEnabled'],
          collectionFormat: 'csv'
        },
        'cloudTags__contains': {
          value: opts['cloudTagsContains'],
          collectionFormat: 'csv'
        },
        'isUninstalled': {
          value: opts['isUninstalled'],
          collectionFormat: 'csv'
        },
        'networkInterfacePhysical__contains': {
          value: opts['networkInterfacePhysicalContains'],
          collectionFormat: 'csv'
        },
        'operationalStates': {
          value: opts['operationalStates'],
          collectionFormat: 'csv'
        },
        'adUserName__contains': {
          value: opts['adUserNameContains'],
          collectionFormat: 'csv'
        },
        'osTypesNin': {
          value: opts['osTypesNin'],
          collectionFormat: 'csv'
        },
        'awsSubnetIds__contains': {
          value: opts['awsSubnetIdsContains'],
          collectionFormat: 'csv'
        },
        'osVersion__contains': {
          value: opts['osVersionContains'],
          collectionFormat: 'csv'
        },
        'externalIp__contains': {
          value: opts['externalIpContains'],
          collectionFormat: 'csv'
        },
        'awsSecurityGroups__contains': {
          value: opts['awsSecurityGroupsContains'],
          collectionFormat: 'csv'
        },
        'k8sNodeName__contains': {
          value: opts['k8sNodeNameContains'],
          collectionFormat: 'csv'
        },
        'agentNamespace__contains': {
          value: opts['agentNamespaceContains'],
          collectionFormat: 'csv'
        },
        'networkInterfaceInet__contains': {
          value: opts['networkInterfaceInetContains'],
          collectionFormat: 'csv'
        },
        'computerName__contains': {
          value: opts['computerNameContains'],
          collectionFormat: 'csv'
        },
        'cloudNetwork__contains': {
          value: opts['cloudNetworkContains'],
          collectionFormat: 'csv'
        },
        'remoteProfilingStates': {
          value: opts['remoteProfilingStates'],
          collectionFormat: 'csv'
        },
        'filteredGroupIds': {
          value: opts['filteredGroupIds'],
          collectionFormat: 'csv'
        },
        'agentPodName__contains': {
          value: opts['agentPodNameContains'],
          collectionFormat: 'csv'
        },
        'userActionsNeededNin': {
          value: opts['userActionsNeededNin'],
          collectionFormat: 'csv'
        },
        'rangerStatuses': {
          value: opts['rangerStatuses'],
          collectionFormat: 'csv'
        },
        'externalId__contains': {
          value: opts['externalIdContains'],
          collectionFormat: 'csv'
        },
        'consoleMigrationStatusesNin': {
          value: opts['consoleMigrationStatusesNin'],
          collectionFormat: 'csv'
        },
        'cpuId__contains': {
          value: opts['cpuIdContains'],
          collectionFormat: 'csv'
        },
        'domains': {
          value: opts['domains'],
          collectionFormat: 'csv'
        },
        'awsRole__contains': {
          value: opts['awsRoleContains'],
          collectionFormat: 'csv'
        },
        'lastLoggedInUserName__contains': {
          value: opts['lastLoggedInUserNameContains'],
          collectionFormat: 'csv'
        },
        'cloudAccount__contains': {
          value: opts['cloudAccountContains'],
          collectionFormat: 'csv'
        },
        'clusterName__contains': {
          value: opts['clusterNameContains'],
          collectionFormat: 'csv'
        },
        'scanStatuses': {
          value: opts['scanStatuses'],
          collectionFormat: 'csv'
        },
        'ids': {
          value: opts['ids'],
          collectionFormat: 'csv'
        },
        'liveUpdateId__contains': {
          value: opts['liveUpdateIdContains'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'appsVulnerabilityStatuses': {
          value: opts['appsVulnerabilityStatuses'],
          collectionFormat: 'csv'
        },
        'remoteProfilingStatesNin': {
          value: opts['remoteProfilingStatesNin'],
          collectionFormat: 'csv'
        },
        'filteredSiteIds': {
          value: opts['filteredSiteIds'],
          collectionFormat: 'csv'
        },
        'userActionsNeeded': {
          value: opts['userActionsNeeded'],
          collectionFormat: 'csv'
        },
        'adComputerName__contains': {
          value: opts['adComputerNameContains'],
          collectionFormat: 'csv'
        },
        'cloudInstanceId__contains': {
          value: opts['cloudInstanceIdContains'],
          collectionFormat: 'csv'
        },
        'agentVersions': {
          value: opts['agentVersions'],
          collectionFormat: 'csv'
        },
        'adQuery__contains': {
          value: opts['adQueryContains'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'locationEnabled': {
          value: opts['locationEnabled'],
          collectionFormat: 'csv'
        },
        'cloudProviderNin': {
          value: opts['cloudProviderNin'],
          collectionFormat: 'csv'
        },
        'k8sNodeLabels__contains': {
          value: opts['k8sNodeLabelsContains'],
          collectionFormat: 'csv'
        },
        'firewallEnabled': {
          value: opts['firewallEnabled'],
          collectionFormat: 'csv'
        },
        'domainsNin': {
          value: opts['domainsNin'],
          collectionFormat: 'csv'
        },
        'gcpServiceAccount__contains': {
          value: opts['gcpServiceAccountContains'],
          collectionFormat: 'csv'
        },
        'cloudLocation__contains': {
          value: opts['cloudLocationContains'],
          collectionFormat: 'csv'
        },
        'networkStatuses': {
          value: opts['networkStatuses'],
          collectionFormat: 'csv'
        },
        'k8sType__contains': {
          value: opts['k8sTypeContains'],
          collectionFormat: 'csv'
        },
        'networkInterfaceGatewayMacAddress__contains': {
          value: opts['networkInterfaceGatewayMacAddressContains'],
          collectionFormat: 'csv'
        },
        'operationalStatesNin': {
          value: opts['operationalStatesNin'],
          collectionFormat: 'csv'
        },
        'k8sVersion__contains': {
          value: opts['k8sVersionContains'],
          collectionFormat: 'csv'
        },
        'installerTypes': {
          value: opts['installerTypes'],
          collectionFormat: 'csv'
        },
        'adUserMember__contains': {
          value: opts['adUserMemberContains'],
          collectionFormat: 'csv'
        },
        'missingPermissions': {
          value: opts['missingPermissions'],
          collectionFormat: 'csv'
        },
        'installerTypesNin': {
          value: opts['installerTypesNin'],
          collectionFormat: 'csv'
        },
        'machineTypesNin': {
          value: opts['machineTypesNin'],
          collectionFormat: 'csv'
        },
        'isDecommissioned': {
          value: opts['isDecommissioned'],
          collectionFormat: 'csv'
        },
        'rangerStatusesNin': {
          value: opts['rangerStatusesNin'],
          collectionFormat: 'csv'
        },
        'cloudInstanceSize__contains': {
          value: opts['cloudInstanceSizeContains'],
          collectionFormat: 'csv'
        },
        'rangerVersionsNin': {
          value: opts['rangerVersionsNin'],
          collectionFormat: 'csv'
        },
        'consoleMigrationStatuses': {
          value: opts['consoleMigrationStatuses'],
          collectionFormat: 'csv'
        },
        'azureResourceGroup__contains': {
          value: opts['azureResourceGroupContains'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'uuid__contains': {
          value: opts['uuidContains'],
          collectionFormat: 'csv'
        },
        'networkStatusesNin': {
          value: opts['networkStatusesNin'],
          collectionFormat: 'csv'
        },
        'uuids': {
          value: opts['uuids'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = AgentsSchemasAgentsCountSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/count', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsGet operation.
     * @callback module:api/AgentsApi~webApiAgentsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AgentsSchemasAgentViewSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Agents
     * Get the Agents, and their data, that match the filter. This command gives the Agent ID, which you can use in other commands. <BR>To save the list and data to a CSV file, use \"export/agents\".
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.agentVersionsNin Agent versions not to include. Example: \"2.0.0.0,2.1.5.144\".
     * @param {String} opts.registeredAtBetween Date range for first registration time (format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978764288-1514978999999\".
     * @param {Date} opts.registeredAtLte Agents registered before or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.adComputerQueryContains Free-text filter by Active Directory computer name or its groups (supports multiple values). Example: \"DC=sentinelone,Windows\".
     * @param {module:model/String} opts.mitigationModeSuspicious Mitigation mode policy for suspicious activity. Example: \"detect\".
     * @param {Boolean} opts.hasLocalConfiguration Agent has a local configuration set
     * @param {Array.<String>} opts.adUserQueryContains Free-text filter by Active Directory computer name or its groups (supports multiple values). Example: \"DC=sentinelone,John\".
     * @param {String} opts.query A free-text search term, will match applicable attributes (sub-string match). Note: Device's physical addresses will be matched if they start with the search term only (no match if they contain the term). Example: \"Linux\".
     * @param {Array.<String>} opts.cloudProvider Agents from which cloud provider
     * @param {Number} opts.coreCountGt CPU cores (more than)
     * @param {Date} opts.decommissionedAtGt Agents decommissioned after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.registeredAtGte Agents registered after or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Number} opts.totalMemoryGt Memory size (MB, more than)
     * @param {Number} opts.skip Skip first number of items (0-1000). To iterate over more than 1000 items,  use \"cursor\". Example: \"150\".
     * @param {Date} opts.updatedAtGt Agents updated after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Boolean} opts.hasContainerizedWorkload Include only Agents protecting containerized workloads
     * @param {Array.<String>} opts.cloudImageContains Free-text filter by cloud image (supports multiple values)
     * @param {Date} opts.threatCreatedAtGte Agents with threats reported after or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<module:model/String>} opts.appsVulnerabilityStatusesNin Apps vulnerability status nin. Example: \"patch_required\".
     * @param {Array.<module:model/String>} opts.scanStatusesNin Not included scan statuses. Example: \"started,aborted\".
     * @param {Array.<String>} opts.adComputerMemberContains Free-text filter by Active Directory computer groups string (supports multiple values). Example: \"DC=sentinelone\".
     * @param {Number} opts.coreCountLte CPU cores (less than or equal)
     * @param {Array.<String>} opts.rangerVersions Ranger versions to include. Example: \"2.0.0.0,2.1.5.144\".
     * @param {Array.<module:model/String>} opts.machineTypes Included machine types. Example: \"laptop,desktop\".
     * @param {Number} opts.coreCountGte CPU cores (more than or equal)
     * @param {Array.<String>} opts.locationIds Include only Agents reporting these locations. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.locationIdsNin Do not include only Agents reporting these locations. Example: \"225494730938493804,225494730938493915\".
     * @param {String} opts.gatewayIp Gateway ip. Example: \"192.168.0.1\".
     * @param {Date} opts.updatedAtLte Agents updated before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<module:model/String>} opts.missingPermissionsNin Excluded missing permissions. Example: \"user_action_needed_bluetooth_per,user_action_needed_fda_helper\".
     * @param {module:model/String} opts.migrationStatus Migration status. Example: \"N/A\".
     * @param {Array.<Boolean>} opts.threatRebootRequired Has at least one threat with at least one mitigation action pending reboot to succeed
     * @param {Array.<String>} opts.serialNumberContains Free-text filter by Serial Number (supports multiple values)
     * @param {Date} opts.decommissionedAtGte Agents decommissioned after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.lastSuccessfulScanDateBetween Date range for last successful full disk scan(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978764288-1514978999999\".
     * @param {Date} opts.lastActiveDateLte Agents last active before or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.lastActiveDateBetween Date range for last active date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978764288-1514978999999\".
     * @param {Array.<Boolean>} opts.networkQuarantineEnabled The agents supports Network Quarantine Control and its enabled for the agent's group
     * @param {Array.<String>} opts.cloudTagsContains Free-text filter by cloud tags (supports multiple values)
     * @param {String} opts.threatCreatedAtBetween Agents with threats reported in a date range (format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978764288-1514978999999\".
     * @param {Boolean} opts.encryptedApplications Disk encryption status
     * @param {Array.<Boolean>} opts.isUninstalled Include installed, uninstalled or both. Example: \"True,False\".
     * @param {Array.<String>} opts.networkInterfacePhysicalContains Free-text filter by MAC address (supports multiple values). Example: \"aa:0f,:41:\".
     * @param {String} opts.agentVersionGte Agents versions greater than or equal to given version. Example: \"2.5.1.1320\".
     * @param {Date} opts.lastSuccessfulScanDateGte Agents last successful full disk scan after or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.operationalStates Agent operational state
     * @param {Array.<String>} opts.adUserNameContains Free-text filter by Active Directory username string (supports multiple values). Example: \"DC=sentinelone\".
     * @param {Array.<module:model/String>} opts.osTypesNin Not included OS types. Example: \"windows\".
     * @param {String} opts.csvFilterId The ID of the CSV file to filter by. Example: \"225494730938493804\".
     * @param {String} opts.cursor Cursor position returned by the last request. Use to iterate over more than 1000 items. Example: \"YWdlbnRfaWQ6NTgwMjkzODE=\". (default to null)
     * @param {Boolean} opts.isActive Include only active Agents
     * @param {module:model/String} opts.mitigationMode Agent mitigation mode policy. Example: \"detect\".
     * @param {Array.<String>} opts.awsSubnetIdsContains Free-text filter by aws subnet ids (supports multiple values)
     * @param {String} opts.agentVersionLte Agents versions less than or equal to given version. Example: \"2.5.1.1320\".
     * @param {Date} opts.updatedAtGte Agents updated after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.osVersionContains Free-text filter by OS full name and version (supports multiple values). Example: \"Service Pack 1\".
     * @param {Array.<String>} opts.externalIpContains Free-text filter by visible IP (supports multiple values). Example: \"205,127.0\".
     * @param {Array.<String>} opts.awsSecurityGroupsContains Free-text filter by aws securityGroups(supports multiple values)
     * @param {Array.<String>} opts.k8sNodeNameContains Free-text filter by K8s node name (supports multiple values)
     * @param {String} opts.agentVersionBetween Version range for agent version (format: <from_version>-<to_version>, inclusive). Example: \"2.0.0.0-2.1.5.144\".
     * @param {module:model/String} opts.sortOrder Sort direction. Example: \"asc\". (default to null)
     * @param {Number} opts.activeThreats Include Agents with this amount of active threats. Example: \"3\".
     * @param {Boolean} opts.hasTags Include only Agents that have any tags assigned if True, or none if False
     * @param {Array.<String>} opts.agentNamespaceContains Free-text filter by agent namespace (supports multiple values)
     * @param {Number} opts.cpuCountLt Number of CPUs (less than)
     * @param {Date} opts.registeredAtLt Agents registered before this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.networkInterfaceInetContains Free-text filter by local IP (supports multiple values). Example: \"192,10.0.0\".
     * @param {Array.<String>} opts.computerNameContains Free-text filter by computer name (supports multiple values). Example: \"john-office,WIN\".
     * @param {Array.<String>} opts.cloudNetworkContains Free-text filter by cloud network (supports multiple values)
     * @param {Boolean} opts.remoteOpsForensicsSupported Include only agents that has Remote Ops Forensicsfeature supported
     * @param {Array.<String>} opts.remoteProfilingStates Agent remote profiling state
     * @param {Array.<String>} opts.filteredGroupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.agentPodNameContains Free-text filter by agent pod name (supports multiple values)
     * @param {Array.<module:model/String>} opts.userActionsNeededNin Excluded pending user actions. Example: \"reboot_needed,upgrade_needed\".
     * @param {Array.<module:model/String>} opts.rangerStatuses Status of Ranger. Example: \"NotApplicable\".
     * @param {String} opts.computerNameLike Match computer name partially (substring). Example: \"Lab1\".
     * @param {Array.<String>} opts.externalIdContains Free-text filter by external ID (Customer ID). Example: \"Tag#1 - monitoring,Performance machine\".
     * @param {String} opts.createdAtBetween Date range for creation time (format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<module:model/String>} opts.consoleMigrationStatusesNin Migration status nin. Example: \"N/A\".
     * @param {Array.<String>} opts.cpuIdContains Free-text filter by CPU name (supports multiple values). Example: \"Intel,AMD\".
     * @param {String} opts.coreCountBetween Possible number of CPU cores (inclusive). Example: \"2-8\".
     * @param {Boolean} opts.isUpToDate Include only Agents with updated software
     * @param {Date} opts.threatCreatedAtLt Agents with threats reported before this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {module:model/String} opts.rangerStatus [DEPRECATED] Use rangerStatuses. Example: \"NotApplicable\".
     * @param {String} opts.totalMemoryBetween Total memory range (GB, inclusive). Example: \"4-8\".
     * @param {Date} opts.lastSuccessfulScanDateLte Agents last successful full disk scan before or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.domains Included network domains. Example: \"mybusiness.net,workgroup\".
     * @param {Array.<String>} opts.awsRoleContains Free-text filter by aws role(supports multiple values)
     * @param {Array.<String>} opts.lastLoggedInUserNameContains Free-text filter by username (supports multiple values). Example: \"admin,johnd1\".
     * @param {Number} opts.cpuCountGt Number of CPUs (more than)
     * @param {Array.<String>} opts.cloudAccountContains Free-text filter by cloud account (supports multiple values)
     * @param {Array.<String>} opts.clusterNameContains Free-text filter by cluster name (supports multiple values)
     * @param {Array.<module:model/String>} opts.scanStatuses Included scan statuses. Example: \"started,aborted\".
     * @param {Date} opts.updatedAtLt Agents updated before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.ids A list of Agent IDs. Example: \"225494730938493804,225494730938493915\".
     * @param {Boolean} opts.countOnly If true, only total number of items will be returned, without any of the actual objects. (default to false)
     * @param {Array.<String>} opts.liveUpdateIdContains Free-text filter by live update ID (supports multiple values)
     * @param {Number} opts.limit Limit number of returned items (1-1000). Example: \"10\". (default to 10)
     * @param {String} opts.computerName Computer name. Example: \"My Office Desktop\".
     * @param {String} opts.uuid Agent's universally unique identifier. Example: \"ff819e70af13be381993075eb0ce5f2f6de05be2\".
     * @param {Array.<module:model/String>} opts.osTypes Included OS types. Example: \"windows\".
     * @param {Array.<module:model/String>} opts.appsVulnerabilityStatuses Apps vulnerability status in. Example: \"patch_required\".
     * @param {Date} opts.lastActiveDateGte Agents last active after or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Boolean} opts.skipCount If true, total number of items will not be calculated, which speeds up execution time. (default to null)
     * @param {String} opts.threatContentHash Include only Agents that have at least one threat with this content hash. Example: \"cf23df2207d99a74fbe169e3eba035e633b65d94\".
     * @param {Array.<String>} opts.remoteProfilingStatesNin Do not include these Agent remote profiling states
     * @param {Date} opts.createdAtLte Agents created before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {module:model/String} opts.scanStatus Scan status. Example: \"none\".
     * @param {Array.<String>} opts.filteredSiteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<module:model/String>} opts.userActionsNeeded Included pending user actions. Example: \"reboot_needed,upgrade_needed\".
     * @param {Date} opts.registeredAtGt Agents registered after this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {module:model/String} opts.osArch OS architecture. Example: \"32 bit\".
     * @param {Array.<String>} opts.adComputerNameContains Free-text filter by Active Directory computer name string (supports multiple values). Example: \"DC=sentinelone\".
     * @param {Number} opts.totalMemoryGte Memory size (MB, more than or equal)
     * @param {Boolean} opts.threatHidden Include only Agents with at least one hidden threat
     * @param {module:model/String} opts.sortBy The column to sort the results by. Example: \"id\". (default to null)
     * @param {Date} opts.lastActiveDateGt Agents last active after this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.threatCreatedAtLte Agents with threats reported before or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Number} opts.cpuCountGte Number of CPUs (more than or equal)
     * @param {Array.<String>} opts.cloudInstanceIdContains Free-text filter by cloud instance id(supports multiple values)
     * @param {Array.<String>} opts.agentVersions Agent versions to include. Example: \"2.0.0.0,2.1.5.144\".
     * @param {Array.<String>} opts.adQueryContains Free-text filter by Active Directory string (supports multiple values). Example: \"DC=sentinelone\".
     * @param {Date} opts.createdAtGte Agents created after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<Boolean>} opts.locationEnabled The agents supports Location Awareness and it is enabled for the agent's group
     * @param {Array.<String>} opts.cloudProviderNin Exclude Agents from these cloud provider
     * @param {Boolean} opts.isPendingUninstall Include only Agents with pending uninstall requests
     * @param {Array.<String>} opts.k8sNodeLabelsContains Free-text filter by K8s node labels (supports multiple values)
     * @param {Date} opts.decommissionedAtLte Agents decommissioned before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.tagsData Filter agents by their assigned tags. Given in form of a JSON where each key represents a tag key, and each value represents a list of string values to filter by. To filter by unassigned tag values, use __nin suffix in the tag key. Example: \"{\"key1\": [\"value1_1\", \"value1_2\"], \"key2__nin\": [\"value2\"]}\".
     * @param {String} opts.agentVersionGt Agents versions greater than given version. Example: \"2.5.1.1320\".
     * @param {Date} opts.createdAtGt Agents created after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {module:model/String} opts.threatMitigationStatus Include only Agents that have threats with this mitigation status. Example: \"mitigated\".
     * @param {Date} opts.lastSuccessfulScanDateGt Agents last successful full disk scan after this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<Boolean>} opts.firewallEnabled The agents supports Firewall Control and it is enabled for the agent's group
     * @param {Date} opts.decommissionedAtLt Agents decommissioned before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.decommissionedAtBetween Date range for decommission time (format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<String>} opts.domainsNin Not included network domains. Example: \"mybusiness.net,workgroup\".
     * @param {Date} opts.createdAtLt Agents created before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.gcpServiceAccountContains Free-text filter by gcp service account (supports multiple values)
     * @param {Boolean} opts.threatResolved Include only Agents with at least one resolved threat
     * @param {Array.<String>} opts.cloudLocationContains Free-text filter by cloud location (supports multiple values)
     * @param {Date} opts.lastActiveDateLt Agents last active before this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<module:model/String>} opts.networkStatuses Included network statuses. Example: \"connected,connecting\".
     * @param {Array.<String>} opts.k8sTypeContains Free-text filter by K8s type(supports multiple values)
     * @param {Array.<String>} opts.networkInterfaceGatewayMacAddressContains Free-text filter by Gateway MAC address (supports multiple values). Example: \"aa:0f,:41:\".
     * @param {String} opts.cpuCountBetween Possible number of CPU cores (inclusive). Example: \"2-8\".
     * @param {Array.<String>} opts.operationalStatesNin Do not include these Agent operational states
     * @param {Number} opts.totalMemoryLt Memory size (MB, less than)
     * @param {Array.<String>} opts.k8sVersionContains Free-text filter by K8s version (supports multiple values)
     * @param {Array.<module:model/String>} opts.installerTypes Include only Agents installed with these package types. Example: \".msi\".
     * @param {Array.<String>} opts.adUserMemberContains Free-text filter by Active Directory user groups string (supports multiple values). Example: \"DC=sentinelone\".
     * @param {Boolean} opts.infected Include only Agents with at least one active threat
     * @param {Number} opts.coreCountLt CPU cores (less than)
     * @param {Array.<module:model/String>} opts.missingPermissions Included missing permissions. Example: \"user_action_needed_bluetooth_per,user_action_needed_fda_helper\".
     * @param {Array.<module:model/String>} opts.installerTypesNin Exclude Agents installed with these package types. Example: \".msi\".
     * @param {Array.<module:model/String>} opts.machineTypesNin Not included machine types. Example: \"laptop,desktop\".
     * @param {String} opts.filterId Include all Agents matching this saved filter. Example: \"225494730938493804\".
     * @param {Array.<Boolean>} opts.isDecommissioned Include active, decommissioned or both. Example: \"True,False\".
     * @param {String} opts.agentVersionLt Agents versions less than given version. Example: \"2.5.1.1320\".
     * @param {Array.<module:model/String>} opts.rangerStatusesNin Do not include these Ranger Statuses. Example: \"NotApplicable\".
     * @param {Array.<String>} opts.cloudInstanceSizeContains Free-text filter by cloud instance size(supports multiple values)
     * @param {Array.<String>} opts.rangerVersionsNin Ranger versions not to include. Example: \"2.0.0.0,2.1.5.144\".
     * @param {module:model/String} opts.rsoLevel Supported Remote Script Orchestration level. Example: \"none\".
     * @param {Number} opts.cpuCountLte Number of CPUs (less than or equal)
     * @param {String} opts.updatedAtBetween Date range for update time (format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<module:model/String>} opts.consoleMigrationStatuses Migration status in. Example: \"N/A\".
     * @param {Array.<String>} opts.azureResourceGroupContains Free-text filter by azure resource group(supports multiple values)
     * @param {Date} opts.threatCreatedAtGt Agents with threats reported after this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.uuidContains Free-text filter by Agent UUID (supports multiple values). Example: \"e92-01928,b055\".
     * @param {Array.<module:model/String>} opts.networkStatusesNin Included network statuses. Example: \"connected,connecting\".
     * @param {Number} opts.totalMemoryLte Memory size (MB, less than or equal)
     * @param {Number} opts.activeThreatsGt Include Agents with at least this amount of active threats. Example: \"5\".
     * @param {Date} opts.lastSuccessfulScanDateLt Agents last successful full disk scan before this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.adQuery An Active Directory query string. Example: \"CN=Managers,DC=sentinelone,DC=com\".
     * @param {Array.<String>} opts.uuids A list of included UUIDs. Example: \"ff819e70af13be381993075eb0ce5f2f6de05b11,ff819e70af13be381993075eb0ce5f2f6de05c22\".
     * @param {module:api/AgentsApi~webApiAgentsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AgentsSchemasAgentViewSchemaMany200}
     */
    this.webApiAgentsGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'registeredAt__between': opts['registeredAtBetween'],
        'registeredAt__lte': opts['registeredAtLte'],
        'mitigationModeSuspicious': opts['mitigationModeSuspicious'],
        'hasLocalConfiguration': opts['hasLocalConfiguration'],
        'query': opts['query'],
        'coreCount__gt': opts['coreCountGt'],
        'decommissionedAt__gt': opts['decommissionedAtGt'],
        'registeredAt__gte': opts['registeredAtGte'],
        'totalMemory__gt': opts['totalMemoryGt'],
        'skip': opts['skip'],
        'updatedAt__gt': opts['updatedAtGt'],
        'hasContainerizedWorkload': opts['hasContainerizedWorkload'],
        'threatCreatedAt__gte': opts['threatCreatedAtGte'],
        'coreCount__lte': opts['coreCountLte'],
        'coreCount__gte': opts['coreCountGte'],
        'gatewayIp': opts['gatewayIp'],
        'updatedAt__lte': opts['updatedAtLte'],
        'migrationStatus': opts['migrationStatus'],
        'decommissionedAt__gte': opts['decommissionedAtGte'],
        'lastSuccessfulScanDate__between': opts['lastSuccessfulScanDateBetween'],
        'lastActiveDate__lte': opts['lastActiveDateLte'],
        'lastActiveDate__between': opts['lastActiveDateBetween'],
        'threatCreatedAt__between': opts['threatCreatedAtBetween'],
        'encryptedApplications': opts['encryptedApplications'],
        'agentVersion__gte': opts['agentVersionGte'],
        'lastSuccessfulScanDate__gte': opts['lastSuccessfulScanDateGte'],
        'csvFilterId': opts['csvFilterId'],
        'cursor': opts['cursor'],
        'isActive': opts['isActive'],
        'mitigationMode': opts['mitigationMode'],
        'agentVersion__lte': opts['agentVersionLte'],
        'updatedAt__gte': opts['updatedAtGte'],
        'agentVersion__between': opts['agentVersionBetween'],
        'sortOrder': opts['sortOrder'],
        'activeThreats': opts['activeThreats'],
        'hasTags': opts['hasTags'],
        'cpuCount__lt': opts['cpuCountLt'],
        'registeredAt__lt': opts['registeredAtLt'],
        'remoteOpsForensicsSupported': opts['remoteOpsForensicsSupported'],
        'computerName__like': opts['computerNameLike'],
        'createdAt__between': opts['createdAtBetween'],
        'coreCount__between': opts['coreCountBetween'],
        'isUpToDate': opts['isUpToDate'],
        'threatCreatedAt__lt': opts['threatCreatedAtLt'],
        'rangerStatus': opts['rangerStatus'],
        'totalMemory__between': opts['totalMemoryBetween'],
        'lastSuccessfulScanDate__lte': opts['lastSuccessfulScanDateLte'],
        'cpuCount__gt': opts['cpuCountGt'],
        'updatedAt__lt': opts['updatedAtLt'],
        'countOnly': opts['countOnly'],
        'limit': opts['limit'],
        'computerName': opts['computerName'],
        'uuid': opts['uuid'],
        'lastActiveDate__gte': opts['lastActiveDateGte'],
        'skipCount': opts['skipCount'],
        'threatContentHash': opts['threatContentHash'],
        'createdAt__lte': opts['createdAtLte'],
        'scanStatus': opts['scanStatus'],
        'registeredAt__gt': opts['registeredAtGt'],
        'osArch': opts['osArch'],
        'totalMemory__gte': opts['totalMemoryGte'],
        'threatHidden': opts['threatHidden'],
        'sortBy': opts['sortBy'],
        'lastActiveDate__gt': opts['lastActiveDateGt'],
        'threatCreatedAt__lte': opts['threatCreatedAtLte'],
        'cpuCount__gte': opts['cpuCountGte'],
        'createdAt__gte': opts['createdAtGte'],
        'isPendingUninstall': opts['isPendingUninstall'],
        'decommissionedAt__lte': opts['decommissionedAtLte'],
        'tagsData': opts['tagsData'],
        'agentVersion__gt': opts['agentVersionGt'],
        'createdAt__gt': opts['createdAtGt'],
        'threatMitigationStatus': opts['threatMitigationStatus'],
        'lastSuccessfulScanDate__gt': opts['lastSuccessfulScanDateGt'],
        'decommissionedAt__lt': opts['decommissionedAtLt'],
        'decommissionedAt__between': opts['decommissionedAtBetween'],
        'createdAt__lt': opts['createdAtLt'],
        'threatResolved': opts['threatResolved'],
        'lastActiveDate__lt': opts['lastActiveDateLt'],
        'cpuCount__between': opts['cpuCountBetween'],
        'totalMemory__lt': opts['totalMemoryLt'],
        'infected': opts['infected'],
        'coreCount__lt': opts['coreCountLt'],
        'filterId': opts['filterId'],
        'agentVersion__lt': opts['agentVersionLt'],
        'rsoLevel': opts['rsoLevel'],
        'cpuCount__lte': opts['cpuCountLte'],
        'updatedAt__between': opts['updatedAtBetween'],
        'threatCreatedAt__gt': opts['threatCreatedAtGt'],
        'totalMemory__lte': opts['totalMemoryLte'],
        'activeThreats__gt': opts['activeThreatsGt'],
        'lastSuccessfulScanDate__lt': opts['lastSuccessfulScanDateLt'],
        'adQuery': opts['adQuery'],
      };
      var collectionQueryParams = {
        'agentVersionsNin': {
          value: opts['agentVersionsNin'],
          collectionFormat: 'csv'
        },
        'adComputerQuery__contains': {
          value: opts['adComputerQueryContains'],
          collectionFormat: 'csv'
        },
        'adUserQuery__contains': {
          value: opts['adUserQueryContains'],
          collectionFormat: 'csv'
        },
        'cloudProvider': {
          value: opts['cloudProvider'],
          collectionFormat: 'csv'
        },
        'cloudImage__contains': {
          value: opts['cloudImageContains'],
          collectionFormat: 'csv'
        },
        'appsVulnerabilityStatusesNin': {
          value: opts['appsVulnerabilityStatusesNin'],
          collectionFormat: 'csv'
        },
        'scanStatusesNin': {
          value: opts['scanStatusesNin'],
          collectionFormat: 'csv'
        },
        'adComputerMember__contains': {
          value: opts['adComputerMemberContains'],
          collectionFormat: 'csv'
        },
        'rangerVersions': {
          value: opts['rangerVersions'],
          collectionFormat: 'csv'
        },
        'machineTypes': {
          value: opts['machineTypes'],
          collectionFormat: 'csv'
        },
        'locationIds': {
          value: opts['locationIds'],
          collectionFormat: 'csv'
        },
        'locationIdsNin': {
          value: opts['locationIdsNin'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'missingPermissionsNin': {
          value: opts['missingPermissionsNin'],
          collectionFormat: 'csv'
        },
        'threatRebootRequired': {
          value: opts['threatRebootRequired'],
          collectionFormat: 'csv'
        },
        'serialNumber__contains': {
          value: opts['serialNumberContains'],
          collectionFormat: 'csv'
        },
        'networkQuarantineEnabled': {
          value: opts['networkQuarantineEnabled'],
          collectionFormat: 'csv'
        },
        'cloudTags__contains': {
          value: opts['cloudTagsContains'],
          collectionFormat: 'csv'
        },
        'isUninstalled': {
          value: opts['isUninstalled'],
          collectionFormat: 'csv'
        },
        'networkInterfacePhysical__contains': {
          value: opts['networkInterfacePhysicalContains'],
          collectionFormat: 'csv'
        },
        'operationalStates': {
          value: opts['operationalStates'],
          collectionFormat: 'csv'
        },
        'adUserName__contains': {
          value: opts['adUserNameContains'],
          collectionFormat: 'csv'
        },
        'osTypesNin': {
          value: opts['osTypesNin'],
          collectionFormat: 'csv'
        },
        'awsSubnetIds__contains': {
          value: opts['awsSubnetIdsContains'],
          collectionFormat: 'csv'
        },
        'osVersion__contains': {
          value: opts['osVersionContains'],
          collectionFormat: 'csv'
        },
        'externalIp__contains': {
          value: opts['externalIpContains'],
          collectionFormat: 'csv'
        },
        'awsSecurityGroups__contains': {
          value: opts['awsSecurityGroupsContains'],
          collectionFormat: 'csv'
        },
        'k8sNodeName__contains': {
          value: opts['k8sNodeNameContains'],
          collectionFormat: 'csv'
        },
        'agentNamespace__contains': {
          value: opts['agentNamespaceContains'],
          collectionFormat: 'csv'
        },
        'networkInterfaceInet__contains': {
          value: opts['networkInterfaceInetContains'],
          collectionFormat: 'csv'
        },
        'computerName__contains': {
          value: opts['computerNameContains'],
          collectionFormat: 'csv'
        },
        'cloudNetwork__contains': {
          value: opts['cloudNetworkContains'],
          collectionFormat: 'csv'
        },
        'remoteProfilingStates': {
          value: opts['remoteProfilingStates'],
          collectionFormat: 'csv'
        },
        'filteredGroupIds': {
          value: opts['filteredGroupIds'],
          collectionFormat: 'csv'
        },
        'agentPodName__contains': {
          value: opts['agentPodNameContains'],
          collectionFormat: 'csv'
        },
        'userActionsNeededNin': {
          value: opts['userActionsNeededNin'],
          collectionFormat: 'csv'
        },
        'rangerStatuses': {
          value: opts['rangerStatuses'],
          collectionFormat: 'csv'
        },
        'externalId__contains': {
          value: opts['externalIdContains'],
          collectionFormat: 'csv'
        },
        'consoleMigrationStatusesNin': {
          value: opts['consoleMigrationStatusesNin'],
          collectionFormat: 'csv'
        },
        'cpuId__contains': {
          value: opts['cpuIdContains'],
          collectionFormat: 'csv'
        },
        'domains': {
          value: opts['domains'],
          collectionFormat: 'csv'
        },
        'awsRole__contains': {
          value: opts['awsRoleContains'],
          collectionFormat: 'csv'
        },
        'lastLoggedInUserName__contains': {
          value: opts['lastLoggedInUserNameContains'],
          collectionFormat: 'csv'
        },
        'cloudAccount__contains': {
          value: opts['cloudAccountContains'],
          collectionFormat: 'csv'
        },
        'clusterName__contains': {
          value: opts['clusterNameContains'],
          collectionFormat: 'csv'
        },
        'scanStatuses': {
          value: opts['scanStatuses'],
          collectionFormat: 'csv'
        },
        'ids': {
          value: opts['ids'],
          collectionFormat: 'csv'
        },
        'liveUpdateId__contains': {
          value: opts['liveUpdateIdContains'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'appsVulnerabilityStatuses': {
          value: opts['appsVulnerabilityStatuses'],
          collectionFormat: 'csv'
        },
        'remoteProfilingStatesNin': {
          value: opts['remoteProfilingStatesNin'],
          collectionFormat: 'csv'
        },
        'filteredSiteIds': {
          value: opts['filteredSiteIds'],
          collectionFormat: 'csv'
        },
        'userActionsNeeded': {
          value: opts['userActionsNeeded'],
          collectionFormat: 'csv'
        },
        'adComputerName__contains': {
          value: opts['adComputerNameContains'],
          collectionFormat: 'csv'
        },
        'cloudInstanceId__contains': {
          value: opts['cloudInstanceIdContains'],
          collectionFormat: 'csv'
        },
        'agentVersions': {
          value: opts['agentVersions'],
          collectionFormat: 'csv'
        },
        'adQuery__contains': {
          value: opts['adQueryContains'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'locationEnabled': {
          value: opts['locationEnabled'],
          collectionFormat: 'csv'
        },
        'cloudProviderNin': {
          value: opts['cloudProviderNin'],
          collectionFormat: 'csv'
        },
        'k8sNodeLabels__contains': {
          value: opts['k8sNodeLabelsContains'],
          collectionFormat: 'csv'
        },
        'firewallEnabled': {
          value: opts['firewallEnabled'],
          collectionFormat: 'csv'
        },
        'domainsNin': {
          value: opts['domainsNin'],
          collectionFormat: 'csv'
        },
        'gcpServiceAccount__contains': {
          value: opts['gcpServiceAccountContains'],
          collectionFormat: 'csv'
        },
        'cloudLocation__contains': {
          value: opts['cloudLocationContains'],
          collectionFormat: 'csv'
        },
        'networkStatuses': {
          value: opts['networkStatuses'],
          collectionFormat: 'csv'
        },
        'k8sType__contains': {
          value: opts['k8sTypeContains'],
          collectionFormat: 'csv'
        },
        'networkInterfaceGatewayMacAddress__contains': {
          value: opts['networkInterfaceGatewayMacAddressContains'],
          collectionFormat: 'csv'
        },
        'operationalStatesNin': {
          value: opts['operationalStatesNin'],
          collectionFormat: 'csv'
        },
        'k8sVersion__contains': {
          value: opts['k8sVersionContains'],
          collectionFormat: 'csv'
        },
        'installerTypes': {
          value: opts['installerTypes'],
          collectionFormat: 'csv'
        },
        'adUserMember__contains': {
          value: opts['adUserMemberContains'],
          collectionFormat: 'csv'
        },
        'missingPermissions': {
          value: opts['missingPermissions'],
          collectionFormat: 'csv'
        },
        'installerTypesNin': {
          value: opts['installerTypesNin'],
          collectionFormat: 'csv'
        },
        'machineTypesNin': {
          value: opts['machineTypesNin'],
          collectionFormat: 'csv'
        },
        'isDecommissioned': {
          value: opts['isDecommissioned'],
          collectionFormat: 'csv'
        },
        'rangerStatusesNin': {
          value: opts['rangerStatusesNin'],
          collectionFormat: 'csv'
        },
        'cloudInstanceSize__contains': {
          value: opts['cloudInstanceSizeContains'],
          collectionFormat: 'csv'
        },
        'rangerVersionsNin': {
          value: opts['rangerVersionsNin'],
          collectionFormat: 'csv'
        },
        'consoleMigrationStatuses': {
          value: opts['consoleMigrationStatuses'],
          collectionFormat: 'csv'
        },
        'azureResourceGroup__contains': {
          value: opts['azureResourceGroupContains'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'uuid__contains': {
          value: opts['uuidContains'],
          collectionFormat: 'csv'
        },
        'networkStatusesNin': {
          value: opts['networkStatusesNin'],
          collectionFormat: 'csv'
        },
        'uuids': {
          value: opts['uuids'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = AgentsSchemasAgentViewSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsPassphrasesGet operation.
     * @callback module:api/AgentsApi~webApiAgentsPassphrasesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AgentsSchemasAgentPassphraseSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Passphrase
     * Show the passphrase for the Agents that match the filter. This is an important command. You need the passphrase for most SentinelCtl commands and for different API commands.
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.agentVersionsNin Agent versions not to include. Example: \"2.0.0.0,2.1.5.144\".
     * @param {String} opts.registeredAtBetween Date range for first registration time (format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978764288-1514978999999\".
     * @param {Date} opts.registeredAtLte Agents registered before or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.adComputerQueryContains Free-text filter by Active Directory computer name or its groups (supports multiple values). Example: \"DC=sentinelone,Windows\".
     * @param {module:model/String} opts.mitigationModeSuspicious Mitigation mode policy for suspicious activity. Example: \"detect\".
     * @param {Boolean} opts.hasLocalConfiguration Agent has a local configuration set
     * @param {Array.<String>} opts.adUserQueryContains Free-text filter by Active Directory computer name or its groups (supports multiple values). Example: \"DC=sentinelone,John\".
     * @param {String} opts.query A free-text search term, will match applicable attributes (sub-string match). Note: Device's physical addresses will be matched if they start with the search term only (no match if they contain the term). Example: \"Linux\".
     * @param {Array.<String>} opts.cloudProvider Agents from which cloud provider
     * @param {Number} opts.coreCountGt CPU cores (more than)
     * @param {Date} opts.decommissionedAtGt Agents decommissioned after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.registeredAtGte Agents registered after or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Number} opts.totalMemoryGt Memory size (MB, more than)
     * @param {Number} opts.skip Skip first number of items (0-1000). To iterate over more than 1000 items,  use \"cursor\". Example: \"150\".
     * @param {Date} opts.updatedAtGt Agents updated after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Boolean} opts.hasContainerizedWorkload Include only Agents protecting containerized workloads
     * @param {Array.<String>} opts.cloudImageContains Free-text filter by cloud image (supports multiple values)
     * @param {Date} opts.threatCreatedAtGte Agents with threats reported after or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<module:model/String>} opts.appsVulnerabilityStatusesNin Apps vulnerability status nin. Example: \"patch_required\".
     * @param {Array.<module:model/String>} opts.scanStatusesNin Not included scan statuses. Example: \"started,aborted\".
     * @param {Array.<String>} opts.adComputerMemberContains Free-text filter by Active Directory computer groups string (supports multiple values). Example: \"DC=sentinelone\".
     * @param {Number} opts.coreCountLte CPU cores (less than or equal)
     * @param {Array.<String>} opts.rangerVersions Ranger versions to include. Example: \"2.0.0.0,2.1.5.144\".
     * @param {Array.<module:model/String>} opts.machineTypes Included machine types. Example: \"laptop,desktop\".
     * @param {Number} opts.coreCountGte CPU cores (more than or equal)
     * @param {Array.<String>} opts.locationIds Include only Agents reporting these locations. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.locationIdsNin Do not include only Agents reporting these locations. Example: \"225494730938493804,225494730938493915\".
     * @param {String} opts.gatewayIp Gateway ip. Example: \"192.168.0.1\".
     * @param {Date} opts.updatedAtLte Agents updated before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<module:model/String>} opts.missingPermissionsNin Excluded missing permissions. Example: \"user_action_needed_bluetooth_per,user_action_needed_fda_helper\".
     * @param {module:model/String} opts.migrationStatus Migration status. Example: \"N/A\".
     * @param {Array.<Boolean>} opts.threatRebootRequired Has at least one threat with at least one mitigation action pending reboot to succeed
     * @param {Array.<String>} opts.serialNumberContains Free-text filter by Serial Number (supports multiple values)
     * @param {Date} opts.decommissionedAtGte Agents decommissioned after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.lastSuccessfulScanDateBetween Date range for last successful full disk scan(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978764288-1514978999999\".
     * @param {Date} opts.lastActiveDateLte Agents last active before or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.lastActiveDateBetween Date range for last active date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978764288-1514978999999\".
     * @param {Array.<Boolean>} opts.networkQuarantineEnabled The agents supports Network Quarantine Control and its enabled for the agent's group
     * @param {Array.<String>} opts.cloudTagsContains Free-text filter by cloud tags (supports multiple values)
     * @param {String} opts.threatCreatedAtBetween Agents with threats reported in a date range (format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978764288-1514978999999\".
     * @param {Boolean} opts.encryptedApplications Disk encryption status
     * @param {Array.<Boolean>} opts.isUninstalled Include installed, uninstalled or both. Example: \"True,False\".
     * @param {Array.<String>} opts.networkInterfacePhysicalContains Free-text filter by MAC address (supports multiple values). Example: \"aa:0f,:41:\".
     * @param {String} opts.agentVersionGte Agents versions greater than or equal to given version. Example: \"2.5.1.1320\".
     * @param {Date} opts.lastSuccessfulScanDateGte Agents last successful full disk scan after or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.operationalStates Agent operational state
     * @param {Array.<String>} opts.adUserNameContains Free-text filter by Active Directory username string (supports multiple values). Example: \"DC=sentinelone\".
     * @param {Array.<module:model/String>} opts.osTypesNin Not included OS types. Example: \"windows\".
     * @param {String} opts.csvFilterId The ID of the CSV file to filter by. Example: \"225494730938493804\".
     * @param {String} opts.cursor Cursor position returned by the last request. Use to iterate over more than 1000 items. Example: \"YWdlbnRfaWQ6NTgwMjkzODE=\". (default to null)
     * @param {Boolean} opts.isActive Include only active Agents
     * @param {module:model/String} opts.mitigationMode Agent mitigation mode policy. Example: \"detect\".
     * @param {Array.<String>} opts.awsSubnetIdsContains Free-text filter by aws subnet ids (supports multiple values)
     * @param {String} opts.agentVersionLte Agents versions less than or equal to given version. Example: \"2.5.1.1320\".
     * @param {Date} opts.updatedAtGte Agents updated after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.osVersionContains Free-text filter by OS full name and version (supports multiple values). Example: \"Service Pack 1\".
     * @param {Array.<String>} opts.externalIpContains Free-text filter by visible IP (supports multiple values). Example: \"205,127.0\".
     * @param {Array.<String>} opts.awsSecurityGroupsContains Free-text filter by aws securityGroups(supports multiple values)
     * @param {Array.<String>} opts.k8sNodeNameContains Free-text filter by K8s node name (supports multiple values)
     * @param {String} opts.agentVersionBetween Version range for agent version (format: <from_version>-<to_version>, inclusive). Example: \"2.0.0.0-2.1.5.144\".
     * @param {Number} opts.activeThreats Include Agents with this amount of active threats. Example: \"3\".
     * @param {Boolean} opts.hasTags Include only Agents that have any tags assigned if True, or none if False
     * @param {Array.<String>} opts.agentNamespaceContains Free-text filter by agent namespace (supports multiple values)
     * @param {Number} opts.cpuCountLt Number of CPUs (less than)
     * @param {Date} opts.registeredAtLt Agents registered before this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.networkInterfaceInetContains Free-text filter by local IP (supports multiple values). Example: \"192,10.0.0\".
     * @param {Array.<String>} opts.computerNameContains Free-text filter by computer name (supports multiple values). Example: \"john-office,WIN\".
     * @param {Array.<String>} opts.cloudNetworkContains Free-text filter by cloud network (supports multiple values)
     * @param {Boolean} opts.remoteOpsForensicsSupported Include only agents that has Remote Ops Forensicsfeature supported
     * @param {Array.<String>} opts.remoteProfilingStates Agent remote profiling state
     * @param {Array.<String>} opts.filteredGroupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.agentPodNameContains Free-text filter by agent pod name (supports multiple values)
     * @param {Array.<module:model/String>} opts.userActionsNeededNin Excluded pending user actions. Example: \"reboot_needed,upgrade_needed\".
     * @param {Array.<module:model/String>} opts.rangerStatuses Status of Ranger. Example: \"NotApplicable\".
     * @param {String} opts.computerNameLike Match computer name partially (substring). Example: \"Lab1\".
     * @param {Array.<String>} opts.externalIdContains Free-text filter by external ID (Customer ID). Example: \"Tag#1 - monitoring,Performance machine\".
     * @param {String} opts.createdAtBetween Date range for creation time (format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<module:model/String>} opts.consoleMigrationStatusesNin Migration status nin. Example: \"N/A\".
     * @param {Array.<String>} opts.cpuIdContains Free-text filter by CPU name (supports multiple values). Example: \"Intel,AMD\".
     * @param {String} opts.coreCountBetween Possible number of CPU cores (inclusive). Example: \"2-8\".
     * @param {Boolean} opts.isUpToDate Include only Agents with updated software
     * @param {Date} opts.threatCreatedAtLt Agents with threats reported before this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {module:model/String} opts.rangerStatus [DEPRECATED] Use rangerStatuses. Example: \"NotApplicable\".
     * @param {String} opts.totalMemoryBetween Total memory range (GB, inclusive). Example: \"4-8\".
     * @param {Date} opts.lastSuccessfulScanDateLte Agents last successful full disk scan before or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.domains Included network domains. Example: \"mybusiness.net,workgroup\".
     * @param {Array.<String>} opts.awsRoleContains Free-text filter by aws role(supports multiple values)
     * @param {Array.<String>} opts.lastLoggedInUserNameContains Free-text filter by username (supports multiple values). Example: \"admin,johnd1\".
     * @param {Number} opts.cpuCountGt Number of CPUs (more than)
     * @param {Array.<String>} opts.cloudAccountContains Free-text filter by cloud account (supports multiple values)
     * @param {Array.<String>} opts.clusterNameContains Free-text filter by cluster name (supports multiple values)
     * @param {Array.<module:model/String>} opts.scanStatuses Included scan statuses. Example: \"started,aborted\".
     * @param {Date} opts.updatedAtLt Agents updated before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.ids A list of Agent IDs. Example: \"225494730938493804,225494730938493915\".
     * @param {Boolean} opts.countOnly If true, only total number of items will be returned, without any of the actual objects. (default to false)
     * @param {Array.<String>} opts.liveUpdateIdContains Free-text filter by live update ID (supports multiple values)
     * @param {Number} opts.limit Limit number of returned items (1-1000). Example: \"10\". (default to 10)
     * @param {String} opts.computerName Computer name. Example: \"My Office Desktop\".
     * @param {String} opts.uuid Agent's universally unique identifier. Example: \"ff819e70af13be381993075eb0ce5f2f6de05be2\".
     * @param {Array.<module:model/String>} opts.osTypes Included OS types. Example: \"windows\".
     * @param {Array.<module:model/String>} opts.appsVulnerabilityStatuses Apps vulnerability status in. Example: \"patch_required\".
     * @param {Date} opts.lastActiveDateGte Agents last active after or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Boolean} opts.skipCount If true, total number of items will not be calculated, which speeds up execution time. (default to null)
     * @param {String} opts.threatContentHash Include only Agents that have at least one threat with this content hash. Example: \"cf23df2207d99a74fbe169e3eba035e633b65d94\".
     * @param {Array.<String>} opts.remoteProfilingStatesNin Do not include these Agent remote profiling states
     * @param {Date} opts.createdAtLte Agents created before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {module:model/String} opts.scanStatus Scan status. Example: \"none\".
     * @param {Array.<String>} opts.filteredSiteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<module:model/String>} opts.userActionsNeeded Included pending user actions. Example: \"reboot_needed,upgrade_needed\".
     * @param {Date} opts.registeredAtGt Agents registered after this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {module:model/String} opts.osArch OS architecture. Example: \"32 bit\".
     * @param {Array.<String>} opts.adComputerNameContains Free-text filter by Active Directory computer name string (supports multiple values). Example: \"DC=sentinelone\".
     * @param {Number} opts.totalMemoryGte Memory size (MB, more than or equal)
     * @param {Boolean} opts.threatHidden Include only Agents with at least one hidden threat
     * @param {Date} opts.lastActiveDateGt Agents last active after this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.threatCreatedAtLte Agents with threats reported before or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Number} opts.cpuCountGte Number of CPUs (more than or equal)
     * @param {Array.<String>} opts.cloudInstanceIdContains Free-text filter by cloud instance id(supports multiple values)
     * @param {Array.<String>} opts.agentVersions Agent versions to include. Example: \"2.0.0.0,2.1.5.144\".
     * @param {Array.<String>} opts.adQueryContains Free-text filter by Active Directory string (supports multiple values). Example: \"DC=sentinelone\".
     * @param {Date} opts.createdAtGte Agents created after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<Boolean>} opts.locationEnabled The agents supports Location Awareness and it is enabled for the agent's group
     * @param {Array.<String>} opts.cloudProviderNin Exclude Agents from these cloud provider
     * @param {Boolean} opts.isPendingUninstall Include only Agents with pending uninstall requests
     * @param {Array.<String>} opts.k8sNodeLabelsContains Free-text filter by K8s node labels (supports multiple values)
     * @param {Date} opts.decommissionedAtLte Agents decommissioned before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.tagsData Filter agents by their assigned tags. Given in form of a JSON where each key represents a tag key, and each value represents a list of string values to filter by. To filter by unassigned tag values, use __nin suffix in the tag key. Example: \"{\"key1\": [\"value1_1\", \"value1_2\"], \"key2__nin\": [\"value2\"]}\".
     * @param {String} opts.agentVersionGt Agents versions greater than given version. Example: \"2.5.1.1320\".
     * @param {Date} opts.createdAtGt Agents created after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {module:model/String} opts.threatMitigationStatus Include only Agents that have threats with this mitigation status. Example: \"mitigated\".
     * @param {Date} opts.lastSuccessfulScanDateGt Agents last successful full disk scan after this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<Boolean>} opts.firewallEnabled The agents supports Firewall Control and it is enabled for the agent's group
     * @param {Date} opts.decommissionedAtLt Agents decommissioned before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.decommissionedAtBetween Date range for decommission time (format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<String>} opts.domainsNin Not included network domains. Example: \"mybusiness.net,workgroup\".
     * @param {Date} opts.createdAtLt Agents created before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.gcpServiceAccountContains Free-text filter by gcp service account (supports multiple values)
     * @param {Boolean} opts.threatResolved Include only Agents with at least one resolved threat
     * @param {Array.<String>} opts.cloudLocationContains Free-text filter by cloud location (supports multiple values)
     * @param {Date} opts.lastActiveDateLt Agents last active before this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<module:model/String>} opts.networkStatuses Included network statuses. Example: \"connected,connecting\".
     * @param {Array.<String>} opts.k8sTypeContains Free-text filter by K8s type(supports multiple values)
     * @param {Array.<String>} opts.networkInterfaceGatewayMacAddressContains Free-text filter by Gateway MAC address (supports multiple values). Example: \"aa:0f,:41:\".
     * @param {String} opts.cpuCountBetween Possible number of CPU cores (inclusive). Example: \"2-8\".
     * @param {Array.<String>} opts.operationalStatesNin Do not include these Agent operational states
     * @param {Number} opts.totalMemoryLt Memory size (MB, less than)
     * @param {Array.<String>} opts.k8sVersionContains Free-text filter by K8s version (supports multiple values)
     * @param {Array.<module:model/String>} opts.installerTypes Include only Agents installed with these package types. Example: \".msi\".
     * @param {Array.<String>} opts.adUserMemberContains Free-text filter by Active Directory user groups string (supports multiple values). Example: \"DC=sentinelone\".
     * @param {Boolean} opts.infected Include only Agents with at least one active threat
     * @param {Number} opts.coreCountLt CPU cores (less than)
     * @param {Array.<module:model/String>} opts.missingPermissions Included missing permissions. Example: \"user_action_needed_bluetooth_per,user_action_needed_fda_helper\".
     * @param {Array.<module:model/String>} opts.installerTypesNin Exclude Agents installed with these package types. Example: \".msi\".
     * @param {Array.<module:model/String>} opts.machineTypesNin Not included machine types. Example: \"laptop,desktop\".
     * @param {String} opts.filterId Include all Agents matching this saved filter. Example: \"225494730938493804\".
     * @param {Array.<Boolean>} opts.isDecommissioned Include active, decommissioned or both. Example: \"True,False\".
     * @param {String} opts.agentVersionLt Agents versions less than given version. Example: \"2.5.1.1320\".
     * @param {Array.<module:model/String>} opts.rangerStatusesNin Do not include these Ranger Statuses. Example: \"NotApplicable\".
     * @param {Array.<String>} opts.cloudInstanceSizeContains Free-text filter by cloud instance size(supports multiple values)
     * @param {Array.<String>} opts.rangerVersionsNin Ranger versions not to include. Example: \"2.0.0.0,2.1.5.144\".
     * @param {module:model/String} opts.rsoLevel Supported Remote Script Orchestration level. Example: \"none\".
     * @param {Number} opts.cpuCountLte Number of CPUs (less than or equal)
     * @param {String} opts.updatedAtBetween Date range for update time (format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<module:model/String>} opts.consoleMigrationStatuses Migration status in. Example: \"N/A\".
     * @param {Array.<String>} opts.azureResourceGroupContains Free-text filter by azure resource group(supports multiple values)
     * @param {Date} opts.threatCreatedAtGt Agents with threats reported after this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.uuidContains Free-text filter by Agent UUID (supports multiple values). Example: \"e92-01928,b055\".
     * @param {Array.<module:model/String>} opts.networkStatusesNin Included network statuses. Example: \"connected,connecting\".
     * @param {Number} opts.totalMemoryLte Memory size (MB, less than or equal)
     * @param {Number} opts.activeThreatsGt Include Agents with at least this amount of active threats. Example: \"5\".
     * @param {Date} opts.lastSuccessfulScanDateLt Agents last successful full disk scan before this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.adQuery An Active Directory query string. Example: \"CN=Managers,DC=sentinelone,DC=com\".
     * @param {Array.<String>} opts.uuids A list of included UUIDs. Example: \"ff819e70af13be381993075eb0ce5f2f6de05b11,ff819e70af13be381993075eb0ce5f2f6de05c22\".
     * @param {module:api/AgentsApi~webApiAgentsPassphrasesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AgentsSchemasAgentPassphraseSchemaMany200}
     */
    this.webApiAgentsPassphrasesGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'registeredAt__between': opts['registeredAtBetween'],
        'registeredAt__lte': opts['registeredAtLte'],
        'mitigationModeSuspicious': opts['mitigationModeSuspicious'],
        'hasLocalConfiguration': opts['hasLocalConfiguration'],
        'query': opts['query'],
        'coreCount__gt': opts['coreCountGt'],
        'decommissionedAt__gt': opts['decommissionedAtGt'],
        'registeredAt__gte': opts['registeredAtGte'],
        'totalMemory__gt': opts['totalMemoryGt'],
        'skip': opts['skip'],
        'updatedAt__gt': opts['updatedAtGt'],
        'hasContainerizedWorkload': opts['hasContainerizedWorkload'],
        'threatCreatedAt__gte': opts['threatCreatedAtGte'],
        'coreCount__lte': opts['coreCountLte'],
        'coreCount__gte': opts['coreCountGte'],
        'gatewayIp': opts['gatewayIp'],
        'updatedAt__lte': opts['updatedAtLte'],
        'migrationStatus': opts['migrationStatus'],
        'decommissionedAt__gte': opts['decommissionedAtGte'],
        'lastSuccessfulScanDate__between': opts['lastSuccessfulScanDateBetween'],
        'lastActiveDate__lte': opts['lastActiveDateLte'],
        'lastActiveDate__between': opts['lastActiveDateBetween'],
        'threatCreatedAt__between': opts['threatCreatedAtBetween'],
        'encryptedApplications': opts['encryptedApplications'],
        'agentVersion__gte': opts['agentVersionGte'],
        'lastSuccessfulScanDate__gte': opts['lastSuccessfulScanDateGte'],
        'csvFilterId': opts['csvFilterId'],
        'cursor': opts['cursor'],
        'isActive': opts['isActive'],
        'mitigationMode': opts['mitigationMode'],
        'agentVersion__lte': opts['agentVersionLte'],
        'updatedAt__gte': opts['updatedAtGte'],
        'agentVersion__between': opts['agentVersionBetween'],
        'activeThreats': opts['activeThreats'],
        'hasTags': opts['hasTags'],
        'cpuCount__lt': opts['cpuCountLt'],
        'registeredAt__lt': opts['registeredAtLt'],
        'remoteOpsForensicsSupported': opts['remoteOpsForensicsSupported'],
        'computerName__like': opts['computerNameLike'],
        'createdAt__between': opts['createdAtBetween'],
        'coreCount__between': opts['coreCountBetween'],
        'isUpToDate': opts['isUpToDate'],
        'threatCreatedAt__lt': opts['threatCreatedAtLt'],
        'rangerStatus': opts['rangerStatus'],
        'totalMemory__between': opts['totalMemoryBetween'],
        'lastSuccessfulScanDate__lte': opts['lastSuccessfulScanDateLte'],
        'cpuCount__gt': opts['cpuCountGt'],
        'updatedAt__lt': opts['updatedAtLt'],
        'countOnly': opts['countOnly'],
        'limit': opts['limit'],
        'computerName': opts['computerName'],
        'uuid': opts['uuid'],
        'lastActiveDate__gte': opts['lastActiveDateGte'],
        'skipCount': opts['skipCount'],
        'threatContentHash': opts['threatContentHash'],
        'createdAt__lte': opts['createdAtLte'],
        'scanStatus': opts['scanStatus'],
        'registeredAt__gt': opts['registeredAtGt'],
        'osArch': opts['osArch'],
        'totalMemory__gte': opts['totalMemoryGte'],
        'threatHidden': opts['threatHidden'],
        'lastActiveDate__gt': opts['lastActiveDateGt'],
        'threatCreatedAt__lte': opts['threatCreatedAtLte'],
        'cpuCount__gte': opts['cpuCountGte'],
        'createdAt__gte': opts['createdAtGte'],
        'isPendingUninstall': opts['isPendingUninstall'],
        'decommissionedAt__lte': opts['decommissionedAtLte'],
        'tagsData': opts['tagsData'],
        'agentVersion__gt': opts['agentVersionGt'],
        'createdAt__gt': opts['createdAtGt'],
        'threatMitigationStatus': opts['threatMitigationStatus'],
        'lastSuccessfulScanDate__gt': opts['lastSuccessfulScanDateGt'],
        'decommissionedAt__lt': opts['decommissionedAtLt'],
        'decommissionedAt__between': opts['decommissionedAtBetween'],
        'createdAt__lt': opts['createdAtLt'],
        'threatResolved': opts['threatResolved'],
        'lastActiveDate__lt': opts['lastActiveDateLt'],
        'cpuCount__between': opts['cpuCountBetween'],
        'totalMemory__lt': opts['totalMemoryLt'],
        'infected': opts['infected'],
        'coreCount__lt': opts['coreCountLt'],
        'filterId': opts['filterId'],
        'agentVersion__lt': opts['agentVersionLt'],
        'rsoLevel': opts['rsoLevel'],
        'cpuCount__lte': opts['cpuCountLte'],
        'updatedAt__between': opts['updatedAtBetween'],
        'threatCreatedAt__gt': opts['threatCreatedAtGt'],
        'totalMemory__lte': opts['totalMemoryLte'],
        'activeThreats__gt': opts['activeThreatsGt'],
        'lastSuccessfulScanDate__lt': opts['lastSuccessfulScanDateLt'],
        'adQuery': opts['adQuery'],
      };
      var collectionQueryParams = {
        'agentVersionsNin': {
          value: opts['agentVersionsNin'],
          collectionFormat: 'csv'
        },
        'adComputerQuery__contains': {
          value: opts['adComputerQueryContains'],
          collectionFormat: 'csv'
        },
        'adUserQuery__contains': {
          value: opts['adUserQueryContains'],
          collectionFormat: 'csv'
        },
        'cloudProvider': {
          value: opts['cloudProvider'],
          collectionFormat: 'csv'
        },
        'cloudImage__contains': {
          value: opts['cloudImageContains'],
          collectionFormat: 'csv'
        },
        'appsVulnerabilityStatusesNin': {
          value: opts['appsVulnerabilityStatusesNin'],
          collectionFormat: 'csv'
        },
        'scanStatusesNin': {
          value: opts['scanStatusesNin'],
          collectionFormat: 'csv'
        },
        'adComputerMember__contains': {
          value: opts['adComputerMemberContains'],
          collectionFormat: 'csv'
        },
        'rangerVersions': {
          value: opts['rangerVersions'],
          collectionFormat: 'csv'
        },
        'machineTypes': {
          value: opts['machineTypes'],
          collectionFormat: 'csv'
        },
        'locationIds': {
          value: opts['locationIds'],
          collectionFormat: 'csv'
        },
        'locationIdsNin': {
          value: opts['locationIdsNin'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'missingPermissionsNin': {
          value: opts['missingPermissionsNin'],
          collectionFormat: 'csv'
        },
        'threatRebootRequired': {
          value: opts['threatRebootRequired'],
          collectionFormat: 'csv'
        },
        'serialNumber__contains': {
          value: opts['serialNumberContains'],
          collectionFormat: 'csv'
        },
        'networkQuarantineEnabled': {
          value: opts['networkQuarantineEnabled'],
          collectionFormat: 'csv'
        },
        'cloudTags__contains': {
          value: opts['cloudTagsContains'],
          collectionFormat: 'csv'
        },
        'isUninstalled': {
          value: opts['isUninstalled'],
          collectionFormat: 'csv'
        },
        'networkInterfacePhysical__contains': {
          value: opts['networkInterfacePhysicalContains'],
          collectionFormat: 'csv'
        },
        'operationalStates': {
          value: opts['operationalStates'],
          collectionFormat: 'csv'
        },
        'adUserName__contains': {
          value: opts['adUserNameContains'],
          collectionFormat: 'csv'
        },
        'osTypesNin': {
          value: opts['osTypesNin'],
          collectionFormat: 'csv'
        },
        'awsSubnetIds__contains': {
          value: opts['awsSubnetIdsContains'],
          collectionFormat: 'csv'
        },
        'osVersion__contains': {
          value: opts['osVersionContains'],
          collectionFormat: 'csv'
        },
        'externalIp__contains': {
          value: opts['externalIpContains'],
          collectionFormat: 'csv'
        },
        'awsSecurityGroups__contains': {
          value: opts['awsSecurityGroupsContains'],
          collectionFormat: 'csv'
        },
        'k8sNodeName__contains': {
          value: opts['k8sNodeNameContains'],
          collectionFormat: 'csv'
        },
        'agentNamespace__contains': {
          value: opts['agentNamespaceContains'],
          collectionFormat: 'csv'
        },
        'networkInterfaceInet__contains': {
          value: opts['networkInterfaceInetContains'],
          collectionFormat: 'csv'
        },
        'computerName__contains': {
          value: opts['computerNameContains'],
          collectionFormat: 'csv'
        },
        'cloudNetwork__contains': {
          value: opts['cloudNetworkContains'],
          collectionFormat: 'csv'
        },
        'remoteProfilingStates': {
          value: opts['remoteProfilingStates'],
          collectionFormat: 'csv'
        },
        'filteredGroupIds': {
          value: opts['filteredGroupIds'],
          collectionFormat: 'csv'
        },
        'agentPodName__contains': {
          value: opts['agentPodNameContains'],
          collectionFormat: 'csv'
        },
        'userActionsNeededNin': {
          value: opts['userActionsNeededNin'],
          collectionFormat: 'csv'
        },
        'rangerStatuses': {
          value: opts['rangerStatuses'],
          collectionFormat: 'csv'
        },
        'externalId__contains': {
          value: opts['externalIdContains'],
          collectionFormat: 'csv'
        },
        'consoleMigrationStatusesNin': {
          value: opts['consoleMigrationStatusesNin'],
          collectionFormat: 'csv'
        },
        'cpuId__contains': {
          value: opts['cpuIdContains'],
          collectionFormat: 'csv'
        },
        'domains': {
          value: opts['domains'],
          collectionFormat: 'csv'
        },
        'awsRole__contains': {
          value: opts['awsRoleContains'],
          collectionFormat: 'csv'
        },
        'lastLoggedInUserName__contains': {
          value: opts['lastLoggedInUserNameContains'],
          collectionFormat: 'csv'
        },
        'cloudAccount__contains': {
          value: opts['cloudAccountContains'],
          collectionFormat: 'csv'
        },
        'clusterName__contains': {
          value: opts['clusterNameContains'],
          collectionFormat: 'csv'
        },
        'scanStatuses': {
          value: opts['scanStatuses'],
          collectionFormat: 'csv'
        },
        'ids': {
          value: opts['ids'],
          collectionFormat: 'csv'
        },
        'liveUpdateId__contains': {
          value: opts['liveUpdateIdContains'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'appsVulnerabilityStatuses': {
          value: opts['appsVulnerabilityStatuses'],
          collectionFormat: 'csv'
        },
        'remoteProfilingStatesNin': {
          value: opts['remoteProfilingStatesNin'],
          collectionFormat: 'csv'
        },
        'filteredSiteIds': {
          value: opts['filteredSiteIds'],
          collectionFormat: 'csv'
        },
        'userActionsNeeded': {
          value: opts['userActionsNeeded'],
          collectionFormat: 'csv'
        },
        'adComputerName__contains': {
          value: opts['adComputerNameContains'],
          collectionFormat: 'csv'
        },
        'cloudInstanceId__contains': {
          value: opts['cloudInstanceIdContains'],
          collectionFormat: 'csv'
        },
        'agentVersions': {
          value: opts['agentVersions'],
          collectionFormat: 'csv'
        },
        'adQuery__contains': {
          value: opts['adQueryContains'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'locationEnabled': {
          value: opts['locationEnabled'],
          collectionFormat: 'csv'
        },
        'cloudProviderNin': {
          value: opts['cloudProviderNin'],
          collectionFormat: 'csv'
        },
        'k8sNodeLabels__contains': {
          value: opts['k8sNodeLabelsContains'],
          collectionFormat: 'csv'
        },
        'firewallEnabled': {
          value: opts['firewallEnabled'],
          collectionFormat: 'csv'
        },
        'domainsNin': {
          value: opts['domainsNin'],
          collectionFormat: 'csv'
        },
        'gcpServiceAccount__contains': {
          value: opts['gcpServiceAccountContains'],
          collectionFormat: 'csv'
        },
        'cloudLocation__contains': {
          value: opts['cloudLocationContains'],
          collectionFormat: 'csv'
        },
        'networkStatuses': {
          value: opts['networkStatuses'],
          collectionFormat: 'csv'
        },
        'k8sType__contains': {
          value: opts['k8sTypeContains'],
          collectionFormat: 'csv'
        },
        'networkInterfaceGatewayMacAddress__contains': {
          value: opts['networkInterfaceGatewayMacAddressContains'],
          collectionFormat: 'csv'
        },
        'operationalStatesNin': {
          value: opts['operationalStatesNin'],
          collectionFormat: 'csv'
        },
        'k8sVersion__contains': {
          value: opts['k8sVersionContains'],
          collectionFormat: 'csv'
        },
        'installerTypes': {
          value: opts['installerTypes'],
          collectionFormat: 'csv'
        },
        'adUserMember__contains': {
          value: opts['adUserMemberContains'],
          collectionFormat: 'csv'
        },
        'missingPermissions': {
          value: opts['missingPermissions'],
          collectionFormat: 'csv'
        },
        'installerTypesNin': {
          value: opts['installerTypesNin'],
          collectionFormat: 'csv'
        },
        'machineTypesNin': {
          value: opts['machineTypesNin'],
          collectionFormat: 'csv'
        },
        'isDecommissioned': {
          value: opts['isDecommissioned'],
          collectionFormat: 'csv'
        },
        'rangerStatusesNin': {
          value: opts['rangerStatusesNin'],
          collectionFormat: 'csv'
        },
        'cloudInstanceSize__contains': {
          value: opts['cloudInstanceSizeContains'],
          collectionFormat: 'csv'
        },
        'rangerVersionsNin': {
          value: opts['rangerVersionsNin'],
          collectionFormat: 'csv'
        },
        'consoleMigrationStatuses': {
          value: opts['consoleMigrationStatuses'],
          collectionFormat: 'csv'
        },
        'azureResourceGroup__contains': {
          value: opts['azureResourceGroupContains'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'uuid__contains': {
          value: opts['uuidContains'],
          collectionFormat: 'csv'
        },
        'networkStatusesNin': {
          value: opts['networkStatusesNin'],
          collectionFormat: 'csv'
        },
        'uuids': {
          value: opts['uuids'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = AgentsSchemasAgentPassphraseSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/passphrases', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsProcessesGet operation.
     * @callback module:api/AgentsApi~webApiAgentsProcessesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AgentsSchemasAgentProcessesSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Processes
     * [OBSOLETE] Returns empty array. To get processes of an Agent, see Applications.
     * @param {Array.<String>} ids Agent ID list. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/AgentsApi~webApiAgentsProcessesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AgentsSchemasAgentProcessesSchemaMany200}
     */
    this.webApiAgentsProcessesGet = function(ids, callback) {
      var postBody = null;

      // verify the required parameter 'ids' is set
      if (ids === undefined || ids === null) {
        throw new Error("Missing the required parameter 'ids' when calling webApiAgentsProcessesGet");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
        'ids': {
          value: ids,
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = AgentsSchemasAgentProcessesSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/processes', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsTagsGet operation.
     * @callback module:api/AgentsApi~webApiAgentsTagsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TagManagerSchemasAgentTagSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the endpoint tags that match the filters.
     * Get endpoint Tags.
     * @param {Object} opts Optional parameters
     * @param {String} opts.cursor Cursor position returned by the last request. Use to iterate over more than 1000 items. Example: \"YWdlbnRfaWQ6NTgwMjkzODE=\". (default to null)
     * @param {Boolean} opts.includeChildren Return tags from children scope levels (default to false)
     * @param {String} opts.query Free text search on fields key, value, description
     * @param {Array.<String>} opts.ids List of tag IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Boolean} opts.countOnly If true, only total number of items will be returned, without any of the actual objects. (default to false)
     * @param {Array.<String>} opts.valueContains Free-text filter by tag value. Example: \"server\".
     * @param {Number} opts.limit Limit number of returned items (1-1000). Example: \"10\". (default to 10)
     * @param {Number} opts.skip Skip first number of items (0-1000). To iterate over more than 1000 items,  use \"cursor\". Example: \"150\".
     * @param {Boolean} opts.skipCount If true, total number of items will not be calculated, which speeds up execution time. (default to null)
     * @param {module:model/String} opts.sortOrder Sort direction. Example: \"asc\". (default to null)
     * @param {String} opts.key Tag key
     * @param {String} opts.value Tag value
     * @param {Boolean} opts.includeParents Return tags from parent scope levels (default to false)
     * @param {Array.<String>} opts.keyContains Free-text filter by tag key. Example: \"server\".
     * @param {module:model/String} opts.sortBy The column to sort the results by. Example: \"id\". (default to null)
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {String} opts.description Tag description
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/AgentsApi~webApiAgentsTagsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TagManagerSchemasAgentTagSchemaMany200}
     */
    this.webApiAgentsTagsGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'cursor': opts['cursor'],
        'includeChildren': opts['includeChildren'],
        'query': opts['query'],
        'countOnly': opts['countOnly'],
        'limit': opts['limit'],
        'skip': opts['skip'],
        'skipCount': opts['skipCount'],
        'sortOrder': opts['sortOrder'],
        'key': opts['key'],
        'value': opts['value'],
        'includeParents': opts['includeParents'],
        'sortBy': opts['sortBy'],
        'description': opts['description'],
      };
      var collectionQueryParams = {
        'ids': {
          value: opts['ids'],
          collectionFormat: 'csv'
        },
        'value__contains': {
          value: opts['valueContains'],
          collectionFormat: 'csv'
        },
        'key__contains': {
          value: opts['keyContains'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = TagManagerSchemasAgentTagSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/tags', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsagentIdLocalUpgradeAuthorizationGet operation.
     * @callback module:api/AgentsApi~webApiAgentsagentIdLocalUpgradeAuthorizationGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AgentsSchemasGetAgentApprovalResponse200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get local upgrade agent authorization
     * Get the time when authorization of local upgrades expires
     * @param {String} agentId Agent ID. Example: \"225494730938493804\".
     * @param {module:api/AgentsApi~webApiAgentsagentIdLocalUpgradeAuthorizationGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AgentsSchemasGetAgentApprovalResponse200}
     */
    this.webApiAgentsagentIdLocalUpgradeAuthorizationGet = function(agentId, callback) {
      var postBody = null;

      // verify the required parameter 'agentId' is set
      if (agentId === undefined || agentId === null) {
        throw new Error("Missing the required parameter 'agentId' when calling webApiAgentsagentIdLocalUpgradeAuthorizationGet");
      }


      var pathParams = {
        'agent_id': agentId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = AgentsSchemasGetAgentApprovalResponse200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/{agent_id}/local-upgrade-authorization', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiAgentsagentIdUploadsactivityIdGet operation.
     * @callback module:api/AgentsApi~webApiAgentsagentIdUploadsactivityIdGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Export Agent Logs
     * Get Agent logs from Agents that match the filter. You can filter by Agent ID (run \"agents\" to get the ID) or by Activity ID (run \"activities/types\" to get the Activity ID). Send the logs to SentinelOne Support for assistance.
     * @param {String} agentId Agent ID. Example: \"225494730938493804\".
     * @param {String} activityId ID of activity that logs files uploaded by agent. Example: \"225494730938493804\".
     * @param {module:api/AgentsApi~webApiAgentsagentIdUploadsactivityIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiAgentsagentIdUploadsactivityIdGet = function(agentId, activityId, callback) {
      var postBody = null;

      // verify the required parameter 'agentId' is set
      if (agentId === undefined || agentId === null) {
        throw new Error("Missing the required parameter 'agentId' when calling webApiAgentsagentIdUploadsactivityIdGet");
      }

      // verify the required parameter 'activityId' is set
      if (activityId === undefined || activityId === null) {
        throw new Error("Missing the required parameter 'activityId' when calling webApiAgentsagentIdUploadsactivityIdGet");
      }


      var pathParams = {
        'agent_id': agentId,
        'activity_id': activityId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/{agent_id}/uploads/{activity_id}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiExportAgentsGet operation.
     * @callback module:api/AgentsApi~webApiExportAgentsGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Export Agents
     * Export Agent data to a CSV, for Agents that match the filter. This command exports up to 50000 items (each datum is an item).
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.agentVersionsNin Agent versions not to include. Example: \"2.0.0.0,2.1.5.144\".
     * @param {String} opts.registeredAtBetween Date range for first registration time (format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978764288-1514978999999\".
     * @param {Date} opts.registeredAtLte Agents registered before or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.adComputerQueryContains Free-text filter by Active Directory computer name or its groups (supports multiple values). Example: \"DC=sentinelone,Windows\".
     * @param {module:model/String} opts.mitigationModeSuspicious Mitigation mode policy for suspicious activity. Example: \"detect\".
     * @param {Boolean} opts.hasLocalConfiguration Agent has a local configuration set
     * @param {Array.<String>} opts.adUserQueryContains Free-text filter by Active Directory computer name or its groups (supports multiple values). Example: \"DC=sentinelone,John\".
     * @param {String} opts.query A free-text search term, will match applicable attributes (sub-string match). Note: Device's physical addresses will be matched if they start with the search term only (no match if they contain the term). Example: \"Linux\".
     * @param {Array.<String>} opts.cloudProvider Agents from which cloud provider
     * @param {Number} opts.coreCountGt CPU cores (more than)
     * @param {Date} opts.decommissionedAtGt Agents decommissioned after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.registeredAtGte Agents registered after or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Number} opts.totalMemoryGt Memory size (MB, more than)
     * @param {Date} opts.updatedAtGt Agents updated after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Boolean} opts.hasContainerizedWorkload Include only Agents protecting containerized workloads
     * @param {Array.<String>} opts.cloudImageContains Free-text filter by cloud image (supports multiple values)
     * @param {Date} opts.threatCreatedAtGte Agents with threats reported after or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<module:model/String>} opts.appsVulnerabilityStatusesNin Apps vulnerability status nin. Example: \"patch_required\".
     * @param {Array.<module:model/String>} opts.scanStatusesNin Not included scan statuses. Example: \"started,aborted\".
     * @param {Array.<String>} opts.adComputerMemberContains Free-text filter by Active Directory computer groups string (supports multiple values). Example: \"DC=sentinelone\".
     * @param {Number} opts.coreCountLte CPU cores (less than or equal)
     * @param {Array.<String>} opts.rangerVersions Ranger versions to include. Example: \"2.0.0.0,2.1.5.144\".
     * @param {Array.<module:model/String>} opts.machineTypes Included machine types. Example: \"laptop,desktop\".
     * @param {Number} opts.coreCountGte CPU cores (more than or equal)
     * @param {Array.<String>} opts.locationIds Include only Agents reporting these locations. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.locationIdsNin Do not include only Agents reporting these locations. Example: \"225494730938493804,225494730938493915\".
     * @param {String} opts.gatewayIp Gateway ip. Example: \"192.168.0.1\".
     * @param {Date} opts.updatedAtLte Agents updated before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<module:model/String>} opts.missingPermissionsNin Excluded missing permissions. Example: \"user_action_needed_bluetooth_per,user_action_needed_fda_helper\".
     * @param {module:model/String} opts.migrationStatus Migration status. Example: \"N/A\".
     * @param {Array.<Boolean>} opts.threatRebootRequired Has at least one threat with at least one mitigation action pending reboot to succeed
     * @param {Array.<String>} opts.serialNumberContains Free-text filter by Serial Number (supports multiple values)
     * @param {Date} opts.decommissionedAtGte Agents decommissioned after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.lastSuccessfulScanDateBetween Date range for last successful full disk scan(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978764288-1514978999999\".
     * @param {Date} opts.lastActiveDateLte Agents last active before or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.lastActiveDateBetween Date range for last active date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978764288-1514978999999\".
     * @param {Array.<Boolean>} opts.networkQuarantineEnabled The agents supports Network Quarantine Control and its enabled for the agent's group
     * @param {Array.<String>} opts.cloudTagsContains Free-text filter by cloud tags (supports multiple values)
     * @param {String} opts.threatCreatedAtBetween Agents with threats reported in a date range (format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978764288-1514978999999\".
     * @param {Boolean} opts.encryptedApplications Disk encryption status
     * @param {Array.<Boolean>} opts.isUninstalled Include installed, uninstalled or both. Example: \"True,False\".
     * @param {Array.<String>} opts.networkInterfacePhysicalContains Free-text filter by MAC address (supports multiple values). Example: \"aa:0f,:41:\".
     * @param {String} opts.agentVersionGte Agents versions greater than or equal to given version. Example: \"2.5.1.1320\".
     * @param {Date} opts.lastSuccessfulScanDateGte Agents last successful full disk scan after or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.operationalStates Agent operational state
     * @param {Array.<String>} opts.adUserNameContains Free-text filter by Active Directory username string (supports multiple values). Example: \"DC=sentinelone\".
     * @param {Array.<module:model/String>} opts.osTypesNin Not included OS types. Example: \"windows\".
     * @param {String} opts.csvFilterId The ID of the CSV file to filter by. Example: \"225494730938493804\".
     * @param {Boolean} opts.isActive Include only active Agents
     * @param {module:model/String} opts.mitigationMode Agent mitigation mode policy. Example: \"detect\".
     * @param {Array.<String>} opts.awsSubnetIdsContains Free-text filter by aws subnet ids (supports multiple values)
     * @param {String} opts.agentVersionLte Agents versions less than or equal to given version. Example: \"2.5.1.1320\".
     * @param {Date} opts.updatedAtGte Agents updated after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.osVersionContains Free-text filter by OS full name and version (supports multiple values). Example: \"Service Pack 1\".
     * @param {Array.<String>} opts.externalIpContains Free-text filter by visible IP (supports multiple values). Example: \"205,127.0\".
     * @param {Array.<String>} opts.awsSecurityGroupsContains Free-text filter by aws securityGroups(supports multiple values)
     * @param {Array.<String>} opts.k8sNodeNameContains Free-text filter by K8s node name (supports multiple values)
     * @param {String} opts.agentVersionBetween Version range for agent version (format: <from_version>-<to_version>, inclusive). Example: \"2.0.0.0-2.1.5.144\".
     * @param {Number} opts.activeThreats Include Agents with this amount of active threats. Example: \"3\".
     * @param {Boolean} opts.hasTags Include only Agents that have any tags assigned if True, or none if False
     * @param {Array.<String>} opts.agentNamespaceContains Free-text filter by agent namespace (supports multiple values)
     * @param {Number} opts.cpuCountLt Number of CPUs (less than)
     * @param {Date} opts.registeredAtLt Agents registered before this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.networkInterfaceInetContains Free-text filter by local IP (supports multiple values). Example: \"192,10.0.0\".
     * @param {Array.<String>} opts.computerNameContains Free-text filter by computer name (supports multiple values). Example: \"john-office,WIN\".
     * @param {Array.<String>} opts.cloudNetworkContains Free-text filter by cloud network (supports multiple values)
     * @param {Boolean} opts.remoteOpsForensicsSupported Include only agents that has Remote Ops Forensicsfeature supported
     * @param {Array.<String>} opts.remoteProfilingStates Agent remote profiling state
     * @param {Array.<String>} opts.filteredGroupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.agentPodNameContains Free-text filter by agent pod name (supports multiple values)
     * @param {Array.<module:model/String>} opts.userActionsNeededNin Excluded pending user actions. Example: \"reboot_needed,upgrade_needed\".
     * @param {Array.<module:model/String>} opts.rangerStatuses Status of Ranger. Example: \"NotApplicable\".
     * @param {String} opts.computerNameLike Match computer name partially (substring). Example: \"Lab1\".
     * @param {Array.<String>} opts.externalIdContains Free-text filter by external ID (Customer ID). Example: \"Tag#1 - monitoring,Performance machine\".
     * @param {String} opts.createdAtBetween Date range for creation time (format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<module:model/String>} opts.consoleMigrationStatusesNin Migration status nin. Example: \"N/A\".
     * @param {Array.<String>} opts.cpuIdContains Free-text filter by CPU name (supports multiple values). Example: \"Intel,AMD\".
     * @param {String} opts.coreCountBetween Possible number of CPU cores (inclusive). Example: \"2-8\".
     * @param {Boolean} opts.isUpToDate Include only Agents with updated software
     * @param {Date} opts.threatCreatedAtLt Agents with threats reported before this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {module:model/String} opts.rangerStatus [DEPRECATED] Use rangerStatuses. Example: \"NotApplicable\".
     * @param {String} opts.totalMemoryBetween Total memory range (GB, inclusive). Example: \"4-8\".
     * @param {Date} opts.lastSuccessfulScanDateLte Agents last successful full disk scan before or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.domains Included network domains. Example: \"mybusiness.net,workgroup\".
     * @param {Array.<String>} opts.awsRoleContains Free-text filter by aws role(supports multiple values)
     * @param {Array.<String>} opts.lastLoggedInUserNameContains Free-text filter by username (supports multiple values). Example: \"admin,johnd1\".
     * @param {Number} opts.cpuCountGt Number of CPUs (more than)
     * @param {Array.<String>} opts.cloudAccountContains Free-text filter by cloud account (supports multiple values)
     * @param {Array.<String>} opts.clusterNameContains Free-text filter by cluster name (supports multiple values)
     * @param {Array.<module:model/String>} opts.scanStatuses Included scan statuses. Example: \"started,aborted\".
     * @param {Date} opts.updatedAtLt Agents updated before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.ids A list of Agent IDs. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.liveUpdateIdContains Free-text filter by live update ID (supports multiple values)
     * @param {String} opts.computerName Computer name. Example: \"My Office Desktop\".
     * @param {String} opts.uuid Agent's universally unique identifier. Example: \"ff819e70af13be381993075eb0ce5f2f6de05be2\".
     * @param {Array.<module:model/String>} opts.osTypes Included OS types. Example: \"windows\".
     * @param {Array.<module:model/String>} opts.appsVulnerabilityStatuses Apps vulnerability status in. Example: \"patch_required\".
     * @param {Date} opts.lastActiveDateGte Agents last active after or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.threatContentHash Include only Agents that have at least one threat with this content hash. Example: \"cf23df2207d99a74fbe169e3eba035e633b65d94\".
     * @param {Array.<String>} opts.remoteProfilingStatesNin Do not include these Agent remote profiling states
     * @param {Date} opts.createdAtLte Agents created before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {module:model/String} opts.scanStatus Scan status. Example: \"none\".
     * @param {Array.<String>} opts.filteredSiteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<module:model/String>} opts.userActionsNeeded Included pending user actions. Example: \"reboot_needed,upgrade_needed\".
     * @param {Date} opts.registeredAtGt Agents registered after this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {module:model/String} opts.osArch OS architecture. Example: \"32 bit\".
     * @param {Array.<String>} opts.adComputerNameContains Free-text filter by Active Directory computer name string (supports multiple values). Example: \"DC=sentinelone\".
     * @param {Number} opts.totalMemoryGte Memory size (MB, more than or equal)
     * @param {Boolean} opts.threatHidden Include only Agents with at least one hidden threat
     * @param {Date} opts.lastActiveDateGt Agents last active after this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.threatCreatedAtLte Agents with threats reported before or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Number} opts.cpuCountGte Number of CPUs (more than or equal)
     * @param {Array.<String>} opts.cloudInstanceIdContains Free-text filter by cloud instance id(supports multiple values)
     * @param {Array.<String>} opts.agentVersions Agent versions to include. Example: \"2.0.0.0,2.1.5.144\".
     * @param {Array.<String>} opts.adQueryContains Free-text filter by Active Directory string (supports multiple values). Example: \"DC=sentinelone\".
     * @param {Date} opts.createdAtGte Agents created after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<Boolean>} opts.locationEnabled The agents supports Location Awareness and it is enabled for the agent's group
     * @param {Array.<String>} opts.cloudProviderNin Exclude Agents from these cloud provider
     * @param {Boolean} opts.isPendingUninstall Include only Agents with pending uninstall requests
     * @param {Array.<String>} opts.k8sNodeLabelsContains Free-text filter by K8s node labels (supports multiple values)
     * @param {Date} opts.decommissionedAtLte Agents decommissioned before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.tagsData Filter agents by their assigned tags. Given in form of a JSON where each key represents a tag key, and each value represents a list of string values to filter by. To filter by unassigned tag values, use __nin suffix in the tag key. Example: \"{\"key1\": [\"value1_1\", \"value1_2\"], \"key2__nin\": [\"value2\"]}\".
     * @param {String} opts.agentVersionGt Agents versions greater than given version. Example: \"2.5.1.1320\".
     * @param {Date} opts.createdAtGt Agents created after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {module:model/String} opts.threatMitigationStatus Include only Agents that have threats with this mitigation status. Example: \"mitigated\".
     * @param {Date} opts.lastSuccessfulScanDateGt Agents last successful full disk scan after this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<Boolean>} opts.firewallEnabled The agents supports Firewall Control and it is enabled for the agent's group
     * @param {Date} opts.decommissionedAtLt Agents decommissioned before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.decommissionedAtBetween Date range for decommission time (format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<String>} opts.domainsNin Not included network domains. Example: \"mybusiness.net,workgroup\".
     * @param {Date} opts.createdAtLt Agents created before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.gcpServiceAccountContains Free-text filter by gcp service account (supports multiple values)
     * @param {Boolean} opts.threatResolved Include only Agents with at least one resolved threat
     * @param {Array.<String>} opts.cloudLocationContains Free-text filter by cloud location (supports multiple values)
     * @param {Date} opts.lastActiveDateLt Agents last active before this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<module:model/String>} opts.networkStatuses Included network statuses. Example: \"connected,connecting\".
     * @param {Array.<String>} opts.k8sTypeContains Free-text filter by K8s type(supports multiple values)
     * @param {Array.<String>} opts.networkInterfaceGatewayMacAddressContains Free-text filter by Gateway MAC address (supports multiple values). Example: \"aa:0f,:41:\".
     * @param {String} opts.cpuCountBetween Possible number of CPU cores (inclusive). Example: \"2-8\".
     * @param {Array.<String>} opts.operationalStatesNin Do not include these Agent operational states
     * @param {Number} opts.totalMemoryLt Memory size (MB, less than)
     * @param {Array.<String>} opts.k8sVersionContains Free-text filter by K8s version (supports multiple values)
     * @param {Array.<module:model/String>} opts.installerTypes Include only Agents installed with these package types. Example: \".msi\".
     * @param {Array.<String>} opts.adUserMemberContains Free-text filter by Active Directory user groups string (supports multiple values). Example: \"DC=sentinelone\".
     * @param {Boolean} opts.infected Include only Agents with at least one active threat
     * @param {Number} opts.coreCountLt CPU cores (less than)
     * @param {Array.<module:model/String>} opts.missingPermissions Included missing permissions. Example: \"user_action_needed_bluetooth_per,user_action_needed_fda_helper\".
     * @param {Array.<module:model/String>} opts.installerTypesNin Exclude Agents installed with these package types. Example: \".msi\".
     * @param {Array.<module:model/String>} opts.machineTypesNin Not included machine types. Example: \"laptop,desktop\".
     * @param {String} opts.filterId Include all Agents matching this saved filter. Example: \"225494730938493804\".
     * @param {Array.<Boolean>} opts.isDecommissioned Include active, decommissioned or both. Example: \"True,False\".
     * @param {String} opts.agentVersionLt Agents versions less than given version. Example: \"2.5.1.1320\".
     * @param {Array.<module:model/String>} opts.rangerStatusesNin Do not include these Ranger Statuses. Example: \"NotApplicable\".
     * @param {Array.<String>} opts.cloudInstanceSizeContains Free-text filter by cloud instance size(supports multiple values)
     * @param {Array.<String>} opts.rangerVersionsNin Ranger versions not to include. Example: \"2.0.0.0,2.1.5.144\".
     * @param {module:model/String} opts.rsoLevel Supported Remote Script Orchestration level. Example: \"none\".
     * @param {Number} opts.cpuCountLte Number of CPUs (less than or equal)
     * @param {String} opts.updatedAtBetween Date range for update time (format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<module:model/String>} opts.consoleMigrationStatuses Migration status in. Example: \"N/A\".
     * @param {Array.<String>} opts.azureResourceGroupContains Free-text filter by azure resource group(supports multiple values)
     * @param {Date} opts.threatCreatedAtGt Agents with threats reported after this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.uuidContains Free-text filter by Agent UUID (supports multiple values). Example: \"e92-01928,b055\".
     * @param {Array.<module:model/String>} opts.networkStatusesNin Included network statuses. Example: \"connected,connecting\".
     * @param {Number} opts.totalMemoryLte Memory size (MB, less than or equal)
     * @param {Number} opts.activeThreatsGt Include Agents with at least this amount of active threats. Example: \"5\".
     * @param {Date} opts.lastSuccessfulScanDateLt Agents last successful full disk scan before this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.adQuery An Active Directory query string. Example: \"CN=Managers,DC=sentinelone,DC=com\".
     * @param {Array.<String>} opts.uuids A list of included UUIDs. Example: \"ff819e70af13be381993075eb0ce5f2f6de05b11,ff819e70af13be381993075eb0ce5f2f6de05c22\".
     * @param {module:api/AgentsApi~webApiExportAgentsGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiExportAgentsGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'registeredAt__between': opts['registeredAtBetween'],
        'registeredAt__lte': opts['registeredAtLte'],
        'mitigationModeSuspicious': opts['mitigationModeSuspicious'],
        'hasLocalConfiguration': opts['hasLocalConfiguration'],
        'query': opts['query'],
        'coreCount__gt': opts['coreCountGt'],
        'decommissionedAt__gt': opts['decommissionedAtGt'],
        'registeredAt__gte': opts['registeredAtGte'],
        'totalMemory__gt': opts['totalMemoryGt'],
        'updatedAt__gt': opts['updatedAtGt'],
        'hasContainerizedWorkload': opts['hasContainerizedWorkload'],
        'threatCreatedAt__gte': opts['threatCreatedAtGte'],
        'coreCount__lte': opts['coreCountLte'],
        'coreCount__gte': opts['coreCountGte'],
        'gatewayIp': opts['gatewayIp'],
        'updatedAt__lte': opts['updatedAtLte'],
        'migrationStatus': opts['migrationStatus'],
        'decommissionedAt__gte': opts['decommissionedAtGte'],
        'lastSuccessfulScanDate__between': opts['lastSuccessfulScanDateBetween'],
        'lastActiveDate__lte': opts['lastActiveDateLte'],
        'lastActiveDate__between': opts['lastActiveDateBetween'],
        'threatCreatedAt__between': opts['threatCreatedAtBetween'],
        'encryptedApplications': opts['encryptedApplications'],
        'agentVersion__gte': opts['agentVersionGte'],
        'lastSuccessfulScanDate__gte': opts['lastSuccessfulScanDateGte'],
        'csvFilterId': opts['csvFilterId'],
        'isActive': opts['isActive'],
        'mitigationMode': opts['mitigationMode'],
        'agentVersion__lte': opts['agentVersionLte'],
        'updatedAt__gte': opts['updatedAtGte'],
        'agentVersion__between': opts['agentVersionBetween'],
        'activeThreats': opts['activeThreats'],
        'hasTags': opts['hasTags'],
        'cpuCount__lt': opts['cpuCountLt'],
        'registeredAt__lt': opts['registeredAtLt'],
        'remoteOpsForensicsSupported': opts['remoteOpsForensicsSupported'],
        'computerName__like': opts['computerNameLike'],
        'createdAt__between': opts['createdAtBetween'],
        'coreCount__between': opts['coreCountBetween'],
        'isUpToDate': opts['isUpToDate'],
        'threatCreatedAt__lt': opts['threatCreatedAtLt'],
        'rangerStatus': opts['rangerStatus'],
        'totalMemory__between': opts['totalMemoryBetween'],
        'lastSuccessfulScanDate__lte': opts['lastSuccessfulScanDateLte'],
        'cpuCount__gt': opts['cpuCountGt'],
        'updatedAt__lt': opts['updatedAtLt'],
        'computerName': opts['computerName'],
        'uuid': opts['uuid'],
        'lastActiveDate__gte': opts['lastActiveDateGte'],
        'threatContentHash': opts['threatContentHash'],
        'createdAt__lte': opts['createdAtLte'],
        'scanStatus': opts['scanStatus'],
        'registeredAt__gt': opts['registeredAtGt'],
        'osArch': opts['osArch'],
        'totalMemory__gte': opts['totalMemoryGte'],
        'threatHidden': opts['threatHidden'],
        'lastActiveDate__gt': opts['lastActiveDateGt'],
        'threatCreatedAt__lte': opts['threatCreatedAtLte'],
        'cpuCount__gte': opts['cpuCountGte'],
        'createdAt__gte': opts['createdAtGte'],
        'isPendingUninstall': opts['isPendingUninstall'],
        'decommissionedAt__lte': opts['decommissionedAtLte'],
        'tagsData': opts['tagsData'],
        'agentVersion__gt': opts['agentVersionGt'],
        'createdAt__gt': opts['createdAtGt'],
        'threatMitigationStatus': opts['threatMitigationStatus'],
        'lastSuccessfulScanDate__gt': opts['lastSuccessfulScanDateGt'],
        'decommissionedAt__lt': opts['decommissionedAtLt'],
        'decommissionedAt__between': opts['decommissionedAtBetween'],
        'createdAt__lt': opts['createdAtLt'],
        'threatResolved': opts['threatResolved'],
        'lastActiveDate__lt': opts['lastActiveDateLt'],
        'cpuCount__between': opts['cpuCountBetween'],
        'totalMemory__lt': opts['totalMemoryLt'],
        'infected': opts['infected'],
        'coreCount__lt': opts['coreCountLt'],
        'filterId': opts['filterId'],
        'agentVersion__lt': opts['agentVersionLt'],
        'rsoLevel': opts['rsoLevel'],
        'cpuCount__lte': opts['cpuCountLte'],
        'updatedAt__between': opts['updatedAtBetween'],
        'threatCreatedAt__gt': opts['threatCreatedAtGt'],
        'totalMemory__lte': opts['totalMemoryLte'],
        'activeThreats__gt': opts['activeThreatsGt'],
        'lastSuccessfulScanDate__lt': opts['lastSuccessfulScanDateLt'],
        'adQuery': opts['adQuery'],
      };
      var collectionQueryParams = {
        'agentVersionsNin': {
          value: opts['agentVersionsNin'],
          collectionFormat: 'csv'
        },
        'adComputerQuery__contains': {
          value: opts['adComputerQueryContains'],
          collectionFormat: 'csv'
        },
        'adUserQuery__contains': {
          value: opts['adUserQueryContains'],
          collectionFormat: 'csv'
        },
        'cloudProvider': {
          value: opts['cloudProvider'],
          collectionFormat: 'csv'
        },
        'cloudImage__contains': {
          value: opts['cloudImageContains'],
          collectionFormat: 'csv'
        },
        'appsVulnerabilityStatusesNin': {
          value: opts['appsVulnerabilityStatusesNin'],
          collectionFormat: 'csv'
        },
        'scanStatusesNin': {
          value: opts['scanStatusesNin'],
          collectionFormat: 'csv'
        },
        'adComputerMember__contains': {
          value: opts['adComputerMemberContains'],
          collectionFormat: 'csv'
        },
        'rangerVersions': {
          value: opts['rangerVersions'],
          collectionFormat: 'csv'
        },
        'machineTypes': {
          value: opts['machineTypes'],
          collectionFormat: 'csv'
        },
        'locationIds': {
          value: opts['locationIds'],
          collectionFormat: 'csv'
        },
        'locationIdsNin': {
          value: opts['locationIdsNin'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'missingPermissionsNin': {
          value: opts['missingPermissionsNin'],
          collectionFormat: 'csv'
        },
        'threatRebootRequired': {
          value: opts['threatRebootRequired'],
          collectionFormat: 'csv'
        },
        'serialNumber__contains': {
          value: opts['serialNumberContains'],
          collectionFormat: 'csv'
        },
        'networkQuarantineEnabled': {
          value: opts['networkQuarantineEnabled'],
          collectionFormat: 'csv'
        },
        'cloudTags__contains': {
          value: opts['cloudTagsContains'],
          collectionFormat: 'csv'
        },
        'isUninstalled': {
          value: opts['isUninstalled'],
          collectionFormat: 'csv'
        },
        'networkInterfacePhysical__contains': {
          value: opts['networkInterfacePhysicalContains'],
          collectionFormat: 'csv'
        },
        'operationalStates': {
          value: opts['operationalStates'],
          collectionFormat: 'csv'
        },
        'adUserName__contains': {
          value: opts['adUserNameContains'],
          collectionFormat: 'csv'
        },
        'osTypesNin': {
          value: opts['osTypesNin'],
          collectionFormat: 'csv'
        },
        'awsSubnetIds__contains': {
          value: opts['awsSubnetIdsContains'],
          collectionFormat: 'csv'
        },
        'osVersion__contains': {
          value: opts['osVersionContains'],
          collectionFormat: 'csv'
        },
        'externalIp__contains': {
          value: opts['externalIpContains'],
          collectionFormat: 'csv'
        },
        'awsSecurityGroups__contains': {
          value: opts['awsSecurityGroupsContains'],
          collectionFormat: 'csv'
        },
        'k8sNodeName__contains': {
          value: opts['k8sNodeNameContains'],
          collectionFormat: 'csv'
        },
        'agentNamespace__contains': {
          value: opts['agentNamespaceContains'],
          collectionFormat: 'csv'
        },
        'networkInterfaceInet__contains': {
          value: opts['networkInterfaceInetContains'],
          collectionFormat: 'csv'
        },
        'computerName__contains': {
          value: opts['computerNameContains'],
          collectionFormat: 'csv'
        },
        'cloudNetwork__contains': {
          value: opts['cloudNetworkContains'],
          collectionFormat: 'csv'
        },
        'remoteProfilingStates': {
          value: opts['remoteProfilingStates'],
          collectionFormat: 'csv'
        },
        'filteredGroupIds': {
          value: opts['filteredGroupIds'],
          collectionFormat: 'csv'
        },
        'agentPodName__contains': {
          value: opts['agentPodNameContains'],
          collectionFormat: 'csv'
        },
        'userActionsNeededNin': {
          value: opts['userActionsNeededNin'],
          collectionFormat: 'csv'
        },
        'rangerStatuses': {
          value: opts['rangerStatuses'],
          collectionFormat: 'csv'
        },
        'externalId__contains': {
          value: opts['externalIdContains'],
          collectionFormat: 'csv'
        },
        'consoleMigrationStatusesNin': {
          value: opts['consoleMigrationStatusesNin'],
          collectionFormat: 'csv'
        },
        'cpuId__contains': {
          value: opts['cpuIdContains'],
          collectionFormat: 'csv'
        },
        'domains': {
          value: opts['domains'],
          collectionFormat: 'csv'
        },
        'awsRole__contains': {
          value: opts['awsRoleContains'],
          collectionFormat: 'csv'
        },
        'lastLoggedInUserName__contains': {
          value: opts['lastLoggedInUserNameContains'],
          collectionFormat: 'csv'
        },
        'cloudAccount__contains': {
          value: opts['cloudAccountContains'],
          collectionFormat: 'csv'
        },
        'clusterName__contains': {
          value: opts['clusterNameContains'],
          collectionFormat: 'csv'
        },
        'scanStatuses': {
          value: opts['scanStatuses'],
          collectionFormat: 'csv'
        },
        'ids': {
          value: opts['ids'],
          collectionFormat: 'csv'
        },
        'liveUpdateId__contains': {
          value: opts['liveUpdateIdContains'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'appsVulnerabilityStatuses': {
          value: opts['appsVulnerabilityStatuses'],
          collectionFormat: 'csv'
        },
        'remoteProfilingStatesNin': {
          value: opts['remoteProfilingStatesNin'],
          collectionFormat: 'csv'
        },
        'filteredSiteIds': {
          value: opts['filteredSiteIds'],
          collectionFormat: 'csv'
        },
        'userActionsNeeded': {
          value: opts['userActionsNeeded'],
          collectionFormat: 'csv'
        },
        'adComputerName__contains': {
          value: opts['adComputerNameContains'],
          collectionFormat: 'csv'
        },
        'cloudInstanceId__contains': {
          value: opts['cloudInstanceIdContains'],
          collectionFormat: 'csv'
        },
        'agentVersions': {
          value: opts['agentVersions'],
          collectionFormat: 'csv'
        },
        'adQuery__contains': {
          value: opts['adQueryContains'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'locationEnabled': {
          value: opts['locationEnabled'],
          collectionFormat: 'csv'
        },
        'cloudProviderNin': {
          value: opts['cloudProviderNin'],
          collectionFormat: 'csv'
        },
        'k8sNodeLabels__contains': {
          value: opts['k8sNodeLabelsContains'],
          collectionFormat: 'csv'
        },
        'firewallEnabled': {
          value: opts['firewallEnabled'],
          collectionFormat: 'csv'
        },
        'domainsNin': {
          value: opts['domainsNin'],
          collectionFormat: 'csv'
        },
        'gcpServiceAccount__contains': {
          value: opts['gcpServiceAccountContains'],
          collectionFormat: 'csv'
        },
        'cloudLocation__contains': {
          value: opts['cloudLocationContains'],
          collectionFormat: 'csv'
        },
        'networkStatuses': {
          value: opts['networkStatuses'],
          collectionFormat: 'csv'
        },
        'k8sType__contains': {
          value: opts['k8sTypeContains'],
          collectionFormat: 'csv'
        },
        'networkInterfaceGatewayMacAddress__contains': {
          value: opts['networkInterfaceGatewayMacAddressContains'],
          collectionFormat: 'csv'
        },
        'operationalStatesNin': {
          value: opts['operationalStatesNin'],
          collectionFormat: 'csv'
        },
        'k8sVersion__contains': {
          value: opts['k8sVersionContains'],
          collectionFormat: 'csv'
        },
        'installerTypes': {
          value: opts['installerTypes'],
          collectionFormat: 'csv'
        },
        'adUserMember__contains': {
          value: opts['adUserMemberContains'],
          collectionFormat: 'csv'
        },
        'missingPermissions': {
          value: opts['missingPermissions'],
          collectionFormat: 'csv'
        },
        'installerTypesNin': {
          value: opts['installerTypesNin'],
          collectionFormat: 'csv'
        },
        'machineTypesNin': {
          value: opts['machineTypesNin'],
          collectionFormat: 'csv'
        },
        'isDecommissioned': {
          value: opts['isDecommissioned'],
          collectionFormat: 'csv'
        },
        'rangerStatusesNin': {
          value: opts['rangerStatusesNin'],
          collectionFormat: 'csv'
        },
        'cloudInstanceSize__contains': {
          value: opts['cloudInstanceSizeContains'],
          collectionFormat: 'csv'
        },
        'rangerVersionsNin': {
          value: opts['rangerVersionsNin'],
          collectionFormat: 'csv'
        },
        'consoleMigrationStatuses': {
          value: opts['consoleMigrationStatuses'],
          collectionFormat: 'csv'
        },
        'azureResourceGroup__contains': {
          value: opts['azureResourceGroupContains'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'uuid__contains': {
          value: opts['uuidContains'],
          collectionFormat: 'csv'
        },
        'networkStatusesNin': {
          value: opts['networkStatusesNin'],
          collectionFormat: 'csv'
        },
        'uuids': {
          value: opts['uuids'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/export/agents', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiExportAgentsLightGet operation.
     * @callback module:api/AgentsApi~webApiExportAgentsLightGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Export Agents - Light
     * Export Agent data to a CSV, for Agents that match the filter. This command exports up to 300000 items (each datum is an item).
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.agentVersionsNin Agent versions not to include. Example: \"2.0.0.0,2.1.5.144\".
     * @param {String} opts.registeredAtBetween Date range for first registration time (format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978764288-1514978999999\".
     * @param {Date} opts.registeredAtLte Agents registered before or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.adComputerQueryContains Free-text filter by Active Directory computer name or its groups (supports multiple values). Example: \"DC=sentinelone,Windows\".
     * @param {module:model/String} opts.mitigationModeSuspicious Mitigation mode policy for suspicious activity. Example: \"detect\".
     * @param {Boolean} opts.hasLocalConfiguration Agent has a local configuration set
     * @param {Array.<String>} opts.adUserQueryContains Free-text filter by Active Directory computer name or its groups (supports multiple values). Example: \"DC=sentinelone,John\".
     * @param {String} opts.query A free-text search term, will match applicable attributes (sub-string match). Note: Device's physical addresses will be matched if they start with the search term only (no match if they contain the term). Example: \"Linux\".
     * @param {Array.<String>} opts.cloudProvider Agents from which cloud provider
     * @param {Number} opts.coreCountGt CPU cores (more than)
     * @param {Date} opts.decommissionedAtGt Agents decommissioned after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.registeredAtGte Agents registered after or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Number} opts.totalMemoryGt Memory size (MB, more than)
     * @param {Date} opts.updatedAtGt Agents updated after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Boolean} opts.hasContainerizedWorkload Include only Agents protecting containerized workloads
     * @param {Array.<String>} opts.cloudImageContains Free-text filter by cloud image (supports multiple values)
     * @param {Date} opts.threatCreatedAtGte Agents with threats reported after or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<module:model/String>} opts.appsVulnerabilityStatusesNin Apps vulnerability status nin. Example: \"patch_required\".
     * @param {Array.<module:model/String>} opts.scanStatusesNin Not included scan statuses. Example: \"started,aborted\".
     * @param {Array.<String>} opts.adComputerMemberContains Free-text filter by Active Directory computer groups string (supports multiple values). Example: \"DC=sentinelone\".
     * @param {Number} opts.coreCountLte CPU cores (less than or equal)
     * @param {Array.<String>} opts.rangerVersions Ranger versions to include. Example: \"2.0.0.0,2.1.5.144\".
     * @param {Array.<module:model/String>} opts.machineTypes Included machine types. Example: \"laptop,desktop\".
     * @param {Number} opts.coreCountGte CPU cores (more than or equal)
     * @param {Array.<String>} opts.locationIds Include only Agents reporting these locations. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.locationIdsNin Do not include only Agents reporting these locations. Example: \"225494730938493804,225494730938493915\".
     * @param {String} opts.gatewayIp Gateway ip. Example: \"192.168.0.1\".
     * @param {Date} opts.updatedAtLte Agents updated before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<module:model/String>} opts.missingPermissionsNin Excluded missing permissions. Example: \"user_action_needed_bluetooth_per,user_action_needed_fda_helper\".
     * @param {module:model/String} opts.migrationStatus Migration status. Example: \"N/A\".
     * @param {Array.<Boolean>} opts.threatRebootRequired Has at least one threat with at least one mitigation action pending reboot to succeed
     * @param {Array.<String>} opts.serialNumberContains Free-text filter by Serial Number (supports multiple values)
     * @param {Date} opts.decommissionedAtGte Agents decommissioned after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.lastSuccessfulScanDateBetween Date range for last successful full disk scan(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978764288-1514978999999\".
     * @param {Date} opts.lastActiveDateLte Agents last active before or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.lastActiveDateBetween Date range for last active date(format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978764288-1514978999999\".
     * @param {Array.<Boolean>} opts.networkQuarantineEnabled The agents supports Network Quarantine Control and its enabled for the agent's group
     * @param {Array.<String>} opts.cloudTagsContains Free-text filter by cloud tags (supports multiple values)
     * @param {String} opts.threatCreatedAtBetween Agents with threats reported in a date range (format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978764288-1514978999999\".
     * @param {Boolean} opts.encryptedApplications Disk encryption status
     * @param {Array.<Boolean>} opts.isUninstalled Include installed, uninstalled or both. Example: \"True,False\".
     * @param {Array.<String>} opts.networkInterfacePhysicalContains Free-text filter by MAC address (supports multiple values). Example: \"aa:0f,:41:\".
     * @param {String} opts.agentVersionGte Agents versions greater than or equal to given version. Example: \"2.5.1.1320\".
     * @param {Date} opts.lastSuccessfulScanDateGte Agents last successful full disk scan after or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.operationalStates Agent operational state
     * @param {Array.<String>} opts.adUserNameContains Free-text filter by Active Directory username string (supports multiple values). Example: \"DC=sentinelone\".
     * @param {Array.<module:model/String>} opts.osTypesNin Not included OS types. Example: \"windows\".
     * @param {String} opts.csvFilterId The ID of the CSV file to filter by. Example: \"225494730938493804\".
     * @param {Boolean} opts.isActive Include only active Agents
     * @param {module:model/String} opts.mitigationMode Agent mitigation mode policy. Example: \"detect\".
     * @param {Array.<String>} opts.awsSubnetIdsContains Free-text filter by aws subnet ids (supports multiple values)
     * @param {String} opts.agentVersionLte Agents versions less than or equal to given version. Example: \"2.5.1.1320\".
     * @param {Date} opts.updatedAtGte Agents updated after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.osVersionContains Free-text filter by OS full name and version (supports multiple values). Example: \"Service Pack 1\".
     * @param {Array.<String>} opts.externalIpContains Free-text filter by visible IP (supports multiple values). Example: \"205,127.0\".
     * @param {Array.<String>} opts.awsSecurityGroupsContains Free-text filter by aws securityGroups(supports multiple values)
     * @param {Array.<String>} opts.k8sNodeNameContains Free-text filter by K8s node name (supports multiple values)
     * @param {String} opts.agentVersionBetween Version range for agent version (format: <from_version>-<to_version>, inclusive). Example: \"2.0.0.0-2.1.5.144\".
     * @param {Number} opts.activeThreats Include Agents with this amount of active threats. Example: \"3\".
     * @param {Boolean} opts.hasTags Include only Agents that have any tags assigned if True, or none if False
     * @param {Array.<String>} opts.agentNamespaceContains Free-text filter by agent namespace (supports multiple values)
     * @param {Number} opts.cpuCountLt Number of CPUs (less than)
     * @param {Date} opts.registeredAtLt Agents registered before this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.networkInterfaceInetContains Free-text filter by local IP (supports multiple values). Example: \"192,10.0.0\".
     * @param {Array.<String>} opts.computerNameContains Free-text filter by computer name (supports multiple values). Example: \"john-office,WIN\".
     * @param {Array.<String>} opts.cloudNetworkContains Free-text filter by cloud network (supports multiple values)
     * @param {Boolean} opts.remoteOpsForensicsSupported Include only agents that has Remote Ops Forensicsfeature supported
     * @param {Array.<String>} opts.remoteProfilingStates Agent remote profiling state
     * @param {Array.<String>} opts.filteredGroupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.agentPodNameContains Free-text filter by agent pod name (supports multiple values)
     * @param {Array.<module:model/String>} opts.userActionsNeededNin Excluded pending user actions. Example: \"reboot_needed,upgrade_needed\".
     * @param {Array.<module:model/String>} opts.rangerStatuses Status of Ranger. Example: \"NotApplicable\".
     * @param {String} opts.computerNameLike Match computer name partially (substring). Example: \"Lab1\".
     * @param {Array.<String>} opts.externalIdContains Free-text filter by external ID (Customer ID). Example: \"Tag#1 - monitoring,Performance machine\".
     * @param {String} opts.createdAtBetween Date range for creation time (format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<module:model/String>} opts.consoleMigrationStatusesNin Migration status nin. Example: \"N/A\".
     * @param {Array.<String>} opts.cpuIdContains Free-text filter by CPU name (supports multiple values). Example: \"Intel,AMD\".
     * @param {String} opts.coreCountBetween Possible number of CPU cores (inclusive). Example: \"2-8\".
     * @param {Boolean} opts.isUpToDate Include only Agents with updated software
     * @param {Date} opts.threatCreatedAtLt Agents with threats reported before this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {module:model/String} opts.rangerStatus [DEPRECATED] Use rangerStatuses. Example: \"NotApplicable\".
     * @param {String} opts.totalMemoryBetween Total memory range (GB, inclusive). Example: \"4-8\".
     * @param {Date} opts.lastSuccessfulScanDateLte Agents last successful full disk scan before or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.domains Included network domains. Example: \"mybusiness.net,workgroup\".
     * @param {Array.<String>} opts.awsRoleContains Free-text filter by aws role(supports multiple values)
     * @param {Array.<String>} opts.lastLoggedInUserNameContains Free-text filter by username (supports multiple values). Example: \"admin,johnd1\".
     * @param {Number} opts.cpuCountGt Number of CPUs (more than)
     * @param {Array.<String>} opts.cloudAccountContains Free-text filter by cloud account (supports multiple values)
     * @param {Array.<String>} opts.clusterNameContains Free-text filter by cluster name (supports multiple values)
     * @param {Array.<module:model/String>} opts.scanStatuses Included scan statuses. Example: \"started,aborted\".
     * @param {Date} opts.updatedAtLt Agents updated before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.ids A list of Agent IDs. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.liveUpdateIdContains Free-text filter by live update ID (supports multiple values)
     * @param {String} opts.computerName Computer name. Example: \"My Office Desktop\".
     * @param {String} opts.uuid Agent's universally unique identifier. Example: \"ff819e70af13be381993075eb0ce5f2f6de05be2\".
     * @param {Array.<module:model/String>} opts.osTypes Included OS types. Example: \"windows\".
     * @param {Array.<module:model/String>} opts.appsVulnerabilityStatuses Apps vulnerability status in. Example: \"patch_required\".
     * @param {Date} opts.lastActiveDateGte Agents last active after or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.threatContentHash Include only Agents that have at least one threat with this content hash. Example: \"cf23df2207d99a74fbe169e3eba035e633b65d94\".
     * @param {Array.<String>} opts.remoteProfilingStatesNin Do not include these Agent remote profiling states
     * @param {Date} opts.createdAtLte Agents created before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {module:model/String} opts.scanStatus Scan status. Example: \"none\".
     * @param {Array.<String>} opts.filteredSiteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<module:model/String>} opts.userActionsNeeded Included pending user actions. Example: \"reboot_needed,upgrade_needed\".
     * @param {Date} opts.registeredAtGt Agents registered after this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {module:model/String} opts.osArch OS architecture. Example: \"32 bit\".
     * @param {Array.<String>} opts.adComputerNameContains Free-text filter by Active Directory computer name string (supports multiple values). Example: \"DC=sentinelone\".
     * @param {Number} opts.totalMemoryGte Memory size (MB, more than or equal)
     * @param {Boolean} opts.threatHidden Include only Agents with at least one hidden threat
     * @param {Date} opts.lastActiveDateGt Agents last active after this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.threatCreatedAtLte Agents with threats reported before or at this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Number} opts.cpuCountGte Number of CPUs (more than or equal)
     * @param {Array.<String>} opts.cloudInstanceIdContains Free-text filter by cloud instance id(supports multiple values)
     * @param {Array.<String>} opts.agentVersions Agent versions to include. Example: \"2.0.0.0,2.1.5.144\".
     * @param {Array.<String>} opts.adQueryContains Free-text filter by Active Directory string (supports multiple values). Example: \"DC=sentinelone\".
     * @param {Date} opts.createdAtGte Agents created after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<Boolean>} opts.locationEnabled The agents supports Location Awareness and it is enabled for the agent's group
     * @param {Array.<String>} opts.cloudProviderNin Exclude Agents from these cloud provider
     * @param {Boolean} opts.isPendingUninstall Include only Agents with pending uninstall requests
     * @param {Array.<String>} opts.k8sNodeLabelsContains Free-text filter by K8s node labels (supports multiple values)
     * @param {Date} opts.decommissionedAtLte Agents decommissioned before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.tagsData Filter agents by their assigned tags. Given in form of a JSON where each key represents a tag key, and each value represents a list of string values to filter by. To filter by unassigned tag values, use __nin suffix in the tag key. Example: \"{\"key1\": [\"value1_1\", \"value1_2\"], \"key2__nin\": [\"value2\"]}\".
     * @param {String} opts.agentVersionGt Agents versions greater than given version. Example: \"2.5.1.1320\".
     * @param {Date} opts.createdAtGt Agents created after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {module:model/String} opts.threatMitigationStatus Include only Agents that have threats with this mitigation status. Example: \"mitigated\".
     * @param {Date} opts.lastSuccessfulScanDateGt Agents last successful full disk scan after this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<Boolean>} opts.firewallEnabled The agents supports Firewall Control and it is enabled for the agent's group
     * @param {Date} opts.decommissionedAtLt Agents decommissioned before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.decommissionedAtBetween Date range for decommission time (format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<String>} opts.domainsNin Not included network domains. Example: \"mybusiness.net,workgroup\".
     * @param {Date} opts.createdAtLt Agents created before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.gcpServiceAccountContains Free-text filter by gcp service account (supports multiple values)
     * @param {Boolean} opts.threatResolved Include only Agents with at least one resolved threat
     * @param {Array.<String>} opts.cloudLocationContains Free-text filter by cloud location (supports multiple values)
     * @param {Date} opts.lastActiveDateLt Agents last active before this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<module:model/String>} opts.networkStatuses Included network statuses. Example: \"connected,connecting\".
     * @param {Array.<String>} opts.k8sTypeContains Free-text filter by K8s type(supports multiple values)
     * @param {Array.<String>} opts.networkInterfaceGatewayMacAddressContains Free-text filter by Gateway MAC address (supports multiple values). Example: \"aa:0f,:41:\".
     * @param {String} opts.cpuCountBetween Possible number of CPU cores (inclusive). Example: \"2-8\".
     * @param {Array.<String>} opts.operationalStatesNin Do not include these Agent operational states
     * @param {Number} opts.totalMemoryLt Memory size (MB, less than)
     * @param {Array.<String>} opts.k8sVersionContains Free-text filter by K8s version (supports multiple values)
     * @param {Array.<module:model/String>} opts.installerTypes Include only Agents installed with these package types. Example: \".msi\".
     * @param {Array.<String>} opts.adUserMemberContains Free-text filter by Active Directory user groups string (supports multiple values). Example: \"DC=sentinelone\".
     * @param {Boolean} opts.infected Include only Agents with at least one active threat
     * @param {Number} opts.coreCountLt CPU cores (less than)
     * @param {Array.<module:model/String>} opts.missingPermissions Included missing permissions. Example: \"user_action_needed_bluetooth_per,user_action_needed_fda_helper\".
     * @param {Array.<module:model/String>} opts.installerTypesNin Exclude Agents installed with these package types. Example: \".msi\".
     * @param {Array.<module:model/String>} opts.machineTypesNin Not included machine types. Example: \"laptop,desktop\".
     * @param {String} opts.filterId Include all Agents matching this saved filter. Example: \"225494730938493804\".
     * @param {Array.<Boolean>} opts.isDecommissioned Include active, decommissioned or both. Example: \"True,False\".
     * @param {String} opts.agentVersionLt Agents versions less than given version. Example: \"2.5.1.1320\".
     * @param {Array.<module:model/String>} opts.rangerStatusesNin Do not include these Ranger Statuses. Example: \"NotApplicable\".
     * @param {Array.<String>} opts.cloudInstanceSizeContains Free-text filter by cloud instance size(supports multiple values)
     * @param {Array.<String>} opts.rangerVersionsNin Ranger versions not to include. Example: \"2.0.0.0,2.1.5.144\".
     * @param {module:model/String} opts.rsoLevel Supported Remote Script Orchestration level. Example: \"none\".
     * @param {Number} opts.cpuCountLte Number of CPUs (less than or equal)
     * @param {String} opts.updatedAtBetween Date range for update time (format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<module:model/String>} opts.consoleMigrationStatuses Migration status in. Example: \"N/A\".
     * @param {Array.<String>} opts.azureResourceGroupContains Free-text filter by azure resource group(supports multiple values)
     * @param {Date} opts.threatCreatedAtGt Agents with threats reported after this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.uuidContains Free-text filter by Agent UUID (supports multiple values). Example: \"e92-01928,b055\".
     * @param {Array.<module:model/String>} opts.networkStatusesNin Included network statuses. Example: \"connected,connecting\".
     * @param {Number} opts.totalMemoryLte Memory size (MB, less than or equal)
     * @param {Number} opts.activeThreatsGt Include Agents with at least this amount of active threats. Example: \"5\".
     * @param {Date} opts.lastSuccessfulScanDateLt Agents last successful full disk scan before this time. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.adQuery An Active Directory query string. Example: \"CN=Managers,DC=sentinelone,DC=com\".
     * @param {Array.<String>} opts.uuids A list of included UUIDs. Example: \"ff819e70af13be381993075eb0ce5f2f6de05b11,ff819e70af13be381993075eb0ce5f2f6de05c22\".
     * @param {module:api/AgentsApi~webApiExportAgentsLightGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiExportAgentsLightGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'registeredAt__between': opts['registeredAtBetween'],
        'registeredAt__lte': opts['registeredAtLte'],
        'mitigationModeSuspicious': opts['mitigationModeSuspicious'],
        'hasLocalConfiguration': opts['hasLocalConfiguration'],
        'query': opts['query'],
        'coreCount__gt': opts['coreCountGt'],
        'decommissionedAt__gt': opts['decommissionedAtGt'],
        'registeredAt__gte': opts['registeredAtGte'],
        'totalMemory__gt': opts['totalMemoryGt'],
        'updatedAt__gt': opts['updatedAtGt'],
        'hasContainerizedWorkload': opts['hasContainerizedWorkload'],
        'threatCreatedAt__gte': opts['threatCreatedAtGte'],
        'coreCount__lte': opts['coreCountLte'],
        'coreCount__gte': opts['coreCountGte'],
        'gatewayIp': opts['gatewayIp'],
        'updatedAt__lte': opts['updatedAtLte'],
        'migrationStatus': opts['migrationStatus'],
        'decommissionedAt__gte': opts['decommissionedAtGte'],
        'lastSuccessfulScanDate__between': opts['lastSuccessfulScanDateBetween'],
        'lastActiveDate__lte': opts['lastActiveDateLte'],
        'lastActiveDate__between': opts['lastActiveDateBetween'],
        'threatCreatedAt__between': opts['threatCreatedAtBetween'],
        'encryptedApplications': opts['encryptedApplications'],
        'agentVersion__gte': opts['agentVersionGte'],
        'lastSuccessfulScanDate__gte': opts['lastSuccessfulScanDateGte'],
        'csvFilterId': opts['csvFilterId'],
        'isActive': opts['isActive'],
        'mitigationMode': opts['mitigationMode'],
        'agentVersion__lte': opts['agentVersionLte'],
        'updatedAt__gte': opts['updatedAtGte'],
        'agentVersion__between': opts['agentVersionBetween'],
        'activeThreats': opts['activeThreats'],
        'hasTags': opts['hasTags'],
        'cpuCount__lt': opts['cpuCountLt'],
        'registeredAt__lt': opts['registeredAtLt'],
        'remoteOpsForensicsSupported': opts['remoteOpsForensicsSupported'],
        'computerName__like': opts['computerNameLike'],
        'createdAt__between': opts['createdAtBetween'],
        'coreCount__between': opts['coreCountBetween'],
        'isUpToDate': opts['isUpToDate'],
        'threatCreatedAt__lt': opts['threatCreatedAtLt'],
        'rangerStatus': opts['rangerStatus'],
        'totalMemory__between': opts['totalMemoryBetween'],
        'lastSuccessfulScanDate__lte': opts['lastSuccessfulScanDateLte'],
        'cpuCount__gt': opts['cpuCountGt'],
        'updatedAt__lt': opts['updatedAtLt'],
        'computerName': opts['computerName'],
        'uuid': opts['uuid'],
        'lastActiveDate__gte': opts['lastActiveDateGte'],
        'threatContentHash': opts['threatContentHash'],
        'createdAt__lte': opts['createdAtLte'],
        'scanStatus': opts['scanStatus'],
        'registeredAt__gt': opts['registeredAtGt'],
        'osArch': opts['osArch'],
        'totalMemory__gte': opts['totalMemoryGte'],
        'threatHidden': opts['threatHidden'],
        'lastActiveDate__gt': opts['lastActiveDateGt'],
        'threatCreatedAt__lte': opts['threatCreatedAtLte'],
        'cpuCount__gte': opts['cpuCountGte'],
        'createdAt__gte': opts['createdAtGte'],
        'isPendingUninstall': opts['isPendingUninstall'],
        'decommissionedAt__lte': opts['decommissionedAtLte'],
        'tagsData': opts['tagsData'],
        'agentVersion__gt': opts['agentVersionGt'],
        'createdAt__gt': opts['createdAtGt'],
        'threatMitigationStatus': opts['threatMitigationStatus'],
        'lastSuccessfulScanDate__gt': opts['lastSuccessfulScanDateGt'],
        'decommissionedAt__lt': opts['decommissionedAtLt'],
        'decommissionedAt__between': opts['decommissionedAtBetween'],
        'createdAt__lt': opts['createdAtLt'],
        'threatResolved': opts['threatResolved'],
        'lastActiveDate__lt': opts['lastActiveDateLt'],
        'cpuCount__between': opts['cpuCountBetween'],
        'totalMemory__lt': opts['totalMemoryLt'],
        'infected': opts['infected'],
        'coreCount__lt': opts['coreCountLt'],
        'filterId': opts['filterId'],
        'agentVersion__lt': opts['agentVersionLt'],
        'rsoLevel': opts['rsoLevel'],
        'cpuCount__lte': opts['cpuCountLte'],
        'updatedAt__between': opts['updatedAtBetween'],
        'threatCreatedAt__gt': opts['threatCreatedAtGt'],
        'totalMemory__lte': opts['totalMemoryLte'],
        'activeThreats__gt': opts['activeThreatsGt'],
        'lastSuccessfulScanDate__lt': opts['lastSuccessfulScanDateLt'],
        'adQuery': opts['adQuery'],
      };
      var collectionQueryParams = {
        'agentVersionsNin': {
          value: opts['agentVersionsNin'],
          collectionFormat: 'csv'
        },
        'adComputerQuery__contains': {
          value: opts['adComputerQueryContains'],
          collectionFormat: 'csv'
        },
        'adUserQuery__contains': {
          value: opts['adUserQueryContains'],
          collectionFormat: 'csv'
        },
        'cloudProvider': {
          value: opts['cloudProvider'],
          collectionFormat: 'csv'
        },
        'cloudImage__contains': {
          value: opts['cloudImageContains'],
          collectionFormat: 'csv'
        },
        'appsVulnerabilityStatusesNin': {
          value: opts['appsVulnerabilityStatusesNin'],
          collectionFormat: 'csv'
        },
        'scanStatusesNin': {
          value: opts['scanStatusesNin'],
          collectionFormat: 'csv'
        },
        'adComputerMember__contains': {
          value: opts['adComputerMemberContains'],
          collectionFormat: 'csv'
        },
        'rangerVersions': {
          value: opts['rangerVersions'],
          collectionFormat: 'csv'
        },
        'machineTypes': {
          value: opts['machineTypes'],
          collectionFormat: 'csv'
        },
        'locationIds': {
          value: opts['locationIds'],
          collectionFormat: 'csv'
        },
        'locationIdsNin': {
          value: opts['locationIdsNin'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'missingPermissionsNin': {
          value: opts['missingPermissionsNin'],
          collectionFormat: 'csv'
        },
        'threatRebootRequired': {
          value: opts['threatRebootRequired'],
          collectionFormat: 'csv'
        },
        'serialNumber__contains': {
          value: opts['serialNumberContains'],
          collectionFormat: 'csv'
        },
        'networkQuarantineEnabled': {
          value: opts['networkQuarantineEnabled'],
          collectionFormat: 'csv'
        },
        'cloudTags__contains': {
          value: opts['cloudTagsContains'],
          collectionFormat: 'csv'
        },
        'isUninstalled': {
          value: opts['isUninstalled'],
          collectionFormat: 'csv'
        },
        'networkInterfacePhysical__contains': {
          value: opts['networkInterfacePhysicalContains'],
          collectionFormat: 'csv'
        },
        'operationalStates': {
          value: opts['operationalStates'],
          collectionFormat: 'csv'
        },
        'adUserName__contains': {
          value: opts['adUserNameContains'],
          collectionFormat: 'csv'
        },
        'osTypesNin': {
          value: opts['osTypesNin'],
          collectionFormat: 'csv'
        },
        'awsSubnetIds__contains': {
          value: opts['awsSubnetIdsContains'],
          collectionFormat: 'csv'
        },
        'osVersion__contains': {
          value: opts['osVersionContains'],
          collectionFormat: 'csv'
        },
        'externalIp__contains': {
          value: opts['externalIpContains'],
          collectionFormat: 'csv'
        },
        'awsSecurityGroups__contains': {
          value: opts['awsSecurityGroupsContains'],
          collectionFormat: 'csv'
        },
        'k8sNodeName__contains': {
          value: opts['k8sNodeNameContains'],
          collectionFormat: 'csv'
        },
        'agentNamespace__contains': {
          value: opts['agentNamespaceContains'],
          collectionFormat: 'csv'
        },
        'networkInterfaceInet__contains': {
          value: opts['networkInterfaceInetContains'],
          collectionFormat: 'csv'
        },
        'computerName__contains': {
          value: opts['computerNameContains'],
          collectionFormat: 'csv'
        },
        'cloudNetwork__contains': {
          value: opts['cloudNetworkContains'],
          collectionFormat: 'csv'
        },
        'remoteProfilingStates': {
          value: opts['remoteProfilingStates'],
          collectionFormat: 'csv'
        },
        'filteredGroupIds': {
          value: opts['filteredGroupIds'],
          collectionFormat: 'csv'
        },
        'agentPodName__contains': {
          value: opts['agentPodNameContains'],
          collectionFormat: 'csv'
        },
        'userActionsNeededNin': {
          value: opts['userActionsNeededNin'],
          collectionFormat: 'csv'
        },
        'rangerStatuses': {
          value: opts['rangerStatuses'],
          collectionFormat: 'csv'
        },
        'externalId__contains': {
          value: opts['externalIdContains'],
          collectionFormat: 'csv'
        },
        'consoleMigrationStatusesNin': {
          value: opts['consoleMigrationStatusesNin'],
          collectionFormat: 'csv'
        },
        'cpuId__contains': {
          value: opts['cpuIdContains'],
          collectionFormat: 'csv'
        },
        'domains': {
          value: opts['domains'],
          collectionFormat: 'csv'
        },
        'awsRole__contains': {
          value: opts['awsRoleContains'],
          collectionFormat: 'csv'
        },
        'lastLoggedInUserName__contains': {
          value: opts['lastLoggedInUserNameContains'],
          collectionFormat: 'csv'
        },
        'cloudAccount__contains': {
          value: opts['cloudAccountContains'],
          collectionFormat: 'csv'
        },
        'clusterName__contains': {
          value: opts['clusterNameContains'],
          collectionFormat: 'csv'
        },
        'scanStatuses': {
          value: opts['scanStatuses'],
          collectionFormat: 'csv'
        },
        'ids': {
          value: opts['ids'],
          collectionFormat: 'csv'
        },
        'liveUpdateId__contains': {
          value: opts['liveUpdateIdContains'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'appsVulnerabilityStatuses': {
          value: opts['appsVulnerabilityStatuses'],
          collectionFormat: 'csv'
        },
        'remoteProfilingStatesNin': {
          value: opts['remoteProfilingStatesNin'],
          collectionFormat: 'csv'
        },
        'filteredSiteIds': {
          value: opts['filteredSiteIds'],
          collectionFormat: 'csv'
        },
        'userActionsNeeded': {
          value: opts['userActionsNeeded'],
          collectionFormat: 'csv'
        },
        'adComputerName__contains': {
          value: opts['adComputerNameContains'],
          collectionFormat: 'csv'
        },
        'cloudInstanceId__contains': {
          value: opts['cloudInstanceIdContains'],
          collectionFormat: 'csv'
        },
        'agentVersions': {
          value: opts['agentVersions'],
          collectionFormat: 'csv'
        },
        'adQuery__contains': {
          value: opts['adQueryContains'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'locationEnabled': {
          value: opts['locationEnabled'],
          collectionFormat: 'csv'
        },
        'cloudProviderNin': {
          value: opts['cloudProviderNin'],
          collectionFormat: 'csv'
        },
        'k8sNodeLabels__contains': {
          value: opts['k8sNodeLabelsContains'],
          collectionFormat: 'csv'
        },
        'firewallEnabled': {
          value: opts['firewallEnabled'],
          collectionFormat: 'csv'
        },
        'domainsNin': {
          value: opts['domainsNin'],
          collectionFormat: 'csv'
        },
        'gcpServiceAccount__contains': {
          value: opts['gcpServiceAccountContains'],
          collectionFormat: 'csv'
        },
        'cloudLocation__contains': {
          value: opts['cloudLocationContains'],
          collectionFormat: 'csv'
        },
        'networkStatuses': {
          value: opts['networkStatuses'],
          collectionFormat: 'csv'
        },
        'k8sType__contains': {
          value: opts['k8sTypeContains'],
          collectionFormat: 'csv'
        },
        'networkInterfaceGatewayMacAddress__contains': {
          value: opts['networkInterfaceGatewayMacAddressContains'],
          collectionFormat: 'csv'
        },
        'operationalStatesNin': {
          value: opts['operationalStatesNin'],
          collectionFormat: 'csv'
        },
        'k8sVersion__contains': {
          value: opts['k8sVersionContains'],
          collectionFormat: 'csv'
        },
        'installerTypes': {
          value: opts['installerTypes'],
          collectionFormat: 'csv'
        },
        'adUserMember__contains': {
          value: opts['adUserMemberContains'],
          collectionFormat: 'csv'
        },
        'missingPermissions': {
          value: opts['missingPermissions'],
          collectionFormat: 'csv'
        },
        'installerTypesNin': {
          value: opts['installerTypesNin'],
          collectionFormat: 'csv'
        },
        'machineTypesNin': {
          value: opts['machineTypesNin'],
          collectionFormat: 'csv'
        },
        'isDecommissioned': {
          value: opts['isDecommissioned'],
          collectionFormat: 'csv'
        },
        'rangerStatusesNin': {
          value: opts['rangerStatusesNin'],
          collectionFormat: 'csv'
        },
        'cloudInstanceSize__contains': {
          value: opts['cloudInstanceSizeContains'],
          collectionFormat: 'csv'
        },
        'rangerVersionsNin': {
          value: opts['rangerVersionsNin'],
          collectionFormat: 'csv'
        },
        'consoleMigrationStatuses': {
          value: opts['consoleMigrationStatuses'],
          collectionFormat: 'csv'
        },
        'azureResourceGroup__contains': {
          value: opts['azureResourceGroupContains'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'uuid__contains': {
          value: opts['uuidContains'],
          collectionFormat: 'csv'
        },
        'networkStatusesNin': {
          value: opts['networkStatusesNin'],
          collectionFormat: 'csv'
        },
        'uuids': {
          value: opts['uuids'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/export/agents-light', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
