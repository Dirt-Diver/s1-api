/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AffectedResultsSchema200', 'model/AgentsSchemasAgentsActionSchema', 'model/NoDataSchema400', 'model/NoDataSchema401'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/AffectedResultsSchema200'), require('../model/AgentsSchemasAgentsActionSchema'), require('../model/NoDataSchema400'), require('../model/NoDataSchema401'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.AgentSupportActionsApi = factory(root.S1MgmtApi.ApiClient, root.S1MgmtApi.AffectedResultsSchema200, root.S1MgmtApi.AgentsSchemasAgentsActionSchema, root.S1MgmtApi.NoDataSchema400, root.S1MgmtApi.NoDataSchema401);
  }
}(this, function(ApiClient, AffectedResultsSchema200, AgentsSchemasAgentsActionSchema, NoDataSchema400, NoDataSchema401) {
  'use strict';

  /**
   * AgentSupportActions service.
   * @module api/AgentSupportActionsApi
   * @version 2.1
   */

  /**
   * Constructs a new AgentSupportActionsApi. 
   * @alias module:api/AgentSupportActionsApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the webApiAgentsActionsClearRemoteShellSessionPost operation.
     * @callback module:api/AgentSupportActionsApi~webApiAgentsActionsClearRemoteShellSessionPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Clear Remote Shell
     * Remote Shell is a powerful way to respond remotely to events on endpoints. It lets you open full shell capabilities - PowerShell on Windows and Bash on macOS and Linux. <BR>For best practices, a Remote Shell session can be terminated in many ways: from the UI, from Agent timeouts, from endpoint or connections issues, and so on. If a shell closes at the same time that an Agent goes offline, Remote Shell status is incorrect on the Management. <BR>Use this command to clear the \"open shell\" flags on the Management. <BR>The IT user role does not have permissions to run this command. 
     * @param {Object} opts Optional parameters
     * @param {module:model/AgentsSchemasAgentsActionSchema} opts.body 
     * @param {module:api/AgentSupportActionsApi~webApiAgentsActionsClearRemoteShellSessionPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiAgentsActionsClearRemoteShellSessionPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/agents/actions/clear-remote-shell-session', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
