/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/CloudProxyRemoteScriptsExecuteScriptSchema', 'model/DownloadMultipleScriptsResultsSchema200', 'model/FetchScriptsResultsSchema', 'model/NoDataSchema400', 'model/NoDataSchema401', 'model/NoDataSchema404', 'model/RemoteScriptsExecuteSchema200', 'model/TasksSchemasTaskSchemaMany200', 'model/V21RsoSchemasApproveDeclinePendingExecutionRequestSchema', 'model/V21RsoSchemasEncapsulatedDeleteGuardrailsSchema', 'model/V21RsoSchemasEncapsulatedPostGuardrailCheckSchema', 'model/V21RsoSchemasEncapsulatedPostGuardrailsSchema', 'model/V21RsoSchemasEnrichedScriptSchema200', 'model/V21RsoSchemasEnrichedScriptSchemaMany200', 'model/V21RsoSchemasGetGuardrailsResponseSchema200', 'model/V21RsoSchemasOperationResultStatusSchema200', 'model/V21RsoSchemasPendingExecutionsPaginatedResponseSchemaMany200', 'model/V21RsoSchemasPostGuardrailCheckResponseSchema200', 'model/V21RsoSchemasScriptContentSchema200', 'model/V21RsoSchemasScriptDeleteSchema', 'model/V21RsoSchemasUpdateScript'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/CloudProxyRemoteScriptsExecuteScriptSchema'), require('../model/DownloadMultipleScriptsResultsSchema200'), require('../model/FetchScriptsResultsSchema'), require('../model/NoDataSchema400'), require('../model/NoDataSchema401'), require('../model/NoDataSchema404'), require('../model/RemoteScriptsExecuteSchema200'), require('../model/TasksSchemasTaskSchemaMany200'), require('../model/V21RsoSchemasApproveDeclinePendingExecutionRequestSchema'), require('../model/V21RsoSchemasEncapsulatedDeleteGuardrailsSchema'), require('../model/V21RsoSchemasEncapsulatedPostGuardrailCheckSchema'), require('../model/V21RsoSchemasEncapsulatedPostGuardrailsSchema'), require('../model/V21RsoSchemasEnrichedScriptSchema200'), require('../model/V21RsoSchemasEnrichedScriptSchemaMany200'), require('../model/V21RsoSchemasGetGuardrailsResponseSchema200'), require('../model/V21RsoSchemasOperationResultStatusSchema200'), require('../model/V21RsoSchemasPendingExecutionsPaginatedResponseSchemaMany200'), require('../model/V21RsoSchemasPostGuardrailCheckResponseSchema200'), require('../model/V21RsoSchemasScriptContentSchema200'), require('../model/V21RsoSchemasScriptDeleteSchema'), require('../model/V21RsoSchemasUpdateScript'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.RemoteOpsScriptsApi = factory(root.S1MgmtApi.ApiClient, root.S1MgmtApi.CloudProxyRemoteScriptsExecuteScriptSchema, root.S1MgmtApi.DownloadMultipleScriptsResultsSchema200, root.S1MgmtApi.FetchScriptsResultsSchema, root.S1MgmtApi.NoDataSchema400, root.S1MgmtApi.NoDataSchema401, root.S1MgmtApi.NoDataSchema404, root.S1MgmtApi.RemoteScriptsExecuteSchema200, root.S1MgmtApi.TasksSchemasTaskSchemaMany200, root.S1MgmtApi.V21RsoSchemasApproveDeclinePendingExecutionRequestSchema, root.S1MgmtApi.V21RsoSchemasEncapsulatedDeleteGuardrailsSchema, root.S1MgmtApi.V21RsoSchemasEncapsulatedPostGuardrailCheckSchema, root.S1MgmtApi.V21RsoSchemasEncapsulatedPostGuardrailsSchema, root.S1MgmtApi.V21RsoSchemasEnrichedScriptSchema200, root.S1MgmtApi.V21RsoSchemasEnrichedScriptSchemaMany200, root.S1MgmtApi.V21RsoSchemasGetGuardrailsResponseSchema200, root.S1MgmtApi.V21RsoSchemasOperationResultStatusSchema200, root.S1MgmtApi.V21RsoSchemasPendingExecutionsPaginatedResponseSchemaMany200, root.S1MgmtApi.V21RsoSchemasPostGuardrailCheckResponseSchema200, root.S1MgmtApi.V21RsoSchemasScriptContentSchema200, root.S1MgmtApi.V21RsoSchemasScriptDeleteSchema, root.S1MgmtApi.V21RsoSchemasUpdateScript);
  }
}(this, function(ApiClient, CloudProxyRemoteScriptsExecuteScriptSchema, DownloadMultipleScriptsResultsSchema200, FetchScriptsResultsSchema, NoDataSchema400, NoDataSchema401, NoDataSchema404, RemoteScriptsExecuteSchema200, TasksSchemasTaskSchemaMany200, V21RsoSchemasApproveDeclinePendingExecutionRequestSchema, V21RsoSchemasEncapsulatedDeleteGuardrailsSchema, V21RsoSchemasEncapsulatedPostGuardrailCheckSchema, V21RsoSchemasEncapsulatedPostGuardrailsSchema, V21RsoSchemasEnrichedScriptSchema200, V21RsoSchemasEnrichedScriptSchemaMany200, V21RsoSchemasGetGuardrailsResponseSchema200, V21RsoSchemasOperationResultStatusSchema200, V21RsoSchemasPendingExecutionsPaginatedResponseSchemaMany200, V21RsoSchemasPostGuardrailCheckResponseSchema200, V21RsoSchemasScriptContentSchema200, V21RsoSchemasScriptDeleteSchema, V21RsoSchemasUpdateScript) {
  'use strict';

  /**
   * RemoteOpsScripts service.
   * @module api/RemoteOpsScriptsApi
   * @version 2.1
   */

  /**
   * Constructs a new RemoteOpsScriptsApi. 
   * @alias module:api/RemoteOpsScriptsApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the webApiRemoteScriptsDelete operation.
     * @callback module:api/RemoteOpsScriptsApi~webApiRemoteScriptsDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21RsoSchemasEnrichedScriptSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Scripts
     * Deletes scripts that match a filter.
     * @param {Object} opts Optional parameters
     * @param {module:model/V21RsoSchemasScriptDeleteSchema} opts.body 
     * @param {module:api/RemoteOpsScriptsApi~webApiRemoteScriptsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21RsoSchemasEnrichedScriptSchemaMany200}
     */
    this.webApiRemoteScriptsDelete = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = V21RsoSchemasEnrichedScriptSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/remote-scripts', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiRemoteScriptsEditscriptIdPut operation.
     * @callback module:api/RemoteOpsScriptsApi~webApiRemoteScriptsEditscriptIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21RsoSchemasEnrichedScriptSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a Script
     * Change the properties of a given script: runtime timeout, name, and whether input is required (if true, input example and instructions are requried),or  script content itselt. <br>This command requires the script ID, which you can get from the Get Scripts API.
     * @param {String} scriptId Script ID. Example: \"225494730938493804\".
     * @param {Boolean} inputRequired Is input required
     * @param {String} inputInstructions Input instructions
     * @param {String} scriptName Script name
     * @param {String} inputExample Input example
     * @param {module:model/String} scriptType Script type. Example: \"artifactCollection\".
     * @param {Number} scriptRuntimeTimeoutSeconds Script runtime timeout in seconds
     * @param {Array.<module:model/String>} osTypes Os types. Example: \"m,a,c,o,s,,,l,i,n,u,x\".
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.sendActivity Send activity (default to false)
     * @param {String} opts.scriptContent Filled out with a new content of a script if the script content was changedon an already previously uploaded script
     * @param {String} opts.packageMaxSize Package max size (default to 209715200)
     * @param {String} opts.scriptDescription Script description
     * @param {String} opts.consoleData Console data
     * @param {Boolean} opts.packageRemoved Was package removed during edit of the script?
     * @param {Number} opts.packageEndpointExpirationSeconds Package expiration time on endpoint
     * @param {module:model/String} opts.packageEndpointExpiration Package expiration option on endpoint. Example: \"None\". (default to None)
     * @param {Boolean} opts.isScriptContentEncoded Is the script content base64 encoded?
     * @param {File} opts.packageFile Package file
     * @param {File} opts.scriptFile Script file
     * @param {module:api/RemoteOpsScriptsApi~webApiRemoteScriptsEditscriptIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21RsoSchemasEnrichedScriptSchema200}
     */
    this.webApiRemoteScriptsEditscriptIdPut = function(scriptId, inputRequired, inputInstructions, scriptName, inputExample, scriptType, scriptRuntimeTimeoutSeconds, osTypes, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'scriptId' is set
      if (scriptId === undefined || scriptId === null) {
        throw new Error("Missing the required parameter 'scriptId' when calling webApiRemoteScriptsEditscriptIdPut");
      }

      // verify the required parameter 'inputRequired' is set
      if (inputRequired === undefined || inputRequired === null) {
        throw new Error("Missing the required parameter 'inputRequired' when calling webApiRemoteScriptsEditscriptIdPut");
      }

      // verify the required parameter 'inputInstructions' is set
      if (inputInstructions === undefined || inputInstructions === null) {
        throw new Error("Missing the required parameter 'inputInstructions' when calling webApiRemoteScriptsEditscriptIdPut");
      }

      // verify the required parameter 'scriptName' is set
      if (scriptName === undefined || scriptName === null) {
        throw new Error("Missing the required parameter 'scriptName' when calling webApiRemoteScriptsEditscriptIdPut");
      }

      // verify the required parameter 'inputExample' is set
      if (inputExample === undefined || inputExample === null) {
        throw new Error("Missing the required parameter 'inputExample' when calling webApiRemoteScriptsEditscriptIdPut");
      }

      // verify the required parameter 'scriptType' is set
      if (scriptType === undefined || scriptType === null) {
        throw new Error("Missing the required parameter 'scriptType' when calling webApiRemoteScriptsEditscriptIdPut");
      }

      // verify the required parameter 'scriptRuntimeTimeoutSeconds' is set
      if (scriptRuntimeTimeoutSeconds === undefined || scriptRuntimeTimeoutSeconds === null) {
        throw new Error("Missing the required parameter 'scriptRuntimeTimeoutSeconds' when calling webApiRemoteScriptsEditscriptIdPut");
      }

      // verify the required parameter 'osTypes' is set
      if (osTypes === undefined || osTypes === null) {
        throw new Error("Missing the required parameter 'osTypes' when calling webApiRemoteScriptsEditscriptIdPut");
      }


      var pathParams = {
        'script_id': scriptId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
        'inputRequired': inputRequired,
        'inputInstructions': inputInstructions,
        'sendActivity': opts['sendActivity'],
        'scriptName': scriptName,
        'scriptContent': opts['scriptContent'],
        'inputExample': inputExample,
        'scriptType': scriptType,
        'packageMaxSize': opts['packageMaxSize'],
        'scriptDescription': opts['scriptDescription'],
        'consoleData': opts['consoleData'],
        'packageRemoved': opts['packageRemoved'],
        'packageEndpointExpirationSeconds': opts['packageEndpointExpirationSeconds'],
        'scriptRuntimeTimeoutSeconds': scriptRuntimeTimeoutSeconds,
        'osTypes': this.apiClient.buildCollectionParam(osTypes, 'multi'),
        'packageEndpointExpiration': opts['packageEndpointExpiration'],
        'isScriptContentEncoded': opts['isScriptContentEncoded'],
        'packageFile': opts['packageFile'],
        'scriptFile': opts['scriptFile']
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['multipart/form-data'];
      var accepts = ['application/json'];
      var returnType = V21RsoSchemasEnrichedScriptSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/remote-scripts/edit/{script_id}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiRemoteScriptsExecutePost operation.
     * @callback module:api/RemoteOpsScriptsApi~webApiRemoteScriptsExecutePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RemoteScriptsExecuteSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Run Remote Script
     * Run a remote script that was uploaded to the SentinelOne Script Library.
     * @param {Object} opts Optional parameters
     * @param {module:model/CloudProxyRemoteScriptsExecuteScriptSchema} opts.body 
     * @param {module:api/RemoteOpsScriptsApi~webApiRemoteScriptsExecutePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RemoteScriptsExecuteSchema200}
     */
    this.webApiRemoteScriptsExecutePost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = RemoteScriptsExecuteSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/remote-scripts/execute', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiRemoteScriptsFetchFilesPost operation.
     * @callback module:api/RemoteOpsScriptsApi~webApiRemoteScriptsFetchFilesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DownloadMultipleScriptsResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Script Results
     * Get scripts results URLs. Accessible via API only
     * @param {Object} opts Optional parameters
     * @param {module:model/FetchScriptsResultsSchema} opts.body 
     * @param {module:api/RemoteOpsScriptsApi~webApiRemoteScriptsFetchFilesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DownloadMultipleScriptsResultsSchema200}
     */
    this.webApiRemoteScriptsFetchFilesPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = DownloadMultipleScriptsResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/remote-scripts/fetch-files', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiRemoteScriptsGet operation.
     * @callback module:api/RemoteOpsScriptsApi~webApiRemoteScriptsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21RsoSchemasEnrichedScriptSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Scripts
     * Get data of the scripts in the SentinelOne Script Library. <br>The SentinelOne Script Library, used for the Remote Script Orchestration feature, gives you a wide range of scripts to collect various forensic artifacts, parse them, and show them in formats that are easy to analyze. Use the scripts to collect information such as hardware and software inventory and configuration, running applications and processes, files and directories, network connections, and more. 
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.countOnly If true, only total number of items will be returned, without any of the actual objects. (default to false)
     * @param {Number} opts.limit Limit number of returned items (1-1000). Example: \"10\". (default to 10)
     * @param {Array.<module:model/String>} opts.osTypes List of the script OS types. Example: \"linux\".
     * @param {Array.<module:model/String>} opts.scriptType List of the script types. Example: \"artifactCollection\".
     * @param {String} opts.cursor Cursor position returned by the last request. Use to iterate over more than 1000 items. Example: \"YWdlbnRfaWQ6NTgwMjkzODE=\". (default to null)
     * @param {module:model/String} opts.sortBy The column to sort the results by. Example: \"id\". (default to null)
     * @param {Boolean} opts.isAvailableForArs Is the script runnable in Advanced Response Scripts
     * @param {String} opts.query Query
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:model/String} opts.sortOrder Sort direction. Example: \"asc\". (default to null)
     * @param {Boolean} opts.skipCount If true, total number of items will not be calculated, which speeds up execution time. (default to null)
     * @param {Number} opts.skip Skip first number of items (0-1000). To iterate over more than 1000 items,  use \"cursor\". Example: \"150\".
     * @param {Array.<String>} opts.ids A list of script IDs. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.groupIds List of group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/RemoteOpsScriptsApi~webApiRemoteScriptsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21RsoSchemasEnrichedScriptSchemaMany200}
     */
    this.webApiRemoteScriptsGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'countOnly': opts['countOnly'],
        'limit': opts['limit'],
        'cursor': opts['cursor'],
        'sortBy': opts['sortBy'],
        'isAvailableForArs': opts['isAvailableForArs'],
        'query': opts['query'],
        'sortOrder': opts['sortOrder'],
        'skipCount': opts['skipCount'],
        'skip': opts['skip'],
      };
      var collectionQueryParams = {
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'scriptType': {
          value: opts['scriptType'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'ids': {
          value: opts['ids'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21RsoSchemasEnrichedScriptSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/remote-scripts', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiRemoteScriptsGuardrailsCheckPost operation.
     * @callback module:api/RemoteOpsScriptsApi~webApiRemoteScriptsGuardrailsCheckPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21RsoSchemasPostGuardrailCheckResponseSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Check whether guardrail applies to an execution
     * Check whether guardrail applies to an execution
     * @param {Object} opts Optional parameters
     * @param {module:model/V21RsoSchemasEncapsulatedPostGuardrailCheckSchema} opts.body 
     * @param {module:api/RemoteOpsScriptsApi~webApiRemoteScriptsGuardrailsCheckPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21RsoSchemasPostGuardrailCheckResponseSchema200}
     */
    this.webApiRemoteScriptsGuardrailsCheckPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = V21RsoSchemasPostGuardrailCheckResponseSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/remote-scripts/guardrails/check', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiRemoteScriptsGuardrailsConfigurationDelete operation.
     * @callback module:api/RemoteOpsScriptsApi~webApiRemoteScriptsGuardrailsConfigurationDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21RsoSchemasOperationResultStatusSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a specific  guardrails configuration
     * Deletes a specific  guardrails configuration
     * @param {Object} opts Optional parameters
     * @param {module:model/V21RsoSchemasEncapsulatedDeleteGuardrailsSchema} opts.body 
     * @param {module:api/RemoteOpsScriptsApi~webApiRemoteScriptsGuardrailsConfigurationDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21RsoSchemasOperationResultStatusSchema200}
     */
    this.webApiRemoteScriptsGuardrailsConfigurationDelete = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = V21RsoSchemasOperationResultStatusSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/remote-scripts/guardrails/configuration', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiRemoteScriptsGuardrailsConfigurationGet operation.
     * @callback module:api/RemoteOpsScriptsApi~webApiRemoteScriptsGuardrailsConfigurationGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21RsoSchemasGetGuardrailsResponseSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a guardrails configuration for a given scope
     * Gets a guardrails configuration for a given scope
     * @param {module:model/String} scopeLevel Scope level. Example: \"account\".
     * @param {String} scopeId Scope ID. Example: \"225494730938493804\".
     * @param {module:api/RemoteOpsScriptsApi~webApiRemoteScriptsGuardrailsConfigurationGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21RsoSchemasGetGuardrailsResponseSchema200}
     */
    this.webApiRemoteScriptsGuardrailsConfigurationGet = function(scopeLevel, scopeId, callback) {
      var postBody = null;

      // verify the required parameter 'scopeLevel' is set
      if (scopeLevel === undefined || scopeLevel === null) {
        throw new Error("Missing the required parameter 'scopeLevel' when calling webApiRemoteScriptsGuardrailsConfigurationGet");
      }

      // verify the required parameter 'scopeId' is set
      if (scopeId === undefined || scopeId === null) {
        throw new Error("Missing the required parameter 'scopeId' when calling webApiRemoteScriptsGuardrailsConfigurationGet");
      }


      var pathParams = {
      };
      var queryParams = {
        'scopeLevel': scopeLevel,
        'scopeId': scopeId,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21RsoSchemasGetGuardrailsResponseSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/remote-scripts/guardrails/configuration', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiRemoteScriptsGuardrailsConfigurationPost operation.
     * @callback module:api/RemoteOpsScriptsApi~webApiRemoteScriptsGuardrailsConfigurationPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21RsoSchemasOperationResultStatusSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates or inserts (if record does not exist) a guardrails configuration
     * Updates or inserts (if record does not exist) a guardrails configuration
     * @param {Object} opts Optional parameters
     * @param {module:model/V21RsoSchemasEncapsulatedPostGuardrailsSchema} opts.body 
     * @param {module:api/RemoteOpsScriptsApi~webApiRemoteScriptsGuardrailsConfigurationPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21RsoSchemasOperationResultStatusSchema200}
     */
    this.webApiRemoteScriptsGuardrailsConfigurationPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = V21RsoSchemasOperationResultStatusSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/remote-scripts/guardrails/configuration', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiRemoteScriptsPendingExecutionsGet operation.
     * @callback module:api/RemoteOpsScriptsApi~webApiRemoteScriptsPendingExecutionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21RsoSchemasPendingExecutionsPaginatedResponseSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get paginated pending executions
     * Get paginated pending executions
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.countOnly If true, only total number of items will be returned, without any of the actual objects. (default to false)
     * @param {Number} opts.limit Limit number of returned items (1-1000). Example: \"10\". (default to 10)
     * @param {String} opts.cursor Cursor position returned by the last request. Use to iterate over more than 1000 items. Example: \"YWdlbnRfaWQ6NTgwMjkzODE=\". (default to null)
     * @param {module:model/String} opts.sortBy The column to sort the results by. Example: \"id\". (default to null)
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:model/String} opts.sortOrder Sort direction. Example: \"asc\". (default to null)
     * @param {Boolean} opts.skipCount If true, total number of items will not be calculated, which speeds up execution time. (default to null)
     * @param {Number} opts.skip Skip first number of items (0-1000). To iterate over more than 1000 items,  use \"cursor\". Example: \"150\".
     * @param {Array.<String>} opts.groupIds List of group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/RemoteOpsScriptsApi~webApiRemoteScriptsPendingExecutionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21RsoSchemasPendingExecutionsPaginatedResponseSchemaMany200}
     */
    this.webApiRemoteScriptsPendingExecutionsGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'countOnly': opts['countOnly'],
        'limit': opts['limit'],
        'cursor': opts['cursor'],
        'sortBy': opts['sortBy'],
        'sortOrder': opts['sortOrder'],
        'skipCount': opts['skipCount'],
        'skip': opts['skip'],
      };
      var collectionQueryParams = {
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21RsoSchemasPendingExecutionsPaginatedResponseSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/remote-scripts/pending-executions', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiRemoteScriptsPendingExecutionspendingExecutionIdPut operation.
     * @callback module:api/RemoteOpsScriptsApi~webApiRemoteScriptsPendingExecutionspendingExecutionIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21RsoSchemasOperationResultStatusSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Approve/decline pending execution
     * Approve/decline pending execution
     * @param {String} pendingExecutionId Pending execution ID. Example: \"225494730938493804\".
     * @param {Object} opts Optional parameters
     * @param {module:model/V21RsoSchemasApproveDeclinePendingExecutionRequestSchema} opts.body 
     * @param {module:api/RemoteOpsScriptsApi~webApiRemoteScriptsPendingExecutionspendingExecutionIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21RsoSchemasOperationResultStatusSchema200}
     */
    this.webApiRemoteScriptsPendingExecutionspendingExecutionIdPut = function(pendingExecutionId, opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];

      // verify the required parameter 'pendingExecutionId' is set
      if (pendingExecutionId === undefined || pendingExecutionId === null) {
        throw new Error("Missing the required parameter 'pendingExecutionId' when calling webApiRemoteScriptsPendingExecutionspendingExecutionIdPut");
      }


      var pathParams = {
        'pending_execution_id': pendingExecutionId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = V21RsoSchemasOperationResultStatusSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/remote-scripts/pending-executions/{pending_execution_id}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiRemoteScriptsPost operation.
     * @callback module:api/RemoteOpsScriptsApi~webApiRemoteScriptsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21RsoSchemasEnrichedScriptSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Upload New Script
     * Upload a new script file. The file and various properties are required. To see the mandatory and optional parameters and their valid values, see the Body Schema or click Run On Console.
     * @param {module:model/String} scriptType Script type. Example: \"artifactCollection\".
     * @param {Array.<module:model/String>} osTypes Os types. Example: \"m,a,c,o,s,,,l,i,n,u,x\".
     * @param {Boolean} inputRequired Is input required
     * @param {String} scriptName Script name
     * @param {module:model/String} scopeLevel Scope level. Example: \"site\".
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.isDuplication True if script/package files should be taken from an existing script specified in original_script_id (default to false)
     * @param {String} opts.inputInstructions Input instructions
     * @param {String} opts.inputExample Input example
     * @param {String} opts.consoleData Console data
     * @param {String} opts.scopeId Scope ID. Example: \"225494730938493804\".
     * @param {Boolean} opts.sendActivity Send activity (default to false)
     * @param {String} opts.scriptContent Content of the script file, applicable only if is_duplication is true (default to null)
     * @param {String} opts.packageMaxSize Package max size (default to 209715200)
     * @param {module:model/String} opts.packageEndpointExpiration Package expiration option on endpoint. Example: \"None\".
     * @param {String} opts.scriptDescription Script description
     * @param {String} opts.originalScriptId ID of script, from which the script/package files will becopied, applicable ony if is_duplication is true. Example: \"225494730938493804\".
     * @param {Number} opts.packageEndpointExpirationSeconds Package expiration time on endpoint
     * @param {Boolean} opts.isScriptContentEncoded True if script content is encoded (default to false)
     * @param {Boolean} opts.packageRemoved True if package should file should not be copied, applicable only if is_duplication is true (default to false)
     * @param {Number} opts.scriptRuntimeTimeoutSeconds Script runtime timeout in seconds (default to 3600)
     * @param {File} opts.file File
     * @param {File} opts.packageFile Package file
     * @param {module:api/RemoteOpsScriptsApi~webApiRemoteScriptsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21RsoSchemasEnrichedScriptSchema200}
     */
    this.webApiRemoteScriptsPost = function(scriptType, osTypes, inputRequired, scriptName, scopeLevel, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'scriptType' is set
      if (scriptType === undefined || scriptType === null) {
        throw new Error("Missing the required parameter 'scriptType' when calling webApiRemoteScriptsPost");
      }

      // verify the required parameter 'osTypes' is set
      if (osTypes === undefined || osTypes === null) {
        throw new Error("Missing the required parameter 'osTypes' when calling webApiRemoteScriptsPost");
      }

      // verify the required parameter 'inputRequired' is set
      if (inputRequired === undefined || inputRequired === null) {
        throw new Error("Missing the required parameter 'inputRequired' when calling webApiRemoteScriptsPost");
      }

      // verify the required parameter 'scriptName' is set
      if (scriptName === undefined || scriptName === null) {
        throw new Error("Missing the required parameter 'scriptName' when calling webApiRemoteScriptsPost");
      }

      // verify the required parameter 'scopeLevel' is set
      if (scopeLevel === undefined || scopeLevel === null) {
        throw new Error("Missing the required parameter 'scopeLevel' when calling webApiRemoteScriptsPost");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
        'isDuplication': opts['isDuplication'],
        'inputInstructions': opts['inputInstructions'],
        'inputExample': opts['inputExample'],
        'scriptType': scriptType,
        'consoleData': opts['consoleData'],
        'osTypes': this.apiClient.buildCollectionParam(osTypes, 'multi'),
        'scopeId': opts['scopeId'],
        'inputRequired': inputRequired,
        'sendActivity': opts['sendActivity'],
        'scriptName': scriptName,
        'scriptContent': opts['scriptContent'],
        'packageMaxSize': opts['packageMaxSize'],
        'scopeLevel': scopeLevel,
        'packageEndpointExpiration': opts['packageEndpointExpiration'],
        'scriptDescription': opts['scriptDescription'],
        'originalScriptId': opts['originalScriptId'],
        'packageEndpointExpirationSeconds': opts['packageEndpointExpirationSeconds'],
        'isScriptContentEncoded': opts['isScriptContentEncoded'],
        'packageRemoved': opts['packageRemoved'],
        'scriptRuntimeTimeoutSeconds': opts['scriptRuntimeTimeoutSeconds'],
        'file': opts['file'],
        'packageFile': opts['packageFile']
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['multipart/form-data'];
      var accepts = ['application/json'];
      var returnType = V21RsoSchemasEnrichedScriptSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/remote-scripts', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiRemoteScriptsScriptContentGet operation.
     * @callback module:api/RemoteOpsScriptsApi~webApiRemoteScriptsScriptContentGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21RsoSchemasScriptContentSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get script content
     * Get Script content by script id
     * @param {Object} opts Optional parameters
     * @param {String} opts.scriptId Script ID. Example: \"225494730938493804\".
     * @param {module:api/RemoteOpsScriptsApi~webApiRemoteScriptsScriptContentGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21RsoSchemasScriptContentSchema200}
     */
    this.webApiRemoteScriptsScriptContentGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'scriptId': opts['scriptId'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21RsoSchemasScriptContentSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/remote-scripts/script-content', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiRemoteScriptsStatusGet operation.
     * @callback module:api/RemoteOpsScriptsApi~webApiRemoteScriptsStatusGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TasksSchemasTaskSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Remote Scripts Tasks Status
     * Get remote scripts tasks using a variety of filters. Accessible via API only<br>parent_task_id or parent_task_id__in query parameter is mandatory
     * @param {Object} opts Optional parameters
     * @param {String} opts.cursor Cursor position returned by the last request. Use to iterate over more than 1000 items. Example: \"YWdlbnRfaWQ6NTgwMjkzODE=\". (default to null)
     * @param {Date} opts.createdAtGt Created at greater than. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.detailedStatusContains Only include tasks with specific detailed status
     * @param {Array.<String>} opts.initiatedByContains Only include tasks from specific initiating user
     * @param {Date} opts.updatedAtLt Updated at lesser than. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.ids List of IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {String} opts.query Query
     * @param {Boolean} opts.countOnly If true, only total number of items will be returned, without any of the actual objects. (default to false)
     * @param {Date} opts.createdAtLt Created at lesser than. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Number} opts.limit Limit number of returned items (1-1000). Example: \"10\". (default to 10)
     * @param {Date} opts.updatedAtGte Updated at greater or equal than. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Number} opts.skip Skip first number of items (0-1000). To iterate over more than 1000 items,  use \"cursor\". Example: \"150\".
     * @param {Boolean} opts.skipCount If true, total number of items will not be calculated, which speeds up execution time. (default to null)
     * @param {module:model/String} opts.sortOrder Sort direction. Example: \"asc\". (default to null)
     * @param {Date} opts.updatedAtGt Updated at greater than. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Date} opts.createdAtLte Created at lesser or equal than. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<module:model/String>} opts.status Status in. Example: \"created\".
     * @param {Array.<String>} opts.computerNameContains Free-text filter by agent computer name (supports multiple values)
     * @param {String} opts.type Type
     * @param {module:model/String} opts.sortBy The column to sort the results by. Example: \"id\". (default to null)
     * @param {Date} opts.updatedAtLte Updated at lesser or equal than. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Boolean} opts.tenant Indicates a tenant scope request
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {String} opts.parentTaskId parent task id to fetch the status by. Example: \"225494730938493804\".
     * @param {Array.<String>} opts.parentTaskIdIn List of IDs to filter by
     * @param {Date} opts.createdAtGte Created at greater or equal than. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.descriptionContains Only include tasks with specific description
     * @param {Array.<String>} opts.uuidContains Free-text filter by agent UUID (supports multiple values)
     * @param {Array.<String>} opts.types Type in
     * @param {module:api/RemoteOpsScriptsApi~webApiRemoteScriptsStatusGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TasksSchemasTaskSchemaMany200}
     */
    this.webApiRemoteScriptsStatusGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'cursor': opts['cursor'],
        'createdAt__gt': opts['createdAtGt'],
        'updatedAt__lt': opts['updatedAtLt'],
        'query': opts['query'],
        'countOnly': opts['countOnly'],
        'createdAt__lt': opts['createdAtLt'],
        'limit': opts['limit'],
        'updatedAt__gte': opts['updatedAtGte'],
        'skip': opts['skip'],
        'skipCount': opts['skipCount'],
        'sortOrder': opts['sortOrder'],
        'updatedAt__gt': opts['updatedAtGt'],
        'createdAt__lte': opts['createdAtLte'],
        'type': opts['type'],
        'sortBy': opts['sortBy'],
        'updatedAt__lte': opts['updatedAtLte'],
        'tenant': opts['tenant'],
        'parentTaskId': opts['parentTaskId'],
        'createdAt__gte': opts['createdAtGte'],
      };
      var collectionQueryParams = {
        'detailedStatus__contains': {
          value: opts['detailedStatusContains'],
          collectionFormat: 'csv'
        },
        'initiatedBy__contains': {
          value: opts['initiatedByContains'],
          collectionFormat: 'csv'
        },
        'ids': {
          value: opts['ids'],
          collectionFormat: 'csv'
        },
        'status': {
          value: opts['status'],
          collectionFormat: 'csv'
        },
        'computerName__contains': {
          value: opts['computerNameContains'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'parentTaskId__in': {
          value: opts['parentTaskIdIn'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'description__contains': {
          value: opts['descriptionContains'],
          collectionFormat: 'csv'
        },
        'uuid__contains': {
          value: opts['uuidContains'],
          collectionFormat: 'csv'
        },
        'types': {
          value: opts['types'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = TasksSchemasTaskSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/remote-scripts/status', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiRemoteScriptsscriptIdPut operation.
     * @callback module:api/RemoteOpsScriptsApi~webApiRemoteScriptsscriptIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21RsoSchemasEnrichedScriptSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a Script
     * Change the properties of a given script: runtime timeout, name, and whether input is required (if true, input example and instructions are requried). <br>This command requires the script ID, which you can get from the Get Scripts API.
     * @param {String} scriptId Script ID. Example: \"225494730938493804\".
     * @param {Object} opts Optional parameters
     * @param {module:model/V21RsoSchemasUpdateScript} opts.body 
     * @param {module:api/RemoteOpsScriptsApi~webApiRemoteScriptsscriptIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21RsoSchemasEnrichedScriptSchema200}
     */
    this.webApiRemoteScriptsscriptIdPut = function(scriptId, opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];

      // verify the required parameter 'scriptId' is set
      if (scriptId === undefined || scriptId === null) {
        throw new Error("Missing the required parameter 'scriptId' when calling webApiRemoteScriptsscriptIdPut");
      }


      var pathParams = {
        'script_id': scriptId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = V21RsoSchemasEnrichedScriptSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/remote-scripts/{script_id}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
