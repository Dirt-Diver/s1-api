/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AffectedResultsSchema200', 'model/NoDataSchema400', 'model/NoDataSchema401', 'model/NoDataSchema403', 'model/NoDataSchema404', 'model/PackagesSchemasDeletePackagesSchema', 'model/PackagesSchemasLatestPackagesSchema200', 'model/PackagesSchemasPutPackageSchema', 'model/PackagesSchemasVersionUploadListSchemaMany200', 'model/PackagesSchemasVersionUploadSchema200', 'model/PackagesSchemasVersionUploadSchemaMany200', 'model/SuccessResponseSchema200'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/AffectedResultsSchema200'), require('../model/NoDataSchema400'), require('../model/NoDataSchema401'), require('../model/NoDataSchema403'), require('../model/NoDataSchema404'), require('../model/PackagesSchemasDeletePackagesSchema'), require('../model/PackagesSchemasLatestPackagesSchema200'), require('../model/PackagesSchemasPutPackageSchema'), require('../model/PackagesSchemasVersionUploadListSchemaMany200'), require('../model/PackagesSchemasVersionUploadSchema200'), require('../model/PackagesSchemasVersionUploadSchemaMany200'), require('../model/SuccessResponseSchema200'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.UpdatesApi = factory(root.S1MgmtApi.ApiClient, root.S1MgmtApi.AffectedResultsSchema200, root.S1MgmtApi.NoDataSchema400, root.S1MgmtApi.NoDataSchema401, root.S1MgmtApi.NoDataSchema403, root.S1MgmtApi.NoDataSchema404, root.S1MgmtApi.PackagesSchemasDeletePackagesSchema, root.S1MgmtApi.PackagesSchemasLatestPackagesSchema200, root.S1MgmtApi.PackagesSchemasPutPackageSchema, root.S1MgmtApi.PackagesSchemasVersionUploadListSchemaMany200, root.S1MgmtApi.PackagesSchemasVersionUploadSchema200, root.S1MgmtApi.PackagesSchemasVersionUploadSchemaMany200, root.S1MgmtApi.SuccessResponseSchema200);
  }
}(this, function(ApiClient, AffectedResultsSchema200, NoDataSchema400, NoDataSchema401, NoDataSchema403, NoDataSchema404, PackagesSchemasDeletePackagesSchema, PackagesSchemasLatestPackagesSchema200, PackagesSchemasPutPackageSchema, PackagesSchemasVersionUploadListSchemaMany200, PackagesSchemasVersionUploadSchema200, PackagesSchemasVersionUploadSchemaMany200, SuccessResponseSchema200) {
  'use strict';

  /**
   * Updates service.
   * @module api/UpdatesApi
   * @version 2.1
   */

  /**
   * Constructs a new UpdatesApi. 
   * @alias module:api/UpdatesApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the webApiUpdateAgentDownloadpackageIdGet operation.
     * @callback module:api/UpdatesApi~webApiUpdateAgentDownloadpackageIdGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Download Agent Package
     * [DEPRECATED] Download an agent package by package ID.Rate limit: 2 call per minute for each different user token
     * @param {String} packageId Package ID. Example: \"225494730938493804\".
     * @param {module:api/UpdatesApi~webApiUpdateAgentDownloadpackageIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiUpdateAgentDownloadpackageIdGet = function(packageId, callback) {
      var postBody = null;

      // verify the required parameter 'packageId' is set
      if (packageId === undefined || packageId === null) {
        throw new Error("Missing the required parameter 'packageId' when calling webApiUpdateAgentDownloadpackageIdGet");
      }


      var pathParams = {
        'package_id': packageId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/update/agent/download/{package_id}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiUpdateAgentDownloadsiteIdpackageIdGet operation.
     * @callback module:api/UpdatesApi~webApiUpdateAgentDownloadsiteIdpackageIdGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Download Package
     * Download a package by site_id (\"sites\") and filename. <br>Rate limit: 2 call per minute for each user token. <br>Use this command to manually deploy Agent updates that cannot be deployed with the update-software command (see Agent Actions > Update Software) or through the Console.
     * @param {String} packageId Package ID. Example: \"225494730938493804\".
     * @param {String} siteId Site ID. Example: \"225494730938493804\".
     * @param {module:api/UpdatesApi~webApiUpdateAgentDownloadsiteIdpackageIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiUpdateAgentDownloadsiteIdpackageIdGet = function(packageId, siteId, callback) {
      var postBody = null;

      // verify the required parameter 'packageId' is set
      if (packageId === undefined || packageId === null) {
        throw new Error("Missing the required parameter 'packageId' when calling webApiUpdateAgentDownloadsiteIdpackageIdGet");
      }

      // verify the required parameter 'siteId' is set
      if (siteId === undefined || siteId === null) {
        throw new Error("Missing the required parameter 'siteId' when calling webApiUpdateAgentDownloadsiteIdpackageIdGet");
      }


      var pathParams = {
        'package_id': packageId,
        'site_id': siteId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/update/agent/download/{site_id}/{package_id}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiUpdateAgentLatestPackagesGet operation.
     * @callback module:api/UpdatesApi~webApiUpdateAgentLatestPackagesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PackagesSchemasLatestPackagesSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Latest Packages by OS
     * [DEPRECATED] Use \"Latest packages\" API call instead (\"GET /web/api/v2.1/update/agent/packages\").
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:model/String} opts.packageType Package type. Example: \"Agent\".
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/UpdatesApi~webApiUpdateAgentLatestPackagesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PackagesSchemasLatestPackagesSchema200}
     */
    this.webApiUpdateAgentLatestPackagesGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'packageType': opts['packageType'],
      };
      var collectionQueryParams = {
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = PackagesSchemasLatestPackagesSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/update/agent/latest-packages', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiUpdateAgentPackagesDelete operation.
     * @callback module:api/UpdatesApi~webApiUpdateAgentPackagesDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Packages
     * Delete Agent packages from your Management. Use the IDs from Get Latest Packages.
     * @param {Object} opts Optional parameters
     * @param {module:model/PackagesSchemasDeletePackagesSchema} opts.body 
     * @param {module:api/UpdatesApi~webApiUpdateAgentPackagesDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiUpdateAgentPackagesDelete = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/update/agent/packages', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiUpdateAgentPackagesGet operation.
     * @callback module:api/UpdatesApi~webApiUpdateAgentPackagesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PackagesSchemasVersionUploadListSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Latest Packages
     * Get the Agent packages that are uploaded to your Management. <br>The response shows the data of each package, including the IDs, which you can use in other commands.
     * @param {Object} opts Optional parameters
     * @param {String} opts.cursor Cursor position returned by the last request. Use to iterate over more than 1000 items. Example: \"YWdlbnRfaWQ6NTgwMjkzODE=\". (default to null)
     * @param {Array.<String>} opts.fileNameContains Free-text filter by file name
     * @param {Array.<String>} opts.majorVersions Package major versions
     * @param {module:model/String} opts.platformType Platform type. Example: \"sdk\".
     * @param {Array.<String>} opts.sha1Contains Free-text filter by SHA1 hash
     * @param {Array.<String>} opts.ids Package ID list. Example: \"225494730938493804,225494730938493915\".
     * @param {String} opts.query A free-text search term, will match applicable attributes
     * @param {Boolean} opts.countOnly If true, only total number of items will be returned, without any of the actual objects. (default to false)
     * @param {Number} opts.limit Limit number of returned items (1-1000). Example: \"10\". (default to 10)
     * @param {Array.<module:model/String>} opts.osTypes Os type in. Example: \"sdk\".
     * @param {String} opts.rangerVersion Ranger version. Example: \"2.5.1.1320\".
     * @param {Number} opts.skip Skip first number of items (0-1000). To iterate over more than 1000 items,  use \"cursor\". Example: \"150\".
     * @param {Array.<String>} opts.rangerVersionContains Free-text filter by ranger version
     * @param {Boolean} opts.skipCount If true, total number of items will not be calculated, which speeds up execution time. (default to null)
     * @param {module:model/String} opts.sortOrder Sort direction. Example: \"asc\". (default to null)
     * @param {module:model/String} opts.fileExtension File extension. Example: \".msi\".
     * @param {Array.<String>} opts.versionStrContains Free-text filter by version string
     * @param {Array.<String>} opts.siteNameContains Free-text filter by site name
     * @param {String} opts.sha1 Package hash. Example: \"2fd4e1c67a2d28fced849ee1bb76e7391b93eb12\".
     * @param {Array.<module:model/String>} opts.status Status in. Example: \"ga\".
     * @param {Array.<String>} opts.minorVersions Package minor versions
     * @param {Array.<String>} opts.fileSizeContains Free-text filter by file size
     * @param {String} opts.version Agent version. Example: \"2.5.1.1320\".
     * @param {Array.<module:model/String>} opts.platformTypes Platform type in. Example: \"sdk\".
     * @param {Array.<String>} opts.accountNameContains Free-text filter by account name
     * @param {module:model/String} opts.sortBy The column to sort the results by. Example: \"id\". (default to null)
     * @param {Array.<module:model/String>} opts.packageTypes Package type in. Example: \"Agent\".
     * @param {module:model/String} opts.packageType Package type. Example: \"Agent\".
     * @param {String} opts.minorVersion Package minor version
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {String} opts.osRevision Agent os revision
     * @param {Array.<module:model/String>} opts.fileExtensions File extension. Example: \".msi\".
     * @param {Array.<module:model/String>} opts.osArches Package OS architecture (32/64 bit), applicable to Windows packages only. Example: \"32 bit\".
     * @param {module:api/UpdatesApi~webApiUpdateAgentPackagesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PackagesSchemasVersionUploadListSchemaMany200}
     */
    this.webApiUpdateAgentPackagesGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'cursor': opts['cursor'],
        'platformType': opts['platformType'],
        'query': opts['query'],
        'countOnly': opts['countOnly'],
        'limit': opts['limit'],
        'rangerVersion': opts['rangerVersion'],
        'skip': opts['skip'],
        'skipCount': opts['skipCount'],
        'sortOrder': opts['sortOrder'],
        'fileExtension': opts['fileExtension'],
        'sha1': opts['sha1'],
        'version': opts['version'],
        'sortBy': opts['sortBy'],
        'packageType': opts['packageType'],
        'minorVersion': opts['minorVersion'],
        'osRevision': opts['osRevision'],
      };
      var collectionQueryParams = {
        'fileName__contains': {
          value: opts['fileNameContains'],
          collectionFormat: 'csv'
        },
        'majorVersions': {
          value: opts['majorVersions'],
          collectionFormat: 'csv'
        },
        'sha1__contains': {
          value: opts['sha1Contains'],
          collectionFormat: 'csv'
        },
        'ids': {
          value: opts['ids'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'rangerVersion__contains': {
          value: opts['rangerVersionContains'],
          collectionFormat: 'csv'
        },
        'versionStr__contains': {
          value: opts['versionStrContains'],
          collectionFormat: 'csv'
        },
        'siteName__contains': {
          value: opts['siteNameContains'],
          collectionFormat: 'csv'
        },
        'status': {
          value: opts['status'],
          collectionFormat: 'csv'
        },
        'minorVersions': {
          value: opts['minorVersions'],
          collectionFormat: 'csv'
        },
        'fileSize__contains': {
          value: opts['fileSizeContains'],
          collectionFormat: 'csv'
        },
        'platformTypes': {
          value: opts['platformTypes'],
          collectionFormat: 'csv'
        },
        'accountName__contains': {
          value: opts['accountNameContains'],
          collectionFormat: 'csv'
        },
        'packageTypes': {
          value: opts['packageTypes'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'fileExtensions': {
          value: opts['fileExtensions'],
          collectionFormat: 'csv'
        },
        'osArches': {
          value: opts['osArches'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = PackagesSchemasVersionUploadListSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/update/agent/packages', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiUpdateAgentPackagespackageIdPut operation.
     * @callback module:api/UpdatesApi~webApiUpdateAgentPackagespackageIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PackagesSchemasVersionUploadSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update package
     * Update the metadata for an existing package.
     * @param {String} packageId Package ID. Example: \"225494730938493804\".
     * @param {Object} opts Optional parameters
     * @param {module:model/PackagesSchemasPutPackageSchema} opts.body 
     * @param {module:api/UpdatesApi~webApiUpdateAgentPackagespackageIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PackagesSchemasVersionUploadSchema200}
     */
    this.webApiUpdateAgentPackagespackageIdPut = function(packageId, opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];

      // verify the required parameter 'packageId' is set
      if (packageId === undefined || packageId === null) {
        throw new Error("Missing the required parameter 'packageId' when calling webApiUpdateAgentPackagespackageIdPut");
      }


      var pathParams = {
        'package_id': packageId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = PackagesSchemasVersionUploadSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/update/agent/packages/{package_id}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiUploadAgentSoftwarePost operation.
     * @callback module:api/UpdatesApi~webApiUploadAgentSoftwarePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PackagesSchemasVersionUploadSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Upload Agent Package
     * If you have an On-Prem Management or you are a participant in the Beta program, you can use this command to upload an Agent package to the Management. Then you can deploy the Agent to update endpoints.
     * @param {module:model/String} status Status. Example: \"ga\".
     * @param {File} file File
     * @param {Object} opts Optional parameters
     * @param {String} opts.minorVersion Package minor version. Example: \"SP1\".
     * @param {String} opts.version Version. Example: \"2.5.1.1320\". (default to null)
     * @param {Array.<String>} opts.accountIds List of accounts to make the package available in. Applicable only if scopeLevel is set to \"account\". Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.siteIds List of sites to make the package available in. Applicable only if scopeLevel is set to \"site\". Example: \"225494730938493804,225494730938493915\".
     * @param {module:model/String} opts.osType Platform type. Example: \"sdk\". (default to null)
     * @param {module:model/String} opts.platformType Platform type. Example: \"sdk\". (default to null)
     * @param {module:model/String} opts.scopeLevel Package scope. If \"global\", it will be available in all sites. Otherwise, it will only be available to the sites/accounts specified in\"siteIds\"/\"accountIds\" attribute. Example: \"site\". (default to global)
     * @param {module:api/UpdatesApi~webApiUploadAgentSoftwarePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PackagesSchemasVersionUploadSchemaMany200}
     */
    this.webApiUploadAgentSoftwarePost = function(status, file, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'status' is set
      if (status === undefined || status === null) {
        throw new Error("Missing the required parameter 'status' when calling webApiUploadAgentSoftwarePost");
      }

      // verify the required parameter 'file' is set
      if (file === undefined || file === null) {
        throw new Error("Missing the required parameter 'file' when calling webApiUploadAgentSoftwarePost");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
        'minorVersion': opts['minorVersion'],
        'version': opts['version'],
        'accountIds': this.apiClient.buildCollectionParam(opts['accountIds'], 'multi'),
        'siteIds': this.apiClient.buildCollectionParam(opts['siteIds'], 'multi'),
        'osType': opts['osType'],
        'platformType': opts['platformType'],
        'status': status,
        'scopeLevel': opts['scopeLevel'],
        'file': file
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['multipart/form-data'];
      var accepts = ['application/json'];
      var returnType = PackagesSchemasVersionUploadSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/upload/agent/software', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiUploadSoftwareDeployPost operation.
     * @callback module:api/UpdatesApi~webApiUploadSoftwareDeployPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SuccessResponseSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deploy System Package
     * If you have an On-Prem Management or you are a participant in the Beta program, you can upload a Management package and then use this command to deploy the new Management. You must first upload the package (see Upload System Package).
     * @param {module:api/UpdatesApi~webApiUploadSoftwareDeployPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SuccessResponseSchema200}
     */
    this.webApiUploadSoftwareDeployPost = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = SuccessResponseSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/upload/software/deploy', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiUploadSoftwarePost operation.
     * @callback module:api/UpdatesApi~webApiUploadSoftwarePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SuccessResponseSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Upload System Package
     * If you have an On-Prem Management or otherwise require a manual package upload, use this command to upload an Agent package or a Management package. Then you can deploy the update (see Deploy System Package).
     * @param {File} file File
     * @param {module:api/UpdatesApi~webApiUploadSoftwarePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SuccessResponseSchema200}
     */
    this.webApiUploadSoftwarePost = function(file, callback) {
      var postBody = null;

      // verify the required parameter 'file' is set
      if (file === undefined || file === null) {
        throw new Error("Missing the required parameter 'file' when calling webApiUploadSoftwarePost");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
        'file': file
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['multipart/form-data'];
      var accepts = ['application/json'];
      var returnType = SuccessResponseSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/upload/software', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
