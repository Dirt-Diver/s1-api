/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AffectedResultsSchema200', 'model/ExclusionsSchemasDeleteExclusionSchema', 'model/ExclusionsSchemasDeleteRestrictionSchema', 'model/ExclusionsSchemasExclusionSchemaGetMany200', 'model/ExclusionsSchemasExclusionSchemaMany200', 'model/ExclusionsSchemasImportExclusionsOrBlockListResponseSchema200', 'model/ExclusionsSchemasPostExclusionSchema', 'model/ExclusionsSchemasPostRestrictionSchema', 'model/ExclusionsSchemasPutExclusionSchema', 'model/ExclusionsSchemasPutRestrictionSchema', 'model/ExclusionsSchemasRestrictionSchemaGetMany200', 'model/ExclusionsSchemasRestrictionSchemaMany200', 'model/ExclusionsSchemasValidateExclusionRestrictionOutputSchema200', 'model/ExclusionsSchemasValidateExclusionSchema', 'model/ExclusionsSchemasValidateRestrictionSchema', 'model/NoDataSchema400', 'model/NoDataSchema401', 'model/NoDataSchema404'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/AffectedResultsSchema200'), require('../model/ExclusionsSchemasDeleteExclusionSchema'), require('../model/ExclusionsSchemasDeleteRestrictionSchema'), require('../model/ExclusionsSchemasExclusionSchemaGetMany200'), require('../model/ExclusionsSchemasExclusionSchemaMany200'), require('../model/ExclusionsSchemasImportExclusionsOrBlockListResponseSchema200'), require('../model/ExclusionsSchemasPostExclusionSchema'), require('../model/ExclusionsSchemasPostRestrictionSchema'), require('../model/ExclusionsSchemasPutExclusionSchema'), require('../model/ExclusionsSchemasPutRestrictionSchema'), require('../model/ExclusionsSchemasRestrictionSchemaGetMany200'), require('../model/ExclusionsSchemasRestrictionSchemaMany200'), require('../model/ExclusionsSchemasValidateExclusionRestrictionOutputSchema200'), require('../model/ExclusionsSchemasValidateExclusionSchema'), require('../model/ExclusionsSchemasValidateRestrictionSchema'), require('../model/NoDataSchema400'), require('../model/NoDataSchema401'), require('../model/NoDataSchema404'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.ExclusionsAndBlocklistApi = factory(root.S1MgmtApi.ApiClient, root.S1MgmtApi.AffectedResultsSchema200, root.S1MgmtApi.ExclusionsSchemasDeleteExclusionSchema, root.S1MgmtApi.ExclusionsSchemasDeleteRestrictionSchema, root.S1MgmtApi.ExclusionsSchemasExclusionSchemaGetMany200, root.S1MgmtApi.ExclusionsSchemasExclusionSchemaMany200, root.S1MgmtApi.ExclusionsSchemasImportExclusionsOrBlockListResponseSchema200, root.S1MgmtApi.ExclusionsSchemasPostExclusionSchema, root.S1MgmtApi.ExclusionsSchemasPostRestrictionSchema, root.S1MgmtApi.ExclusionsSchemasPutExclusionSchema, root.S1MgmtApi.ExclusionsSchemasPutRestrictionSchema, root.S1MgmtApi.ExclusionsSchemasRestrictionSchemaGetMany200, root.S1MgmtApi.ExclusionsSchemasRestrictionSchemaMany200, root.S1MgmtApi.ExclusionsSchemasValidateExclusionRestrictionOutputSchema200, root.S1MgmtApi.ExclusionsSchemasValidateExclusionSchema, root.S1MgmtApi.ExclusionsSchemasValidateRestrictionSchema, root.S1MgmtApi.NoDataSchema400, root.S1MgmtApi.NoDataSchema401, root.S1MgmtApi.NoDataSchema404);
  }
}(this, function(ApiClient, AffectedResultsSchema200, ExclusionsSchemasDeleteExclusionSchema, ExclusionsSchemasDeleteRestrictionSchema, ExclusionsSchemasExclusionSchemaGetMany200, ExclusionsSchemasExclusionSchemaMany200, ExclusionsSchemasImportExclusionsOrBlockListResponseSchema200, ExclusionsSchemasPostExclusionSchema, ExclusionsSchemasPostRestrictionSchema, ExclusionsSchemasPutExclusionSchema, ExclusionsSchemasPutRestrictionSchema, ExclusionsSchemasRestrictionSchemaGetMany200, ExclusionsSchemasRestrictionSchemaMany200, ExclusionsSchemasValidateExclusionRestrictionOutputSchema200, ExclusionsSchemasValidateExclusionSchema, ExclusionsSchemasValidateRestrictionSchema, NoDataSchema400, NoDataSchema401, NoDataSchema404) {
  'use strict';

  /**
   * ExclusionsAndBlocklist service.
   * @module api/ExclusionsAndBlocklistApi
   * @version 2.1
   */

  /**
   * Constructs a new ExclusionsAndBlocklistApi. 
   * @alias module:api/ExclusionsAndBlocklistApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the webApiExclusionsDelete operation.
     * @callback module:api/ExclusionsAndBlocklistApi~webApiExclusionsDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Exclusions
     * Every Exclusion opens a possible security hole. If you decide that an Exclusion (or multiple Exclusions) is not required, use this command to delete it. To get the ID of the Exclusion to delete, run the \"exclusions\" command.
     * @param {Object} opts Optional parameters
     * @param {module:model/ExclusionsSchemasDeleteExclusionSchema} opts.body 
     * @param {module:api/ExclusionsAndBlocklistApi~webApiExclusionsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiExclusionsDelete = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/exclusions', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiExclusionsGet operation.
     * @callback module:api/ExclusionsAndBlocklistApi~webApiExclusionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExclusionsSchemasExclusionSchemaGetMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Exclusions
     * Get a list of all the Exclusions that match the filter. <br>Note: To filter the results for a scope: <br>* Global - Make sure \"tenant\" is \"true\" and no other scope ID is given.<br>* Account - Make sure \"tenant\" is \"false\" and at least one Account ID is given.<br>* Site - Make sure \"tenant\" is \"false\" and at least one Site ID is given.
     * @param {Object} opts Optional parameters
     * @param {String} opts.cursor Cursor position returned by the last request. Use to iterate over more than 1000 items. Example: \"YWdlbnRfaWQ6NTgwMjkzODE=\". (default to null)
     * @param {Date} opts.createdAtGt Created after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Boolean} opts.unified Unified
     * @param {Boolean} opts.includeChildren Return filters from children scope levels (Default: false)
     * @param {Date} opts.updatedAtLt Updated before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.ids List of IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {String} opts.query A free-text search term, will match applicable attributes
     * @param {Boolean} opts.inAppInventory Found or Not found - indicates if this exclusion is related to an application found in the scope's Application Inventory.
     * @param {Boolean} opts.countOnly If true, only total number of items will be returned, without any of the actual objects. (default to false)
     * @param {Date} opts.createdAtLt Created before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.valueContains Free-text filter by value
     * @param {Number} opts.limit Limit number of returned items (1-1000). Example: \"10\". (default to 10)
     * @param {Date} opts.updatedAtGte Updated after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<module:model/String>} opts.source List sources to filter by. Example: \"user\".
     * @param {Array.<module:model/String>} opts.osTypes List of Os types to filter by. Example: \"windows\".
     * @param {Number} opts.skip Skip first number of items (0-1000). To iterate over more than 1000 items,  use \"cursor\". Example: \"150\".
     * @param {Array.<module:model/String>} opts.recommendations List of recommendations to filter by. Example: \"Not recommended\".
     * @param {Boolean} opts.skipCount If true, total number of items will not be calculated, which speeds up execution time. (default to null)
     * @param {module:model/String} opts.sortOrder Sort direction. Example: \"asc\". (default to null)
     * @param {Date} opts.updatedAtGt Updated after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<module:model/String>} opts.pathExclusionTypes List of excluded paths in an exclusion (Path exclusions only). Example: \"file\".
     * @param {Boolean} opts.imported indication whether the exclusion was imported by a bulk operation or not
     * @param {String} opts.value Value
     * @param {Date} opts.createdAtLte Created before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Boolean} opts.includeParents Return filters from parent scope levels (Default: false)
     * @param {Array.<String>} opts.userContains Free-text filter by user name
     * @param {module:model/String} opts.type Type. Example: \"path\".
     * @param {module:model/String} opts.sortBy The column to sort the results by. Example: \"id\". (default to null)
     * @param {Boolean} opts.tenant Indicates a tenant scope request
     * @param {String} opts.createdAtBetween Date range for creation time (format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Date} opts.updatedAtLte Updated before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.updatedAtBetween Date range for update time (format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Date} opts.createdAtGte Created after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.descriptionContains Free-text filter by description
     * @param {Array.<module:model/String>} opts.modes List of modes to filter by (Path exclusions only). Example: \"suppress\".
     * @param {Array.<String>} opts.userIds List of user ids to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<module:model/String>} opts.types Type in. Example: \"path\".
     * @param {Array.<String>} opts.applicationNameContains Free-text filter by application name
     * @param {module:model/String} opts.modeType Agent interaction \\ Suppression. Example: \"all\".
     * @param {module:api/ExclusionsAndBlocklistApi~webApiExclusionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExclusionsSchemasExclusionSchemaGetMany200}
     */
    this.webApiExclusionsGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'cursor': opts['cursor'],
        'createdAt__gt': opts['createdAtGt'],
        'unified': opts['unified'],
        'includeChildren': opts['includeChildren'],
        'updatedAt__lt': opts['updatedAtLt'],
        'query': opts['query'],
        'inAppInventory': opts['inAppInventory'],
        'countOnly': opts['countOnly'],
        'createdAt__lt': opts['createdAtLt'],
        'limit': opts['limit'],
        'updatedAt__gte': opts['updatedAtGte'],
        'skip': opts['skip'],
        'skipCount': opts['skipCount'],
        'sortOrder': opts['sortOrder'],
        'updatedAt__gt': opts['updatedAtGt'],
        'imported': opts['imported'],
        'value': opts['value'],
        'createdAt__lte': opts['createdAtLte'],
        'includeParents': opts['includeParents'],
        'type': opts['type'],
        'sortBy': opts['sortBy'],
        'tenant': opts['tenant'],
        'createdAt__between': opts['createdAtBetween'],
        'updatedAt__lte': opts['updatedAtLte'],
        'updatedAt__between': opts['updatedAtBetween'],
        'createdAt__gte': opts['createdAtGte'],
        'modeType': opts['modeType'],
      };
      var collectionQueryParams = {
        'ids': {
          value: opts['ids'],
          collectionFormat: 'csv'
        },
        'value__contains': {
          value: opts['valueContains'],
          collectionFormat: 'csv'
        },
        'source': {
          value: opts['source'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'recommendations': {
          value: opts['recommendations'],
          collectionFormat: 'csv'
        },
        'pathExclusionTypes': {
          value: opts['pathExclusionTypes'],
          collectionFormat: 'csv'
        },
        'user__contains': {
          value: opts['userContains'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'description__contains': {
          value: opts['descriptionContains'],
          collectionFormat: 'csv'
        },
        'modes': {
          value: opts['modes'],
          collectionFormat: 'csv'
        },
        'userIds': {
          value: opts['userIds'],
          collectionFormat: 'csv'
        },
        'types': {
          value: opts['types'],
          collectionFormat: 'csv'
        },
        'applicationName__contains': {
          value: opts['applicationNameContains'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = ExclusionsSchemasExclusionSchemaGetMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/exclusions', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiExclusionsImportPost operation.
     * @callback module:api/ExclusionsAndBlocklistApi~webApiExclusionsImportPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExclusionsSchemasImportExclusionsOrBlockListResponseSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Import Exclusions
     * Upload a CSV file that contains exclusion entries to import to a scope in your Management
     * @param {File} file The input CSV file
     * @param {Object} opts Optional parameters
     * @param {String} opts.filter The details of the scope where the entities will be imported, for example:  For Global - '{\"tenant\":true}' For an Account - '{\"accountIds\": [\"225494730938493804\"]}' For a Site  - '{\"siteIds\": [\"225494730938493804\"]}' For a Group - '{\"groupIds\": [\"225494730938493804\"]}'
     * @param {module:api/ExclusionsAndBlocklistApi~webApiExclusionsImportPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExclusionsSchemasImportExclusionsOrBlockListResponseSchema200}
     */
    this.webApiExclusionsImportPost = function(file, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'file' is set
      if (file === undefined || file === null) {
        throw new Error("Missing the required parameter 'file' when calling webApiExclusionsImportPost");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
        'filter': opts['filter'],
        'file': file
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['multipart/form-data'];
      var accepts = ['application/json'];
      var returnType = ExclusionsSchemasImportExclusionsOrBlockListResponseSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/exclusions/import', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiExclusionsPost operation.
     * @callback module:api/ExclusionsAndBlocklistApi~webApiExclusionsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExclusionsSchemasExclusionSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Exclusion
     * Create Exclusions to make your Agents suppress alerts and mitigation for items that you consider to be benign or which you require for interoperability.<br>IMPORTANT! Every Exclusion is a possible security hole. Do not create Exclusions unless you are sure this hash, path, certificate signer, file type, or browser is always benign.<br>Of course, if you can make the Exclusion by its hash or path, that is much more secure than excluding all detections of a specific signer, file type, or browser. We do not recommend the last types for Exclusions on production endpoints. These Exclusions might be helpful in a lab or pentester group. When you create an Exclusion, make sure you set the filter to the smallest possible scope. For example, if you can exclude security for this item on a group, do not enter values for siteIds or accountIds.<br>We recommend that you read \"Not Recommended Exclusions: https://support.sentinelone.com/hc/en-us/articles/360007532894<br> and Best Practices for Exclusions: https://support.sentinelone.com/hc/en-us/articles/360008709014
     * @param {Object} opts Optional parameters
     * @param {module:model/ExclusionsSchemasPostExclusionSchema} opts.body 
     * @param {module:api/ExclusionsAndBlocklistApi~webApiExclusionsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExclusionsSchemasExclusionSchemaMany200}
     */
    this.webApiExclusionsPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ExclusionsSchemasExclusionSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/exclusions', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiExclusionsPut operation.
     * @callback module:api/ExclusionsAndBlocklistApi~webApiExclusionsPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExclusionsSchemasExclusionSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Exclusions
     * Change the properties of an Exclusion through the data fields. To get the original data, run \"exclusions\" with a filter to give the item you want.
     * @param {Object} opts Optional parameters
     * @param {module:model/ExclusionsSchemasPutExclusionSchema} opts.body 
     * @param {module:api/ExclusionsAndBlocklistApi~webApiExclusionsPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExclusionsSchemasExclusionSchemaMany200}
     */
    this.webApiExclusionsPut = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ExclusionsSchemasExclusionSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/exclusions', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiExclusionsReportreportIdGet operation.
     * @callback module:api/ExclusionsAndBlocklistApi~webApiExclusionsReportreportIdGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Exclusion Import Validation Report
     * Get the  Validation Report generated for the import to help you fix entries that did not import successfully
     * @param {String} reportId The ID of the requested Validation Report. Example: \"225494730938493804\".
     * @param {module:api/ExclusionsAndBlocklistApi~webApiExclusionsReportreportIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiExclusionsReportreportIdGet = function(reportId, callback) {
      var postBody = null;

      // verify the required parameter 'reportId' is set
      if (reportId === undefined || reportId === null) {
        throw new Error("Missing the required parameter 'reportId' when calling webApiExclusionsReportreportIdGet");
      }


      var pathParams = {
        'report_id': reportId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/exclusions/report/{report_id}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiExclusionsValidatePost operation.
     * @callback module:api/ExclusionsAndBlocklistApi~webApiExclusionsValidatePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExclusionsSchemasValidateExclusionRestrictionOutputSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Validate Exclusion Item
     * Check if an exclusion is on the list of SentinelOne items that are \"Not Allowed\" or \"Not Recommended\". This API returns one of the following statuses:<br> * Not Recommended: This item is not recommended by SentinelOne because it decreases security. For example, If you accidentally exclude a path that is too broad, malware can enter your environment.<br>* Not Allowed: This exclusion can harm the product and lead to unexpected functionality. From version North Pole SP3 you are prevented from creating Not Allowed exclusions.* None: This item is not on the list of SentinelOne items that are \"Not Allowed\" or \"Not Recommended\".
     * @param {Object} opts Optional parameters
     * @param {module:model/ExclusionsSchemasValidateExclusionSchema} opts.body 
     * @param {module:api/ExclusionsAndBlocklistApi~webApiExclusionsValidatePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExclusionsSchemasValidateExclusionRestrictionOutputSchema200}
     */
    this.webApiExclusionsValidatePost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ExclusionsSchemasValidateExclusionRestrictionOutputSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/exclusions/validate', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiExportExclusionsGet operation.
     * @callback module:api/ExclusionsAndBlocklistApi~webApiExportExclusionsGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Export Exclusions
     * Get a csv of all the items in the Exclusions that match the filter. <br>Note: To see items from the Global Exclusion scope, make sure \"tenant\" is \"true\" and no other scope ID is given.
     * @param {Object} opts Optional parameters
     * @param {Date} opts.createdAtGt Created after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Boolean} opts.unified Unified
     * @param {Boolean} opts.includeChildren Return filters from children scope levels (Default: false)
     * @param {Date} opts.updatedAtLt Updated before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.query A free-text search term, will match applicable attributes
     * @param {Array.<String>} opts.ids List of IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Boolean} opts.inAppInventory Found or Not found - indicates if this exclusion is related to an application found in the scope's Application Inventory.
     * @param {Date} opts.createdAtLt Created before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.valueContains Free-text filter by value
     * @param {Date} opts.updatedAtGte Updated after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<module:model/String>} opts.source List sources to filter by. Example: \"user\".
     * @param {Array.<module:model/String>} opts.osTypes List of Os types to filter by. Example: \"windows\".
     * @param {Array.<module:model/String>} opts.recommendations List of recommendations to filter by. Example: \"Not recommended\".
     * @param {Date} opts.updatedAtGt Updated after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<module:model/String>} opts.pathExclusionTypes List of excluded paths in an exclusion (Path exclusions only). Example: \"file\".
     * @param {Boolean} opts.imported indication whether the exclusion was imported by a bulk operation or not
     * @param {String} opts.value Value
     * @param {Date} opts.createdAtLte Created before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Boolean} opts.includeParents Return filters from parent scope levels (Default: false)
     * @param {Array.<String>} opts.userContains Free-text filter by user name
     * @param {module:model/String} opts.type Type. Example: \"path\".
     * @param {Boolean} opts.tenant Indicates a tenant scope request
     * @param {String} opts.createdAtBetween Date range for creation time (format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Date} opts.updatedAtLte Updated before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.updatedAtBetween Date range for update time (format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Date} opts.createdAtGte Created after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.descriptionContains Free-text filter by description
     * @param {Array.<module:model/String>} opts.modes List of modes to filter by (Path exclusions only). Example: \"suppress\".
     * @param {Array.<String>} opts.userIds List of user ids to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<module:model/String>} opts.types Type in. Example: \"path\".
     * @param {Array.<String>} opts.applicationNameContains Free-text filter by application name
     * @param {module:model/String} opts.modeType Agent interaction \\ Suppression. Example: \"all\".
     * @param {module:api/ExclusionsAndBlocklistApi~webApiExportExclusionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiExportExclusionsGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'createdAt__gt': opts['createdAtGt'],
        'unified': opts['unified'],
        'includeChildren': opts['includeChildren'],
        'updatedAt__lt': opts['updatedAtLt'],
        'query': opts['query'],
        'inAppInventory': opts['inAppInventory'],
        'createdAt__lt': opts['createdAtLt'],
        'updatedAt__gte': opts['updatedAtGte'],
        'updatedAt__gt': opts['updatedAtGt'],
        'imported': opts['imported'],
        'value': opts['value'],
        'createdAt__lte': opts['createdAtLte'],
        'includeParents': opts['includeParents'],
        'type': opts['type'],
        'tenant': opts['tenant'],
        'createdAt__between': opts['createdAtBetween'],
        'updatedAt__lte': opts['updatedAtLte'],
        'updatedAt__between': opts['updatedAtBetween'],
        'createdAt__gte': opts['createdAtGte'],
        'modeType': opts['modeType'],
      };
      var collectionQueryParams = {
        'ids': {
          value: opts['ids'],
          collectionFormat: 'csv'
        },
        'value__contains': {
          value: opts['valueContains'],
          collectionFormat: 'csv'
        },
        'source': {
          value: opts['source'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'recommendations': {
          value: opts['recommendations'],
          collectionFormat: 'csv'
        },
        'pathExclusionTypes': {
          value: opts['pathExclusionTypes'],
          collectionFormat: 'csv'
        },
        'user__contains': {
          value: opts['userContains'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'description__contains': {
          value: opts['descriptionContains'],
          collectionFormat: 'csv'
        },
        'modes': {
          value: opts['modes'],
          collectionFormat: 'csv'
        },
        'userIds': {
          value: opts['userIds'],
          collectionFormat: 'csv'
        },
        'types': {
          value: opts['types'],
          collectionFormat: 'csv'
        },
        'applicationName__contains': {
          value: opts['applicationNameContains'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/export/exclusions', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiExportRestrictionsGet operation.
     * @callback module:api/ExclusionsAndBlocklistApi~webApiExportRestrictionsGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Export Blocklist
     * Get a csv of all the items in the Blocklist that match the filter. <br>Note: To see items from the Global Blocklist, make sure \"tenant\" is \"true\" and no other scope ID is given.
     * @param {Object} opts Optional parameters
     * @param {Date} opts.createdAtGt Created after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Boolean} opts.unified Unified
     * @param {Boolean} opts.includeChildren Return filters from children scope levels (Default: false)
     * @param {Date} opts.updatedAtLt Updated before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.query A free-text search term, will match applicable attributes
     * @param {Array.<String>} opts.ids List of IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Date} opts.createdAtLt Created before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.valueContains Free-text filter by value
     * @param {Date} opts.updatedAtGte Updated after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<module:model/String>} opts.source List sources to filter by. Example: \"user\".
     * @param {Array.<module:model/String>} opts.osTypes List of Os types to filter by. Example: \"windows\".
     * @param {Array.<module:model/String>} opts.recommendations List of recommendations to filter by. Example: \"Not recommended\".
     * @param {Date} opts.updatedAtGt Updated after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Boolean} opts.imported indication whether the hash was imported by a bulk operation or not
     * @param {String} opts.value Value
     * @param {Date} opts.createdAtLte Created before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Boolean} opts.includeParents Return filters from parent scope levels (Default: false)
     * @param {Array.<String>} opts.userContains Free-text filter by user name
     * @param {module:model/String} opts.type Type. Example: \"black_hash\". (default to black_hash)
     * @param {Boolean} opts.tenant Indicates a tenant scope request
     * @param {String} opts.createdAtBetween Date range for creation time (format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Date} opts.updatedAtLte Updated before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.updatedAtBetween Date range for update time (format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Date} opts.createdAtGte Created after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.descriptionContains Free-text filter by description
     * @param {Array.<String>} opts.userIds List of user ids to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<module:model/String>} opts.types Type in. Example: \"black_hash\".
     * @param {module:api/ExclusionsAndBlocklistApi~webApiExportRestrictionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiExportRestrictionsGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'createdAt__gt': opts['createdAtGt'],
        'unified': opts['unified'],
        'includeChildren': opts['includeChildren'],
        'updatedAt__lt': opts['updatedAtLt'],
        'query': opts['query'],
        'createdAt__lt': opts['createdAtLt'],
        'updatedAt__gte': opts['updatedAtGte'],
        'updatedAt__gt': opts['updatedAtGt'],
        'imported': opts['imported'],
        'value': opts['value'],
        'createdAt__lte': opts['createdAtLte'],
        'includeParents': opts['includeParents'],
        'type': opts['type'],
        'tenant': opts['tenant'],
        'createdAt__between': opts['createdAtBetween'],
        'updatedAt__lte': opts['updatedAtLte'],
        'updatedAt__between': opts['updatedAtBetween'],
        'createdAt__gte': opts['createdAtGte'],
      };
      var collectionQueryParams = {
        'ids': {
          value: opts['ids'],
          collectionFormat: 'csv'
        },
        'value__contains': {
          value: opts['valueContains'],
          collectionFormat: 'csv'
        },
        'source': {
          value: opts['source'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'recommendations': {
          value: opts['recommendations'],
          collectionFormat: 'csv'
        },
        'user__contains': {
          value: opts['userContains'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'description__contains': {
          value: opts['descriptionContains'],
          collectionFormat: 'csv'
        },
        'userIds': {
          value: opts['userIds'],
          collectionFormat: 'csv'
        },
        'types': {
          value: opts['types'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/export/restrictions', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiRestrictionsDelete operation.
     * @callback module:api/ExclusionsAndBlocklistApi~webApiRestrictionsDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Blocklist Item
     * Agents immediately identify files on the blocklist and block them from executing. Agents identify files on the blocklist before they look at exclusions. If there is a conflict - for example, if a hash is blocklisted from the Cloud Intelligence, and you have an exclusion to run an application that requires this hash - you can delete the hash from the Blocklist. Users with the IT role do not have permissions to run this command.
     * @param {Object} opts Optional parameters
     * @param {module:model/ExclusionsSchemasDeleteRestrictionSchema} opts.body 
     * @param {module:api/ExclusionsAndBlocklistApi~webApiRestrictionsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiRestrictionsDelete = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/restrictions', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiRestrictionsGet operation.
     * @callback module:api/ExclusionsAndBlocklistApi~webApiRestrictionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExclusionsSchemasRestrictionSchemaGetMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Blocklist
     * Get a list of all the items in the Blocklist that match the filter. <br>To filter the results for a scope:<br>* Global - Make sure \"tenant\" is \"true\" and no other scope ID is given.<br>* Account - Make sure \"tenant\" is \"false\" and at least one Account ID is given.<br>* Site - Make sure \"tenant\" is \"false\" and at least one Site ID is given.
     * @param {Object} opts Optional parameters
     * @param {String} opts.cursor Cursor position returned by the last request. Use to iterate over more than 1000 items. Example: \"YWdlbnRfaWQ6NTgwMjkzODE=\". (default to null)
     * @param {Date} opts.createdAtGt Created after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Boolean} opts.unified Unified
     * @param {Boolean} opts.includeChildren Return filters from children scope levels (Default: false)
     * @param {Date} opts.updatedAtLt Updated before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.ids List of IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {String} opts.query A free-text search term, will match applicable attributes
     * @param {Boolean} opts.countOnly If true, only total number of items will be returned, without any of the actual objects. (default to false)
     * @param {Date} opts.createdAtLt Created before this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.valueContains Free-text filter by value
     * @param {Number} opts.limit Limit number of returned items (1-1000). Example: \"10\". (default to 10)
     * @param {Date} opts.updatedAtGte Updated after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<module:model/String>} opts.source List sources to filter by. Example: \"user\".
     * @param {Array.<module:model/String>} opts.osTypes List of Os types to filter by. Example: \"windows\".
     * @param {Number} opts.skip Skip first number of items (0-1000). To iterate over more than 1000 items,  use \"cursor\". Example: \"150\".
     * @param {Array.<module:model/String>} opts.recommendations List of recommendations to filter by. Example: \"Not recommended\".
     * @param {Boolean} opts.skipCount If true, total number of items will not be calculated, which speeds up execution time. (default to null)
     * @param {module:model/String} opts.sortOrder Sort direction. Example: \"asc\". (default to null)
     * @param {Date} opts.updatedAtGt Updated after this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Boolean} opts.imported indication whether the hash was imported by a bulk operation or not
     * @param {String} opts.value Value
     * @param {Date} opts.createdAtLte Created before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Boolean} opts.includeParents Return filters from parent scope levels (Default: false)
     * @param {Array.<String>} opts.userContains Free-text filter by user name
     * @param {module:model/String} opts.type Type. Example: \"black_hash\". (default to black_hash)
     * @param {module:model/String} opts.sortBy The column to sort the results by. Example: \"id\". (default to null)
     * @param {Boolean} opts.tenant Indicates a tenant scope request
     * @param {String} opts.createdAtBetween Date range for creation time (format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Date} opts.updatedAtLte Updated before or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {String} opts.updatedAtBetween Date range for update time (format: <from_timestamp>-<to_timestamp>, inclusive). Example: \"1514978890136-1514978650130\".
     * @param {Date} opts.createdAtGte Created after or at this timestamp. Example: \"2018-02-27T04:49:26.257525Z\".
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.descriptionContains Free-text filter by description
     * @param {Array.<module:model/String>} opts.modes List of modes to filter by (Path exclusions only). Example: \"suppress\".
     * @param {Array.<String>} opts.userIds List of user ids to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<module:model/String>} opts.types Type in. Example: \"black_hash\".
     * @param {module:api/ExclusionsAndBlocklistApi~webApiRestrictionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExclusionsSchemasRestrictionSchemaGetMany200}
     */
    this.webApiRestrictionsGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'cursor': opts['cursor'],
        'createdAt__gt': opts['createdAtGt'],
        'unified': opts['unified'],
        'includeChildren': opts['includeChildren'],
        'updatedAt__lt': opts['updatedAtLt'],
        'query': opts['query'],
        'countOnly': opts['countOnly'],
        'createdAt__lt': opts['createdAtLt'],
        'limit': opts['limit'],
        'updatedAt__gte': opts['updatedAtGte'],
        'skip': opts['skip'],
        'skipCount': opts['skipCount'],
        'sortOrder': opts['sortOrder'],
        'updatedAt__gt': opts['updatedAtGt'],
        'imported': opts['imported'],
        'value': opts['value'],
        'createdAt__lte': opts['createdAtLte'],
        'includeParents': opts['includeParents'],
        'type': opts['type'],
        'sortBy': opts['sortBy'],
        'tenant': opts['tenant'],
        'createdAt__between': opts['createdAtBetween'],
        'updatedAt__lte': opts['updatedAtLte'],
        'updatedAt__between': opts['updatedAtBetween'],
        'createdAt__gte': opts['createdAtGte'],
      };
      var collectionQueryParams = {
        'ids': {
          value: opts['ids'],
          collectionFormat: 'csv'
        },
        'value__contains': {
          value: opts['valueContains'],
          collectionFormat: 'csv'
        },
        'source': {
          value: opts['source'],
          collectionFormat: 'csv'
        },
        'osTypes': {
          value: opts['osTypes'],
          collectionFormat: 'csv'
        },
        'recommendations': {
          value: opts['recommendations'],
          collectionFormat: 'csv'
        },
        'user__contains': {
          value: opts['userContains'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'description__contains': {
          value: opts['descriptionContains'],
          collectionFormat: 'csv'
        },
        'modes': {
          value: opts['modes'],
          collectionFormat: 'csv'
        },
        'userIds': {
          value: opts['userIds'],
          collectionFormat: 'csv'
        },
        'types': {
          value: opts['types'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = ExclusionsSchemasRestrictionSchemaGetMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/restrictions', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiRestrictionsImportPost operation.
     * @callback module:api/ExclusionsAndBlocklistApi~webApiRestrictionsImportPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExclusionsSchemasImportExclusionsOrBlockListResponseSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Import Blocklist Items
     * Upload a CSV file that contains blocklist entries to import to a scope in your Management
     * @param {File} file The input CSV file
     * @param {Object} opts Optional parameters
     * @param {String} opts.filter The details of the scope where the entities will be imported, for example:  For Global - '{\"tenant\":true}' For an Account - '{\"accountIds\": [\"225494730938493804\"]}' For a Site  - '{\"siteIds\": [\"225494730938493804\"]}' For a Group - '{\"groupIds\": [\"225494730938493804\"]}'
     * @param {module:api/ExclusionsAndBlocklistApi~webApiRestrictionsImportPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExclusionsSchemasImportExclusionsOrBlockListResponseSchema200}
     */
    this.webApiRestrictionsImportPost = function(file, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'file' is set
      if (file === undefined || file === null) {
        throw new Error("Missing the required parameter 'file' when calling webApiRestrictionsImportPost");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
        'filter': opts['filter'],
        'file': file
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['multipart/form-data'];
      var accepts = ['application/json'];
      var returnType = ExclusionsSchemasImportExclusionsOrBlockListResponseSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/restrictions/import', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiRestrictionsPost operation.
     * @callback module:api/ExclusionsAndBlocklistApi~webApiRestrictionsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExclusionsSchemasRestrictionSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Blocklist Item
     * Create a blocklist item for a SHA1 hash, for the scopes you enter in the filter fields. You can add the hash to multiple Groups, Sites, Accounts, and to the Global list. <br> IMPORTANT: The type must be \"black_hash\" - any other value will create an Exclusion rather than a Blocklist item.<br>Users with the IT role do not have permissions to run this.
     * @param {Object} opts Optional parameters
     * @param {module:model/ExclusionsSchemasPostRestrictionSchema} opts.body 
     * @param {module:api/ExclusionsAndBlocklistApi~webApiRestrictionsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExclusionsSchemasRestrictionSchemaMany200}
     */
    this.webApiRestrictionsPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ExclusionsSchemasRestrictionSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/restrictions', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiRestrictionsPut operation.
     * @callback module:api/ExclusionsAndBlocklistApi~webApiRestrictionsPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExclusionsSchemasRestrictionSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Blocklist Item
     * Change the properties of a Blocklist item through the data fields. To get the original data, run \"restrictions\" with a filter to give the item you want.
     * @param {Object} opts Optional parameters
     * @param {module:model/ExclusionsSchemasPutRestrictionSchema} opts.body 
     * @param {module:api/ExclusionsAndBlocklistApi~webApiRestrictionsPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExclusionsSchemasRestrictionSchemaMany200}
     */
    this.webApiRestrictionsPut = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ExclusionsSchemasRestrictionSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/restrictions', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiRestrictionsReportreportIdGet operation.
     * @callback module:api/ExclusionsAndBlocklistApi~webApiRestrictionsReportreportIdGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Blocklist Import Validation Report
     * Get the  Validation Report generated for the import to help you fix entries that did not import successfully
     * @param {String} reportId The ID of the requested Validation Report. Example: \"225494730938493804\".
     * @param {module:api/ExclusionsAndBlocklistApi~webApiRestrictionsReportreportIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiRestrictionsReportreportIdGet = function(reportId, callback) {
      var postBody = null;

      // verify the required parameter 'reportId' is set
      if (reportId === undefined || reportId === null) {
        throw new Error("Missing the required parameter 'reportId' when calling webApiRestrictionsReportreportIdGet");
      }


      var pathParams = {
        'report_id': reportId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/restrictions/report/{report_id}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiRestrictionsValidatePost operation.
     * @callback module:api/ExclusionsAndBlocklistApi~webApiRestrictionsValidatePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExclusionsSchemasValidateExclusionRestrictionOutputSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Validate Blocklist Item
     * Check if a hash is on the list of SentinelOne items that are \"Not Allowed\" or \"Not Recommended\". This API returns one of the following statuses:<br> * Not Recommended: This item is not recommended by SentinelOne because it decreases security. <br>* Not Allowed: This item can harm the product and lead to unexpected functionality. From version North Pole SP3 you are prevented from creating Not Allowed blocklist item. * None: This item is not on the list of SentinelOne items that are \"Not Allowed\" or \"Not Recommended\".
     * @param {Object} opts Optional parameters
     * @param {module:model/ExclusionsSchemasValidateRestrictionSchema} opts.body 
     * @param {module:api/ExclusionsAndBlocklistApi~webApiRestrictionsValidatePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExclusionsSchemasValidateExclusionRestrictionOutputSchema200}
     */
    this.webApiRestrictionsValidatePost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ExclusionsSchemasValidateExclusionRestrictionOutputSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/restrictions/validate', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
