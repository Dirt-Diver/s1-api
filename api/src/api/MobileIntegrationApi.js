/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/NoDataSchema400', 'model/NoDataSchema401', 'model/NoDataSchema403', 'model/NoDataSchema404', 'model/V21ActivationSchemasAnonymousActivationListItemMany200', 'model/V21ActivationSchemasAnonymousActivationRequestWrapper', 'model/V21ActivationSchemasAnonymousActivationResponse201', 'model/V21ActivationSchemasCheckBulkUserActivationImportResponse200', 'model/V21ActivationSchemasUserActivationIdsRequestWrapper', 'model/V21ActivationSchemasUserActivationItemMany200', 'model/V21ActivationSchemasUserActivationRequestWrapper', 'model/V21ConnectorTypesSchemasConnectorTypes200', 'model/V21DevicesSchemasDeviceDataSchema200', 'model/V21DevicesSchemasDeviceDataSchemaMany200', 'model/V21IncidentsSchemasAffectedCountResponseSchema200', 'model/V21IncidentsSchemasDeleteIncidentNoteRequestSchema', 'model/V21IncidentsSchemasIncidentNote200', 'model/V21IncidentsSchemasIncidentNoteRequestSchema', 'model/V21IncidentsSchemasListIncidentsSchema200', 'model/V21IncidentsSchemasMitigateIncidentRequestSchema', 'model/V21IncidentsSchemasUpdateAnalystVerdictRequestSchema', 'model/V21IncidentsSchemasUpdateIncidentStatusRequestSchema', 'model/V21ManagementSchemasAppConfigurationSchema200', 'model/V21ManagementSchemasCanCreateConnectionResponseSchema200', 'model/V21ManagementSchemasCreateConnectionRequestSchema', 'model/V21ManagementSchemasCreateInterimConnectionResponseSchema200', 'model/V21ManagementSchemasDeleteConnectionRequestSchema', 'model/V21ManagementSchemasListConnectionsSchema200', 'model/V21ManagementSchemasManagedGroupSchemaMany200', 'model/V21ManagementSchemasManagedGroupsResponseSchema200', 'model/V21ManagementSchemasSyncDevicesRequestSchema', 'model/V21ManagementSchemasTestConnectionRequestSchema', 'model/V21ManagementSchemasUpdateConnectionRequestSchema', 'model/V21ManagementSchemasUpdateGroupsRequestSchema', 'model/V21PolicySchemasPolicy200', 'model/V21PolicySchemasPolicyRequest', 'model/V21ProvisioningSchemasCanProvisionTenant200', 'model/V21ProvisioningSchemasDeletePartnerKeyRequestSchema', 'model/V21ProvisioningSchemasPartnerKeyItem200', 'model/V21ProvisioningSchemasPartnerKeyRequestWrapper', 'model/V21ProvisioningSchemasProvisionWithUserRequestWrapper', 'model/V21ProvisioningSchemasTenantWithUsersResponse200'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/NoDataSchema400'), require('../model/NoDataSchema401'), require('../model/NoDataSchema403'), require('../model/NoDataSchema404'), require('../model/V21ActivationSchemasAnonymousActivationListItemMany200'), require('../model/V21ActivationSchemasAnonymousActivationRequestWrapper'), require('../model/V21ActivationSchemasAnonymousActivationResponse201'), require('../model/V21ActivationSchemasCheckBulkUserActivationImportResponse200'), require('../model/V21ActivationSchemasUserActivationIdsRequestWrapper'), require('../model/V21ActivationSchemasUserActivationItemMany200'), require('../model/V21ActivationSchemasUserActivationRequestWrapper'), require('../model/V21ConnectorTypesSchemasConnectorTypes200'), require('../model/V21DevicesSchemasDeviceDataSchema200'), require('../model/V21DevicesSchemasDeviceDataSchemaMany200'), require('../model/V21IncidentsSchemasAffectedCountResponseSchema200'), require('../model/V21IncidentsSchemasDeleteIncidentNoteRequestSchema'), require('../model/V21IncidentsSchemasIncidentNote200'), require('../model/V21IncidentsSchemasIncidentNoteRequestSchema'), require('../model/V21IncidentsSchemasListIncidentsSchema200'), require('../model/V21IncidentsSchemasMitigateIncidentRequestSchema'), require('../model/V21IncidentsSchemasUpdateAnalystVerdictRequestSchema'), require('../model/V21IncidentsSchemasUpdateIncidentStatusRequestSchema'), require('../model/V21ManagementSchemasAppConfigurationSchema200'), require('../model/V21ManagementSchemasCanCreateConnectionResponseSchema200'), require('../model/V21ManagementSchemasCreateConnectionRequestSchema'), require('../model/V21ManagementSchemasCreateInterimConnectionResponseSchema200'), require('../model/V21ManagementSchemasDeleteConnectionRequestSchema'), require('../model/V21ManagementSchemasListConnectionsSchema200'), require('../model/V21ManagementSchemasManagedGroupSchemaMany200'), require('../model/V21ManagementSchemasManagedGroupsResponseSchema200'), require('../model/V21ManagementSchemasSyncDevicesRequestSchema'), require('../model/V21ManagementSchemasTestConnectionRequestSchema'), require('../model/V21ManagementSchemasUpdateConnectionRequestSchema'), require('../model/V21ManagementSchemasUpdateGroupsRequestSchema'), require('../model/V21PolicySchemasPolicy200'), require('../model/V21PolicySchemasPolicyRequest'), require('../model/V21ProvisioningSchemasCanProvisionTenant200'), require('../model/V21ProvisioningSchemasDeletePartnerKeyRequestSchema'), require('../model/V21ProvisioningSchemasPartnerKeyItem200'), require('../model/V21ProvisioningSchemasPartnerKeyRequestWrapper'), require('../model/V21ProvisioningSchemasProvisionWithUserRequestWrapper'), require('../model/V21ProvisioningSchemasTenantWithUsersResponse200'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.MobileIntegrationApi = factory(root.S1MgmtApi.ApiClient, root.S1MgmtApi.NoDataSchema400, root.S1MgmtApi.NoDataSchema401, root.S1MgmtApi.NoDataSchema403, root.S1MgmtApi.NoDataSchema404, root.S1MgmtApi.V21ActivationSchemasAnonymousActivationListItemMany200, root.S1MgmtApi.V21ActivationSchemasAnonymousActivationRequestWrapper, root.S1MgmtApi.V21ActivationSchemasAnonymousActivationResponse201, root.S1MgmtApi.V21ActivationSchemasCheckBulkUserActivationImportResponse200, root.S1MgmtApi.V21ActivationSchemasUserActivationIdsRequestWrapper, root.S1MgmtApi.V21ActivationSchemasUserActivationItemMany200, root.S1MgmtApi.V21ActivationSchemasUserActivationRequestWrapper, root.S1MgmtApi.V21ConnectorTypesSchemasConnectorTypes200, root.S1MgmtApi.V21DevicesSchemasDeviceDataSchema200, root.S1MgmtApi.V21DevicesSchemasDeviceDataSchemaMany200, root.S1MgmtApi.V21IncidentsSchemasAffectedCountResponseSchema200, root.S1MgmtApi.V21IncidentsSchemasDeleteIncidentNoteRequestSchema, root.S1MgmtApi.V21IncidentsSchemasIncidentNote200, root.S1MgmtApi.V21IncidentsSchemasIncidentNoteRequestSchema, root.S1MgmtApi.V21IncidentsSchemasListIncidentsSchema200, root.S1MgmtApi.V21IncidentsSchemasMitigateIncidentRequestSchema, root.S1MgmtApi.V21IncidentsSchemasUpdateAnalystVerdictRequestSchema, root.S1MgmtApi.V21IncidentsSchemasUpdateIncidentStatusRequestSchema, root.S1MgmtApi.V21ManagementSchemasAppConfigurationSchema200, root.S1MgmtApi.V21ManagementSchemasCanCreateConnectionResponseSchema200, root.S1MgmtApi.V21ManagementSchemasCreateConnectionRequestSchema, root.S1MgmtApi.V21ManagementSchemasCreateInterimConnectionResponseSchema200, root.S1MgmtApi.V21ManagementSchemasDeleteConnectionRequestSchema, root.S1MgmtApi.V21ManagementSchemasListConnectionsSchema200, root.S1MgmtApi.V21ManagementSchemasManagedGroupSchemaMany200, root.S1MgmtApi.V21ManagementSchemasManagedGroupsResponseSchema200, root.S1MgmtApi.V21ManagementSchemasSyncDevicesRequestSchema, root.S1MgmtApi.V21ManagementSchemasTestConnectionRequestSchema, root.S1MgmtApi.V21ManagementSchemasUpdateConnectionRequestSchema, root.S1MgmtApi.V21ManagementSchemasUpdateGroupsRequestSchema, root.S1MgmtApi.V21PolicySchemasPolicy200, root.S1MgmtApi.V21PolicySchemasPolicyRequest, root.S1MgmtApi.V21ProvisioningSchemasCanProvisionTenant200, root.S1MgmtApi.V21ProvisioningSchemasDeletePartnerKeyRequestSchema, root.S1MgmtApi.V21ProvisioningSchemasPartnerKeyItem200, root.S1MgmtApi.V21ProvisioningSchemasPartnerKeyRequestWrapper, root.S1MgmtApi.V21ProvisioningSchemasProvisionWithUserRequestWrapper, root.S1MgmtApi.V21ProvisioningSchemasTenantWithUsersResponse200);
  }
}(this, function(ApiClient, NoDataSchema400, NoDataSchema401, NoDataSchema403, NoDataSchema404, V21ActivationSchemasAnonymousActivationListItemMany200, V21ActivationSchemasAnonymousActivationRequestWrapper, V21ActivationSchemasAnonymousActivationResponse201, V21ActivationSchemasCheckBulkUserActivationImportResponse200, V21ActivationSchemasUserActivationIdsRequestWrapper, V21ActivationSchemasUserActivationItemMany200, V21ActivationSchemasUserActivationRequestWrapper, V21ConnectorTypesSchemasConnectorTypes200, V21DevicesSchemasDeviceDataSchema200, V21DevicesSchemasDeviceDataSchemaMany200, V21IncidentsSchemasAffectedCountResponseSchema200, V21IncidentsSchemasDeleteIncidentNoteRequestSchema, V21IncidentsSchemasIncidentNote200, V21IncidentsSchemasIncidentNoteRequestSchema, V21IncidentsSchemasListIncidentsSchema200, V21IncidentsSchemasMitigateIncidentRequestSchema, V21IncidentsSchemasUpdateAnalystVerdictRequestSchema, V21IncidentsSchemasUpdateIncidentStatusRequestSchema, V21ManagementSchemasAppConfigurationSchema200, V21ManagementSchemasCanCreateConnectionResponseSchema200, V21ManagementSchemasCreateConnectionRequestSchema, V21ManagementSchemasCreateInterimConnectionResponseSchema200, V21ManagementSchemasDeleteConnectionRequestSchema, V21ManagementSchemasListConnectionsSchema200, V21ManagementSchemasManagedGroupSchemaMany200, V21ManagementSchemasManagedGroupsResponseSchema200, V21ManagementSchemasSyncDevicesRequestSchema, V21ManagementSchemasTestConnectionRequestSchema, V21ManagementSchemasUpdateConnectionRequestSchema, V21ManagementSchemasUpdateGroupsRequestSchema, V21PolicySchemasPolicy200, V21PolicySchemasPolicyRequest, V21ProvisioningSchemasCanProvisionTenant200, V21ProvisioningSchemasDeletePartnerKeyRequestSchema, V21ProvisioningSchemasPartnerKeyItem200, V21ProvisioningSchemasPartnerKeyRequestWrapper, V21ProvisioningSchemasProvisionWithUserRequestWrapper, V21ProvisioningSchemasTenantWithUsersResponse200) {
  'use strict';

  /**
   * MobileIntegration service.
   * @module api/MobileIntegrationApi
   * @version 2.1
   */

  /**
   * Constructs a new MobileIntegrationApi. 
   * @alias module:api/MobileIntegrationApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the webApiMobileIntegrationAccountsaccountIdPolicyDelete operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationAccountsaccountIdPolicyDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Policy - Delete the policy for the Account given by ID
     * Policy - Delete the policy for the Account given by ID
     * @param {String} accountId Account id
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationAccountsaccountIdPolicyDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiMobileIntegrationAccountsaccountIdPolicyDelete = function(accountId, callback) {
      var postBody = null;

      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling webApiMobileIntegrationAccountsaccountIdPolicyDelete");
      }


      var pathParams = {
        'account_id': accountId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/accounts/{account_id}/policy', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationAccountsaccountIdPolicyGet operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationAccountsaccountIdPolicyGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21PolicySchemasPolicy200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Policy - Get the policy for the Account given by ID
     * Policy - Get the policy for the Account given by ID
     * @param {String} accountId Account id
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationAccountsaccountIdPolicyGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21PolicySchemasPolicy200}
     */
    this.webApiMobileIntegrationAccountsaccountIdPolicyGet = function(accountId, callback) {
      var postBody = null;

      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling webApiMobileIntegrationAccountsaccountIdPolicyGet");
      }


      var pathParams = {
        'account_id': accountId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21PolicySchemasPolicy200;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/accounts/{account_id}/policy', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationAccountsaccountIdPolicyPut operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationAccountsaccountIdPolicyPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21PolicySchemasPolicy200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Policy - Update the policy for the Account given by ID
     * Policy - Update the policy for the Account given by ID
     * @param {String} accountId Account id
     * @param {Object} opts Optional parameters
     * @param {module:model/V21PolicySchemasPolicyRequest} opts.body 
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationAccountsaccountIdPolicyPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21PolicySchemasPolicy200}
     */
    this.webApiMobileIntegrationAccountsaccountIdPolicyPut = function(accountId, opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];

      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling webApiMobileIntegrationAccountsaccountIdPolicyPut");
      }


      var pathParams = {
        'account_id': accountId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = V21PolicySchemasPolicy200;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/accounts/{account_id}/policy', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationActivationAnonymousGet operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationActivationAnonymousGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21ActivationSchemasAnonymousActivationListItemMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Activations - Return anonymous activation in the scope
     * Activations - Return anonymous activation in the scope
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.countOnly If true, only total number of items will be returned, without any of the actual objects. (default to false)
     * @param {module:model/String} opts.sortBy The column to sort the results by. Example: \"id\". (default to null)
     * @param {Boolean} opts.tenant Indicates a tenant scope request
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Number} opts.limit Limit number of returned items (1-1000). Example: \"10\". (default to 10)
     * @param {Boolean} opts.skipCount If true, total number of items will not be calculated, which speeds up execution time. (default to null)
     * @param {String} opts.cursor Cursor position returned by the last request. Use to iterate over more than 1000 items. Example: \"YWdlbnRfaWQ6NTgwMjkzODE=\". (default to null)
     * @param {Number} opts.skip Skip first number of items (0-1000). To iterate over more than 1000 items,  use \"cursor\". Example: \"150\".
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:model/String} opts.sortOrder Sort direction. Example: \"asc\". (default to null)
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationActivationAnonymousGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21ActivationSchemasAnonymousActivationListItemMany200}
     */
    this.webApiMobileIntegrationActivationAnonymousGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'countOnly': opts['countOnly'],
        'sortBy': opts['sortBy'],
        'tenant': opts['tenant'],
        'limit': opts['limit'],
        'skipCount': opts['skipCount'],
        'cursor': opts['cursor'],
        'skip': opts['skip'],
        'sortOrder': opts['sortOrder'],
      };
      var collectionQueryParams = {
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21ActivationSchemasAnonymousActivationListItemMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/activation/anonymous', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationActivationAnonymousPost operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationActivationAnonymousPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21ActivationSchemasAnonymousActivationResponse201} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Activations - Generates a global link for anonymous device registration
     * Activations - Generates a global link for anonymous device registration
     * @param {Object} opts Optional parameters
     * @param {module:model/V21ActivationSchemasAnonymousActivationRequestWrapper} opts.body 
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationActivationAnonymousPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21ActivationSchemasAnonymousActivationResponse201}
     */
    this.webApiMobileIntegrationActivationAnonymousPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = V21ActivationSchemasAnonymousActivationResponse201;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/activation/anonymous', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationActivationUserActivationCancelActivationsPut operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationActivationUserActivationCancelActivationsPutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Activations - Cancel user activation invitations
     * Activations - Cancel user activation invitations
     * @param {Object} opts Optional parameters
     * @param {module:model/V21ActivationSchemasUserActivationIdsRequestWrapper} opts.body 
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationActivationUserActivationCancelActivationsPutCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiMobileIntegrationActivationUserActivationCancelActivationsPut = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/activation/user-activation/cancel-activations', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationActivationUserActivationGet operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationActivationUserActivationGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21ActivationSchemasUserActivationItemMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Activations - Get list of user activations
     * Activations - Get list of user activations
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.countOnly If true, only total number of items will be returned, without any of the actual objects. (default to false)
     * @param {module:model/String} opts.sortBy The column to sort the results by. Example: \"id\". (default to null)
     * @param {Boolean} opts.tenant Indicates a tenant scope request
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Number} opts.limit Limit number of returned items (1-1000). Example: \"10\". (default to 10)
     * @param {Boolean} opts.skipCount If true, total number of items will not be calculated, which speeds up execution time. (default to null)
     * @param {String} opts.cursor Cursor position returned by the last request. Use to iterate over more than 1000 items. Example: \"YWdlbnRfaWQ6NTgwMjkzODE=\". (default to null)
     * @param {Number} opts.skip Skip first number of items (0-1000). To iterate over more than 1000 items,  use \"cursor\". Example: \"150\".
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<module:model/String>} opts.statusIn Include user activations only with given status. Example: \"created\".
     * @param {module:model/String} opts.sortOrder Sort direction. Example: \"asc\". (default to null)
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationActivationUserActivationGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21ActivationSchemasUserActivationItemMany200}
     */
    this.webApiMobileIntegrationActivationUserActivationGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'countOnly': opts['countOnly'],
        'sortBy': opts['sortBy'],
        'tenant': opts['tenant'],
        'limit': opts['limit'],
        'skipCount': opts['skipCount'],
        'cursor': opts['cursor'],
        'skip': opts['skip'],
        'sortOrder': opts['sortOrder'],
      };
      var collectionQueryParams = {
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'status__in': {
          value: opts['statusIn'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21ActivationSchemasUserActivationItemMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/activation/user-activation', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationActivationUserActivationImportPost operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationActivationUserActivationImportPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21ActivationSchemasCheckBulkUserActivationImportResponse200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Activations - Bulk user activation import
     * Import user activations from uploaded CSV file
     * @param {File} file The input CSV file with user activations
     * @param {Object} opts Optional parameters
     * @param {String} opts.filter The details of the scope where the entities will be imported, for example:  For Global - '{\"tenant\":true}' For an Account - '{\"accountIds\": [\"225494730938493804\"]}' For a Site  - '{\"siteIds\": [\"225494730938493804\"]}' For a Group - '{\"groupIds\": [\"225494730938493804\"]}'
     * @param {String} opts.mgmtGroupId Group identifier of a group where new devices will be activated (default to null)
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationActivationUserActivationImportPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21ActivationSchemasCheckBulkUserActivationImportResponse200}
     */
    this.webApiMobileIntegrationActivationUserActivationImportPost = function(file, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'file' is set
      if (file === undefined || file === null) {
        throw new Error("Missing the required parameter 'file' when calling webApiMobileIntegrationActivationUserActivationImportPost");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
        'filter': opts['filter'],
        'mgmtGroupId': opts['mgmtGroupId'],
        'file': file
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['multipart/form-data'];
      var accepts = ['application/json'];
      var returnType = V21ActivationSchemasCheckBulkUserActivationImportResponse200;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/activation/user-activation/import', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationActivationUserActivationPost operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationActivationUserActivationPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Activations - Create User Activation
     * Generate bulk of end user links for device registration
     * @param {Object} opts Optional parameters
     * @param {module:model/V21ActivationSchemasUserActivationRequestWrapper} opts.body 
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationActivationUserActivationPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiMobileIntegrationActivationUserActivationPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/activation/user-activation', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationActivationUserActivationResendActivationsPut operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationActivationUserActivationResendActivationsPutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Activations - Resend activation link invitations
     * Activations - Resend activation link invitations
     * @param {Object} opts Optional parameters
     * @param {module:model/V21ActivationSchemasUserActivationIdsRequestWrapper} opts.body 
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationActivationUserActivationResendActivationsPutCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiMobileIntegrationActivationUserActivationResendActivationsPut = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/activation/user-activation/resend-activations', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationActivationUserActivationValidateImportPost operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationActivationUserActivationValidateImportPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21ActivationSchemasCheckBulkUserActivationImportResponse200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Activations - Validate bulk user activation upload
     * Check the validity of uploaded CSV file and its content
     * @param {File} file The input CSV file with user activations
     * @param {Object} opts Optional parameters
     * @param {String} opts.filter The details of the scope where the entities will be imported, for example:  For Global - '{\"tenant\":true}' For an Account - '{\"accountIds\": [\"225494730938493804\"]}' For a Site  - '{\"siteIds\": [\"225494730938493804\"]}' For a Group - '{\"groupIds\": [\"225494730938493804\"]}'
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationActivationUserActivationValidateImportPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21ActivationSchemasCheckBulkUserActivationImportResponse200}
     */
    this.webApiMobileIntegrationActivationUserActivationValidateImportPost = function(file, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'file' is set
      if (file === undefined || file === null) {
        throw new Error("Missing the required parameter 'file' when calling webApiMobileIntegrationActivationUserActivationValidateImportPost");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
        'filter': opts['filter'],
        'file': file
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['multipart/form-data'];
      var accepts = ['application/json'];
      var returnType = V21ActivationSchemasCheckBulkUserActivationImportResponse200;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/activation/user-activation/validate-import', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationDevicesGet operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationDevicesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21DevicesSchemasDeviceDataSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Devices - Get list of devices for specific scope
     * Devices - Get list devices for specific scope
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.sortBy The column to sort the results by. Example: \"id\". (default to null)
     * @param {Array.<String>} opts.appVersionIn Include devices with given app versions. Example: \"2.5.1.1320\".
     * @param {Boolean} opts.tenant Indicates a tenant scope request
     * @param {Array.<module:model/String>} opts.healthStateIn Include devices only with given health state. Example: \"normal\".
     * @param {module:model/String} opts.sortOrder Sort direction. Example: \"asc\". (default to null)
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {String} opts.trackingId1Contains Include devices by external tracking IDs that contain text
     * @param {Array.<module:model/String>} opts.privilegesIn Include devices only with given privileges. Example: \"none\".
     * @param {String} opts.modelContains Include devices by models that contain text
     * @param {String} opts.osVersionContains Include devices by os version that contain text
     * @param {Array.<module:model/String>} opts.platformIn Include devices only of given platforms. Example: \"android\".
     * @param {Boolean} opts.countOnly If true, only total number of items will be returned, without any of the actual objects. (default to false)
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Number} opts.limit Limit number of returned items (1-1000). Example: \"10\". (default to 10)
     * @param {Boolean} opts.skipCount If true, total number of items will not be calculated, which speeds up execution time. (default to null)
     * @param {String} opts.userContains Include devices by users that contain text
     * @param {Number} opts.skip Skip first number of items (0-1000). To iterate over more than 1000 items,  use \"cursor\". Example: \"150\".
     * @param {String} opts.deviceIdContains Include devices by device IDs that contain text
     * @param {String} opts.trackingId2Contains Include devices by another external tracking IDs that contain text
     * @param {String} opts.cursor Cursor position returned by the last request. Use to iterate over more than 1000 items. Example: \"YWdlbnRfaWQ6NTgwMjkzODE=\". (default to null)
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationDevicesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21DevicesSchemasDeviceDataSchemaMany200}
     */
    this.webApiMobileIntegrationDevicesGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'sortBy': opts['sortBy'],
        'tenant': opts['tenant'],
        'sortOrder': opts['sortOrder'],
        'trackingId1__contains': opts['trackingId1Contains'],
        'model__contains': opts['modelContains'],
        'osVersion__contains': opts['osVersionContains'],
        'countOnly': opts['countOnly'],
        'limit': opts['limit'],
        'skipCount': opts['skipCount'],
        'user__contains': opts['userContains'],
        'skip': opts['skip'],
        'deviceId__contains': opts['deviceIdContains'],
        'trackingId2__contains': opts['trackingId2Contains'],
        'cursor': opts['cursor'],
      };
      var collectionQueryParams = {
        'appVersion__in': {
          value: opts['appVersionIn'],
          collectionFormat: 'csv'
        },
        'healthState__in': {
          value: opts['healthStateIn'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'privileges__in': {
          value: opts['privilegesIn'],
          collectionFormat: 'csv'
        },
        'platform__in': {
          value: opts['platformIn'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21DevicesSchemasDeviceDataSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/devices', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationDevicesdeviceIdGet operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationDevicesdeviceIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21DevicesSchemasDeviceDataSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Devices - Get device details by device id
     * Devices - Get device details by device id
     * @param {String} deviceId Device ID
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Boolean} opts.tenant Indicates a tenant scope request
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationDevicesdeviceIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21DevicesSchemasDeviceDataSchema200}
     */
    this.webApiMobileIntegrationDevicesdeviceIdGet = function(deviceId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'deviceId' is set
      if (deviceId === undefined || deviceId === null) {
        throw new Error("Missing the required parameter 'deviceId' when calling webApiMobileIntegrationDevicesdeviceIdGet");
      }


      var pathParams = {
        'device_id': deviceId
      };
      var queryParams = {
        'tenant': opts['tenant'],
      };
      var collectionQueryParams = {
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21DevicesSchemasDeviceDataSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/devices/{device_id}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationGroupsgroupIdPolicyDelete operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationGroupsgroupIdPolicyDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Policy - Delete the policy for the Site given by ID
     * Policy - Delete the policy for the Site given by ID
     * @param {String} groupId Group id
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationGroupsgroupIdPolicyDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiMobileIntegrationGroupsgroupIdPolicyDelete = function(groupId, callback) {
      var postBody = null;

      // verify the required parameter 'groupId' is set
      if (groupId === undefined || groupId === null) {
        throw new Error("Missing the required parameter 'groupId' when calling webApiMobileIntegrationGroupsgroupIdPolicyDelete");
      }


      var pathParams = {
        'group_id': groupId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/groups/{group_id}/policy', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationGroupsgroupIdPolicyGet operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationGroupsgroupIdPolicyGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21PolicySchemasPolicy200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Policy - Get the policy for the Site given by ID
     * Policy - Get the policy for the Site given by ID
     * @param {String} groupId Group id
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationGroupsgroupIdPolicyGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21PolicySchemasPolicy200}
     */
    this.webApiMobileIntegrationGroupsgroupIdPolicyGet = function(groupId, callback) {
      var postBody = null;

      // verify the required parameter 'groupId' is set
      if (groupId === undefined || groupId === null) {
        throw new Error("Missing the required parameter 'groupId' when calling webApiMobileIntegrationGroupsgroupIdPolicyGet");
      }


      var pathParams = {
        'group_id': groupId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21PolicySchemasPolicy200;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/groups/{group_id}/policy', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationGroupsgroupIdPolicyPut operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationGroupsgroupIdPolicyPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21PolicySchemasPolicy200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Policy - Update the policy for the Group given by ID
     * Policy - Update the policy for the Group given by ID
     * @param {String} groupId Group id
     * @param {Object} opts Optional parameters
     * @param {module:model/V21PolicySchemasPolicyRequest} opts.body 
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationGroupsgroupIdPolicyPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21PolicySchemasPolicy200}
     */
    this.webApiMobileIntegrationGroupsgroupIdPolicyPut = function(groupId, opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];

      // verify the required parameter 'groupId' is set
      if (groupId === undefined || groupId === null) {
        throw new Error("Missing the required parameter 'groupId' when calling webApiMobileIntegrationGroupsgroupIdPolicyPut");
      }


      var pathParams = {
        'group_id': groupId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = V21PolicySchemasPolicy200;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/groups/{group_id}/policy', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationIncidentsAnalystVerdictPost operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationIncidentsAnalystVerdictPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21IncidentsSchemasAffectedCountResponseSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Incidents - Update analyst verdict
     * Incidents - Update analyst verdict
     * @param {Object} opts Optional parameters
     * @param {module:model/V21IncidentsSchemasUpdateAnalystVerdictRequestSchema} opts.body 
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationIncidentsAnalystVerdictPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21IncidentsSchemasAffectedCountResponseSchema200}
     */
    this.webApiMobileIntegrationIncidentsAnalystVerdictPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = V21IncidentsSchemasAffectedCountResponseSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/incidents/analyst-verdict', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationIncidentsGet operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationIncidentsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21IncidentsSchemasListIncidentsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Incidents - Get list of incidents
     * Incidents - Get list of incidents
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.sortBy The column to sort the results by. Example: \"id\". (default to null)
     * @param {Boolean} opts.tenant Indicates a tenant scope request
     * @param {module:model/String} opts.sortOrder Sort direction. Example: \"asc\". (default to null)
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<module:model/String>} opts.analystVerdictIn Include incident only of given analyst verdicts. Example: \"true_positive\".
     * @param {Array.<module:model/String>} opts.incidentStatusIn Include incident only of given incident statuses. Example: \"unresolved\".
     * @param {Array.<module:model/String>} opts.statusActionIn Include incident only of given status actions. Example: \"conditional_access\".
     * @param {Boolean} opts.countOnly If true, only total number of items will be returned, without any of the actual objects. (default to false)
     * @param {Array.<module:model/String>} opts.kindIn Include incidents only of given kinds. Example: \"t,h,r,e,a,t\".
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Number} opts.limit Limit number of returned items (1-1000). Example: \"10\". (default to 10)
     * @param {Array.<String>} opts.deviceIdIn Include incidents only of given device ids. Example: \"a,b,c,-,1,2,3,-,4,5,6\".
     * @param {Boolean} opts.skipCount If true, total number of items will not be calculated, which speeds up execution time. (default to null)
     * @param {String} opts.userContains Include incidents by user email that contain text
     * @param {Number} opts.skip Skip first number of items (0-1000). To iterate over more than 1000 items,  use \"cursor\". Example: \"150\".
     * @param {String} opts.deviceIdContains Include incidents by device IDs that contain text
     * @param {String} opts.cursor Cursor position returned by the last request. Use to iterate over more than 1000 items. Example: \"YWdlbnRfaWQ6NTgwMjkzODE=\". (default to null)
     * @param {Array.<module:model/String>} opts.statusIn Include incident only of given statuses. Example: \"not_mitigated\".
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<module:model/String>} opts.severityIn Include incident only of given severities. Example: \"low\".
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationIncidentsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21IncidentsSchemasListIncidentsSchema200}
     */
    this.webApiMobileIntegrationIncidentsGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'sortBy': opts['sortBy'],
        'tenant': opts['tenant'],
        'sortOrder': opts['sortOrder'],
        'countOnly': opts['countOnly'],
        'limit': opts['limit'],
        'skipCount': opts['skipCount'],
        'user__contains': opts['userContains'],
        'skip': opts['skip'],
        'deviceId__contains': opts['deviceIdContains'],
        'cursor': opts['cursor'],
      };
      var collectionQueryParams = {
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'analystVerdict__in': {
          value: opts['analystVerdictIn'],
          collectionFormat: 'csv'
        },
        'incidentStatus__in': {
          value: opts['incidentStatusIn'],
          collectionFormat: 'csv'
        },
        'statusAction__in': {
          value: opts['statusActionIn'],
          collectionFormat: 'csv'
        },
        'kind__in': {
          value: opts['kindIn'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'deviceId__in': {
          value: opts['deviceIdIn'],
          collectionFormat: 'csv'
        },
        'status__in': {
          value: opts['statusIn'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'severity__in': {
          value: opts['severityIn'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21IncidentsSchemasListIncidentsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/incidents', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationIncidentsIncidentStatusPost operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationIncidentsIncidentStatusPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21IncidentsSchemasAffectedCountResponseSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Incidents - Update incident status
     * Incidents - Update incident status
     * @param {Object} opts Optional parameters
     * @param {module:model/V21IncidentsSchemasUpdateIncidentStatusRequestSchema} opts.body 
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationIncidentsIncidentStatusPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21IncidentsSchemasAffectedCountResponseSchema200}
     */
    this.webApiMobileIntegrationIncidentsIncidentStatusPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = V21IncidentsSchemasAffectedCountResponseSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/incidents/incident-status', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationIncidentsMitigatemitigationActionPost operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationIncidentsMitigatemitigationActionPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21IncidentsSchemasAffectedCountResponseSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Incidents - Mitigate incident
     * Incidents - Mitigate incident
     * @param {String} mitigationAction Mitigation action
     * @param {Object} opts Optional parameters
     * @param {module:model/V21IncidentsSchemasMitigateIncidentRequestSchema} opts.body 
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationIncidentsMitigatemitigationActionPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21IncidentsSchemasAffectedCountResponseSchema200}
     */
    this.webApiMobileIntegrationIncidentsMitigatemitigationActionPost = function(mitigationAction, opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];

      // verify the required parameter 'mitigationAction' is set
      if (mitigationAction === undefined || mitigationAction === null) {
        throw new Error("Missing the required parameter 'mitigationAction' when calling webApiMobileIntegrationIncidentsMitigatemitigationActionPost");
      }


      var pathParams = {
        'mitigation_action': mitigationAction
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = V21IncidentsSchemasAffectedCountResponseSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/incidents/mitigate/{mitigation_action}', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationIncidentsincidentIdNotesPost operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationIncidentsincidentIdNotesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21IncidentsSchemasIncidentNote200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Incidents - Create incident note
     * Incidents - Create incident note
     * @param {String} incidentId Incident ID
     * @param {Object} opts Optional parameters
     * @param {module:model/V21IncidentsSchemasIncidentNoteRequestSchema} opts.body 
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationIncidentsincidentIdNotesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21IncidentsSchemasIncidentNote200}
     */
    this.webApiMobileIntegrationIncidentsincidentIdNotesPost = function(incidentId, opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];

      // verify the required parameter 'incidentId' is set
      if (incidentId === undefined || incidentId === null) {
        throw new Error("Missing the required parameter 'incidentId' when calling webApiMobileIntegrationIncidentsincidentIdNotesPost");
      }


      var pathParams = {
        'incident_id': incidentId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = V21IncidentsSchemasIncidentNote200;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/incidents/{incident_id}/notes', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationIncidentsincidentIdNotesnoteIdDelete operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationIncidentsincidentIdNotesnoteIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Incidents - Delete incident note
     * Incidents - Delete incident note
     * @param {String} noteId Note ID
     * @param {String} incidentId Incident ID
     * @param {Object} opts Optional parameters
     * @param {module:model/V21IncidentsSchemasDeleteIncidentNoteRequestSchema} opts.body 
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationIncidentsincidentIdNotesnoteIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiMobileIntegrationIncidentsincidentIdNotesnoteIdDelete = function(noteId, incidentId, opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];

      // verify the required parameter 'noteId' is set
      if (noteId === undefined || noteId === null) {
        throw new Error("Missing the required parameter 'noteId' when calling webApiMobileIntegrationIncidentsincidentIdNotesnoteIdDelete");
      }

      // verify the required parameter 'incidentId' is set
      if (incidentId === undefined || incidentId === null) {
        throw new Error("Missing the required parameter 'incidentId' when calling webApiMobileIntegrationIncidentsincidentIdNotesnoteIdDelete");
      }


      var pathParams = {
        'note_id': noteId,
        'incident_id': incidentId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/incidents/{incident_id}/notes/{note_id}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationIncidentsincidentIdNotesnoteIdPut operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationIncidentsincidentIdNotesnoteIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21IncidentsSchemasIncidentNote200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Incidents - Update incident note
     * Incidents - Update incident note
     * @param {String} noteId Note ID
     * @param {String} incidentId Incident ID
     * @param {Object} opts Optional parameters
     * @param {module:model/V21IncidentsSchemasIncidentNoteRequestSchema} opts.body 
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationIncidentsincidentIdNotesnoteIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21IncidentsSchemasIncidentNote200}
     */
    this.webApiMobileIntegrationIncidentsincidentIdNotesnoteIdPut = function(noteId, incidentId, opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];

      // verify the required parameter 'noteId' is set
      if (noteId === undefined || noteId === null) {
        throw new Error("Missing the required parameter 'noteId' when calling webApiMobileIntegrationIncidentsincidentIdNotesnoteIdPut");
      }

      // verify the required parameter 'incidentId' is set
      if (incidentId === undefined || incidentId === null) {
        throw new Error("Missing the required parameter 'incidentId' when calling webApiMobileIntegrationIncidentsincidentIdNotesnoteIdPut");
      }


      var pathParams = {
        'note_id': noteId,
        'incident_id': incidentId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = V21IncidentsSchemasIncidentNote200;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/incidents/{incident_id}/notes/{note_id}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationManagementAppConfigGet operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationManagementAppConfigGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21ManagementSchemasAppConfigurationSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Management - Get app configuration
     * Management - Get app configuration
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Boolean} opts.tenant Indicates a tenant scope request
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationManagementAppConfigGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21ManagementSchemasAppConfigurationSchema200}
     */
    this.webApiMobileIntegrationManagementAppConfigGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'tenant': opts['tenant'],
      };
      var collectionQueryParams = {
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21ManagementSchemasAppConfigurationSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/management/app-config', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationManagementCanCreateConnectionGet operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationManagementCanCreateConnectionGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21ManagementSchemasCanCreateConnectionResponseSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Management - Checks if connection can be created on current scope.
     * Management - Checks if connection can be created on current scope.
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Boolean} opts.tenant Indicates a tenant scope request
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationManagementCanCreateConnectionGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21ManagementSchemasCanCreateConnectionResponseSchema200}
     */
    this.webApiMobileIntegrationManagementCanCreateConnectionGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'tenant': opts['tenant'],
      };
      var collectionQueryParams = {
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21ManagementSchemasCanCreateConnectionResponseSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/management/can-create-connection', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationManagementConnectionsGet operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationManagementConnectionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21ManagementSchemasListConnectionsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Management - Get list of connections for specific scope
     * Management - Get list of connections for specific scope
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Boolean} opts.tenant Indicates a tenant scope request
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationManagementConnectionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21ManagementSchemasListConnectionsSchema200}
     */
    this.webApiMobileIntegrationManagementConnectionsGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'tenant': opts['tenant'],
      };
      var collectionQueryParams = {
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21ManagementSchemasListConnectionsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/management/connections', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationManagementConnectionsconnIdDeviceGroupsGet operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationManagementConnectionsconnIdDeviceGroupsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21ManagementSchemasManagedGroupSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Management - Get all UEM device groups for given connection
     * Management - Get all UEM device groups for given connection
     * @param {String} connId Connection ID
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.countOnly If true, only total number of items will be returned, without any of the actual objects. (default to false)
     * @param {module:model/String} opts.sortBy The column to sort the results by. Example: \"id\". (default to null)
     * @param {Boolean} opts.tenant Indicates a tenant scope request
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Number} opts.limit Limit number of returned items (1-1000). Example: \"10\". (default to 10)
     * @param {Boolean} opts.skipCount If true, total number of items will not be calculated, which speeds up execution time. (default to null)
     * @param {String} opts.cursor Cursor position returned by the last request. Use to iterate over more than 1000 items. Example: \"YWdlbnRfaWQ6NTgwMjkzODE=\". (default to null)
     * @param {Number} opts.skip Skip first number of items (0-1000). To iterate over more than 1000 items,  use \"cursor\". Example: \"150\".
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:model/String} opts.sortOrder Sort direction. Example: \"asc\". (default to null)
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {String} opts.query Search for groups with names containing this value
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationManagementConnectionsconnIdDeviceGroupsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21ManagementSchemasManagedGroupSchemaMany200}
     */
    this.webApiMobileIntegrationManagementConnectionsconnIdDeviceGroupsGet = function(connId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'connId' is set
      if (connId === undefined || connId === null) {
        throw new Error("Missing the required parameter 'connId' when calling webApiMobileIntegrationManagementConnectionsconnIdDeviceGroupsGet");
      }


      var pathParams = {
        'conn_id': connId
      };
      var queryParams = {
        'countOnly': opts['countOnly'],
        'sortBy': opts['sortBy'],
        'tenant': opts['tenant'],
        'limit': opts['limit'],
        'skipCount': opts['skipCount'],
        'cursor': opts['cursor'],
        'skip': opts['skip'],
        'sortOrder': opts['sortOrder'],
        'query': opts['query'],
      };
      var collectionQueryParams = {
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21ManagementSchemasManagedGroupSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/management/connections/{conn_id}/device-groups', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationManagementConnectionsconnIdManagedGroupsGet operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationManagementConnectionsconnIdManagedGroupsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21ManagementSchemasManagedGroupsResponseSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Management - Get managed groups for connection
     * Management - Get managed groups for connection
     * @param {String} connId Connection ID
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Boolean} opts.tenant Indicates a tenant scope request
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationManagementConnectionsconnIdManagedGroupsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21ManagementSchemasManagedGroupsResponseSchema200}
     */
    this.webApiMobileIntegrationManagementConnectionsconnIdManagedGroupsGet = function(connId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'connId' is set
      if (connId === undefined || connId === null) {
        throw new Error("Missing the required parameter 'connId' when calling webApiMobileIntegrationManagementConnectionsconnIdManagedGroupsGet");
      }


      var pathParams = {
        'conn_id': connId
      };
      var queryParams = {
        'tenant': opts['tenant'],
      };
      var collectionQueryParams = {
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21ManagementSchemasManagedGroupsResponseSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/management/connections/{conn_id}/managed-groups', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationManagementConnectionsconnIdResponseGroupsGet operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationManagementConnectionsconnIdResponseGroupsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21ManagementSchemasManagedGroupsResponseSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Management - Get managed groups for connection
     * Management - Get managed groups for connection
     * @param {String} connId Connection ID
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Boolean} opts.tenant Indicates a tenant scope request
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationManagementConnectionsconnIdResponseGroupsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21ManagementSchemasManagedGroupsResponseSchema200}
     */
    this.webApiMobileIntegrationManagementConnectionsconnIdResponseGroupsGet = function(connId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'connId' is set
      if (connId === undefined || connId === null) {
        throw new Error("Missing the required parameter 'connId' when calling webApiMobileIntegrationManagementConnectionsconnIdResponseGroupsGet");
      }


      var pathParams = {
        'conn_id': connId
      };
      var queryParams = {
        'tenant': opts['tenant'],
      };
      var collectionQueryParams = {
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21ManagementSchemasManagedGroupsResponseSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/management/connections/{conn_id}/response-groups', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationManagementConnectionsconnectionIdDelete operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationManagementConnectionsconnectionIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Management - Delete connection
     * Management - Delete connection
     * @param {String} connectionId Connection id
     * @param {Object} opts Optional parameters
     * @param {module:model/V21ManagementSchemasDeleteConnectionRequestSchema} opts.body 
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationManagementConnectionsconnectionIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiMobileIntegrationManagementConnectionsconnectionIdDelete = function(connectionId, opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];

      // verify the required parameter 'connectionId' is set
      if (connectionId === undefined || connectionId === null) {
        throw new Error("Missing the required parameter 'connectionId' when calling webApiMobileIntegrationManagementConnectionsconnectionIdDelete");
      }


      var pathParams = {
        'connection_id': connectionId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/management/connections/{connection_id}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationManagementConnectionsconnectionIdGroupsPut operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationManagementConnectionsconnectionIdGroupsPutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Management - Patch connection group mappings
     * Management - Patch connection group mappings
     * @param {String} connectionId Connection id
     * @param {Object} opts Optional parameters
     * @param {module:model/V21ManagementSchemasUpdateGroupsRequestSchema} opts.body 
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationManagementConnectionsconnectionIdGroupsPutCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiMobileIntegrationManagementConnectionsconnectionIdGroupsPut = function(connectionId, opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];

      // verify the required parameter 'connectionId' is set
      if (connectionId === undefined || connectionId === null) {
        throw new Error("Missing the required parameter 'connectionId' when calling webApiMobileIntegrationManagementConnectionsconnectionIdGroupsPut");
      }


      var pathParams = {
        'connection_id': connectionId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/management/connections/{connection_id}/groups', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationManagementConnectionsconnectionIdPut operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationManagementConnectionsconnectionIdPutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Management - Update connector connection
     * Management - Update connector connection.
     * @param {String} connectionId Connection id
     * @param {Object} opts Optional parameters
     * @param {module:model/V21ManagementSchemasUpdateConnectionRequestSchema} opts.body 
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationManagementConnectionsconnectionIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiMobileIntegrationManagementConnectionsconnectionIdPut = function(connectionId, opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];

      // verify the required parameter 'connectionId' is set
      if (connectionId === undefined || connectionId === null) {
        throw new Error("Missing the required parameter 'connectionId' when calling webApiMobileIntegrationManagementConnectionsconnectionIdPut");
      }


      var pathParams = {
        'connection_id': connectionId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/management/connections/{connection_id}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationManagementConnectionsconnectionIdSyncDevicesPost operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationManagementConnectionsconnectionIdSyncDevicesPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Management - Sync devices under connection
     * Management - Sync devices under connection
     * @param {String} connectionId Connection id
     * @param {Object} opts Optional parameters
     * @param {module:model/V21ManagementSchemasSyncDevicesRequestSchema} opts.body 
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationManagementConnectionsconnectionIdSyncDevicesPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiMobileIntegrationManagementConnectionsconnectionIdSyncDevicesPost = function(connectionId, opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];

      // verify the required parameter 'connectionId' is set
      if (connectionId === undefined || connectionId === null) {
        throw new Error("Missing the required parameter 'connectionId' when calling webApiMobileIntegrationManagementConnectionsconnectionIdSyncDevicesPost");
      }


      var pathParams = {
        'connection_id': connectionId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/management/connections/{connection_id}/sync-devices', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationManagementConnectorsGet operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationManagementConnectorsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21ConnectorTypesSchemasConnectorTypes200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Connectors - Get list of Connectors and their abilities
     * Connectors - Get list of Connectors and their abilities
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationManagementConnectorsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21ConnectorTypesSchemasConnectorTypes200}
     */
    this.webApiMobileIntegrationManagementConnectorsGet = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21ConnectorTypesSchemasConnectorTypes200;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/management/connectors', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationManagementCreateConnectionPost operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationManagementCreateConnectionPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Management - Create connector connection
     * Management - Create connector connection.
     * @param {Object} opts Optional parameters
     * @param {module:model/V21ManagementSchemasCreateConnectionRequestSchema} opts.body 
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationManagementCreateConnectionPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiMobileIntegrationManagementCreateConnectionPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/management/create-connection', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationManagementCreateInterimConnectionPost operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationManagementCreateInterimConnectionPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21ManagementSchemasCreateInterimConnectionResponseSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Management - Create interim connector connection
     * Management - Create interim connector connection.
     * @param {Object} opts Optional parameters
     * @param {module:model/V21ManagementSchemasTestConnectionRequestSchema} opts.body 
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationManagementCreateInterimConnectionPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21ManagementSchemasCreateInterimConnectionResponseSchema200}
     */
    this.webApiMobileIntegrationManagementCreateInterimConnectionPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = V21ManagementSchemasCreateInterimConnectionResponseSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/management/create-interim-connection', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationManagementTestConnectionPost operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationManagementTestConnectionPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21ManagementSchemasManagedGroupsResponseSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Management - Test connector connection. Deprecated, use create-interim-connection + device-groups instead.
     * Management - Test connector connection. Deprecated, use create-interim-connection + device-groups instead.
     * @param {Object} opts Optional parameters
     * @param {module:model/V21ManagementSchemasTestConnectionRequestSchema} opts.body 
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationManagementTestConnectionPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21ManagementSchemasManagedGroupsResponseSchema200}
     */
    this.webApiMobileIntegrationManagementTestConnectionPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = V21ManagementSchemasManagedGroupsResponseSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/management/test-connection', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationPolicyPost operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationPolicyPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21PolicySchemasPolicy200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Policy - Create mobile policy
     * Policy - Create mobile policy
     * @param {Object} opts Optional parameters
     * @param {module:model/V21PolicySchemasPolicyRequest} opts.body 
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationPolicyPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21PolicySchemasPolicy200}
     */
    this.webApiMobileIntegrationPolicyPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = V21PolicySchemasPolicy200;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/policy', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationProvisioningCanProvisionTenantGet operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationProvisioningCanProvisionTenantGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21ProvisioningSchemasCanProvisionTenant200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Provision - Check if tenant can be provisioned
     * Checks if tenant can be provisioned by scope
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Boolean} opts.tenant Indicates a tenant scope request
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationProvisioningCanProvisionTenantGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21ProvisioningSchemasCanProvisionTenant200}
     */
    this.webApiMobileIntegrationProvisioningCanProvisionTenantGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'tenant': opts['tenant'],
      };
      var collectionQueryParams = {
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21ProvisioningSchemasCanProvisionTenant200;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/provisioning/can-provision-tenant', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationProvisioningPartnerKeyGet operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationProvisioningPartnerKeyGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21ProvisioningSchemasPartnerKeyItem200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Provision - Get MSSP partner key
     * Gets MSSP partner key by scope
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Boolean} opts.tenant Indicates a tenant scope request
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationProvisioningPartnerKeyGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21ProvisioningSchemasPartnerKeyItem200}
     */
    this.webApiMobileIntegrationProvisioningPartnerKeyGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'tenant': opts['tenant'],
      };
      var collectionQueryParams = {
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21ProvisioningSchemasPartnerKeyItem200;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/provisioning/partner-key', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationProvisioningPartnerKeyPost operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationProvisioningPartnerKeyPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Provision - Persist MSSP partner key
     * Persists MSSP partner key - client ID and secret - for future customer provisioning.
     * @param {Object} opts Optional parameters
     * @param {module:model/V21ProvisioningSchemasPartnerKeyRequestWrapper} opts.body 
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationProvisioningPartnerKeyPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiMobileIntegrationProvisioningPartnerKeyPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/provisioning/partner-key', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationProvisioningPartnerKeyPut operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationProvisioningPartnerKeyPutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Provision - Update MSSP partner key
     * Updates MSSP partner key - client ID and secret - for future customer provisioning.
     * @param {Object} opts Optional parameters
     * @param {module:model/V21ProvisioningSchemasPartnerKeyRequestWrapper} opts.body 
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationProvisioningPartnerKeyPutCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiMobileIntegrationProvisioningPartnerKeyPut = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/provisioning/partner-key', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationProvisioningPartnerKeyclientIdDelete operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationProvisioningPartnerKeyclientIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes MSSP partner key by client ID
     * Provision - Delete MSSP partner key
     * @param {String} clientId Client id
     * @param {Object} opts Optional parameters
     * @param {module:model/V21ProvisioningSchemasDeletePartnerKeyRequestSchema} opts.body 
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationProvisioningPartnerKeyclientIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiMobileIntegrationProvisioningPartnerKeyclientIdDelete = function(clientId, opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];

      // verify the required parameter 'clientId' is set
      if (clientId === undefined || clientId === null) {
        throw new Error("Missing the required parameter 'clientId' when calling webApiMobileIntegrationProvisioningPartnerKeyclientIdDelete");
      }


      var pathParams = {
        'client_id': clientId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/provisioning/partner-key/{client_id}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationProvisioningTenantGet operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationProvisioningTenantGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21ProvisioningSchemasTenantWithUsersResponse200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Provision - Get tenant with users
     * Gets tenant with users by scope
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Boolean} opts.tenant Indicates a tenant scope request
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationProvisioningTenantGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21ProvisioningSchemasTenantWithUsersResponse200}
     */
    this.webApiMobileIntegrationProvisioningTenantGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'tenant': opts['tenant'],
      };
      var collectionQueryParams = {
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21ProvisioningSchemasTenantWithUsersResponse200;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/provisioning/tenant', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationProvisioningTenantPost operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationProvisioningTenantPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Provision - Provision tenant with admin user
     * Provision a new tenant and create an admin user for the tenant account
     * @param {Object} opts Optional parameters
     * @param {module:model/V21ProvisioningSchemasProvisionWithUserRequestWrapper} opts.body 
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationProvisioningTenantPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiMobileIntegrationProvisioningTenantPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/provisioning/tenant', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationSitessiteIdPolicyDelete operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationSitessiteIdPolicyDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Policy - Delete the policy for the Site given by ID
     * Policy - Delete the policy for the Site given by ID
     * @param {String} siteId Site id
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationSitessiteIdPolicyDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiMobileIntegrationSitessiteIdPolicyDelete = function(siteId, callback) {
      var postBody = null;

      // verify the required parameter 'siteId' is set
      if (siteId === undefined || siteId === null) {
        throw new Error("Missing the required parameter 'siteId' when calling webApiMobileIntegrationSitessiteIdPolicyDelete");
      }


      var pathParams = {
        'site_id': siteId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/sites/{site_id}/policy', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationSitessiteIdPolicyGet operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationSitessiteIdPolicyGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21PolicySchemasPolicy200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Policy - Get the policy for the Site given by ID
     * Policy - Get the policy for the Site given by ID
     * @param {String} siteId Site id
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationSitessiteIdPolicyGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21PolicySchemasPolicy200}
     */
    this.webApiMobileIntegrationSitessiteIdPolicyGet = function(siteId, callback) {
      var postBody = null;

      // verify the required parameter 'siteId' is set
      if (siteId === undefined || siteId === null) {
        throw new Error("Missing the required parameter 'siteId' when calling webApiMobileIntegrationSitessiteIdPolicyGet");
      }


      var pathParams = {
        'site_id': siteId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21PolicySchemasPolicy200;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/sites/{site_id}/policy', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationSitessiteIdPolicyPut operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationSitessiteIdPolicyPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21PolicySchemasPolicy200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Policy - Update the policy for the Site given by ID
     * Policy - Update the policy for the Site given by ID
     * @param {String} siteId Site id
     * @param {Object} opts Optional parameters
     * @param {module:model/V21PolicySchemasPolicyRequest} opts.body 
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationSitessiteIdPolicyPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21PolicySchemasPolicy200}
     */
    this.webApiMobileIntegrationSitessiteIdPolicyPut = function(siteId, opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];

      // verify the required parameter 'siteId' is set
      if (siteId === undefined || siteId === null) {
        throw new Error("Missing the required parameter 'siteId' when calling webApiMobileIntegrationSitessiteIdPolicyPut");
      }


      var pathParams = {
        'site_id': siteId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = V21PolicySchemasPolicy200;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/sites/{site_id}/policy', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationTenantPolicyDelete operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationTenantPolicyDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Policy - Delete global mobile policy
     * Policy - Delete global mobile policy
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationTenantPolicyDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiMobileIntegrationTenantPolicyDelete = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/tenant/policy', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationTenantPolicyGet operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationTenantPolicyGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21PolicySchemasPolicy200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Policy - Get global mobile policy
     * Policy - Get global mobile policy
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationTenantPolicyGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21PolicySchemasPolicy200}
     */
    this.webApiMobileIntegrationTenantPolicyGet = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21PolicySchemasPolicy200;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/tenant/policy', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiMobileIntegrationTenantPolicyPut operation.
     * @callback module:api/MobileIntegrationApi~webApiMobileIntegrationTenantPolicyPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21PolicySchemasPolicy200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Policy - Update global mobile policy
     * Policy - Update global mobile policy
     * @param {Object} opts Optional parameters
     * @param {module:model/V21PolicySchemasPolicyRequest} opts.body 
     * @param {module:api/MobileIntegrationApi~webApiMobileIntegrationTenantPolicyPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21PolicySchemasPolicy200}
     */
    this.webApiMobileIntegrationTenantPolicyPut = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = V21PolicySchemasPolicy200;

      return this.apiClient.callApi(
        '/web/api/v2.1/mobile-integration/tenant/policy', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
