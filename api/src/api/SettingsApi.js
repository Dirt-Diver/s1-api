/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/NoDataSchema400', 'model/NoDataSchema401', 'model/NoDataSchema403', 'model/NoDataSchema404', 'model/NotificationsSchemasCancelPendingEmailNotificationsPostSchema', 'model/NotificationsSchemasCancelPendingEmailNotificationsReturnSchema200', 'model/NotificationsSchemasNotificationSettingsPutSchema', 'model/NotificationsSchemasNotificationsSettingsSchema200', 'model/SettingsAdFqdnsPutSchema', 'model/SettingsAdFqdnsSchema200', 'model/SettingsAdSettingsPutSchema', 'model/SettingsAdSettingsSchema200', 'model/SettingsMicrosoftSettingsPutSchema', 'model/SettingsMicrosoftSettingsSchema200', 'model/SettingsNotificationRecipientSettingsPutSchema', 'model/SettingsNotificationRecipientSettingsSchema200', 'model/SettingsNotificationRecipientsListSchema200', 'model/SettingsSmsSettingsPutSchema', 'model/SettingsSmsSettingsSchema200', 'model/SettingsSmtpSettingsPutSchema', 'model/SettingsSmtpSettingsSchema200', 'model/SettingsSmtpSettingsTestSchema', 'model/SettingsSsoSettingFields200', 'model/SettingsSsoSettingsPutSchema', 'model/SettingsSsoSpCertificate200', 'model/SettingsSsoTestFields200', 'model/SettingsSyslogSettingsPutSchema', 'model/SettingsSyslogSettingsSchema200', 'model/SettingsTestAdSettingsSchema200', 'model/SettingsTestMicrosoftSettingsSchema200', 'model/SettingsTestSmtpSettingsSchema200', 'model/SettingsTestSyslogSettingsSchema200', 'model/SuccessResponseSchema200'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/NoDataSchema400'), require('../model/NoDataSchema401'), require('../model/NoDataSchema403'), require('../model/NoDataSchema404'), require('../model/NotificationsSchemasCancelPendingEmailNotificationsPostSchema'), require('../model/NotificationsSchemasCancelPendingEmailNotificationsReturnSchema200'), require('../model/NotificationsSchemasNotificationSettingsPutSchema'), require('../model/NotificationsSchemasNotificationsSettingsSchema200'), require('../model/SettingsAdFqdnsPutSchema'), require('../model/SettingsAdFqdnsSchema200'), require('../model/SettingsAdSettingsPutSchema'), require('../model/SettingsAdSettingsSchema200'), require('../model/SettingsMicrosoftSettingsPutSchema'), require('../model/SettingsMicrosoftSettingsSchema200'), require('../model/SettingsNotificationRecipientSettingsPutSchema'), require('../model/SettingsNotificationRecipientSettingsSchema200'), require('../model/SettingsNotificationRecipientsListSchema200'), require('../model/SettingsSmsSettingsPutSchema'), require('../model/SettingsSmsSettingsSchema200'), require('../model/SettingsSmtpSettingsPutSchema'), require('../model/SettingsSmtpSettingsSchema200'), require('../model/SettingsSmtpSettingsTestSchema'), require('../model/SettingsSsoSettingFields200'), require('../model/SettingsSsoSettingsPutSchema'), require('../model/SettingsSsoSpCertificate200'), require('../model/SettingsSsoTestFields200'), require('../model/SettingsSyslogSettingsPutSchema'), require('../model/SettingsSyslogSettingsSchema200'), require('../model/SettingsTestAdSettingsSchema200'), require('../model/SettingsTestMicrosoftSettingsSchema200'), require('../model/SettingsTestSmtpSettingsSchema200'), require('../model/SettingsTestSyslogSettingsSchema200'), require('../model/SuccessResponseSchema200'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.SettingsApi = factory(root.S1MgmtApi.ApiClient, root.S1MgmtApi.NoDataSchema400, root.S1MgmtApi.NoDataSchema401, root.S1MgmtApi.NoDataSchema403, root.S1MgmtApi.NoDataSchema404, root.S1MgmtApi.NotificationsSchemasCancelPendingEmailNotificationsPostSchema, root.S1MgmtApi.NotificationsSchemasCancelPendingEmailNotificationsReturnSchema200, root.S1MgmtApi.NotificationsSchemasNotificationSettingsPutSchema, root.S1MgmtApi.NotificationsSchemasNotificationsSettingsSchema200, root.S1MgmtApi.SettingsAdFqdnsPutSchema, root.S1MgmtApi.SettingsAdFqdnsSchema200, root.S1MgmtApi.SettingsAdSettingsPutSchema, root.S1MgmtApi.SettingsAdSettingsSchema200, root.S1MgmtApi.SettingsMicrosoftSettingsPutSchema, root.S1MgmtApi.SettingsMicrosoftSettingsSchema200, root.S1MgmtApi.SettingsNotificationRecipientSettingsPutSchema, root.S1MgmtApi.SettingsNotificationRecipientSettingsSchema200, root.S1MgmtApi.SettingsNotificationRecipientsListSchema200, root.S1MgmtApi.SettingsSmsSettingsPutSchema, root.S1MgmtApi.SettingsSmsSettingsSchema200, root.S1MgmtApi.SettingsSmtpSettingsPutSchema, root.S1MgmtApi.SettingsSmtpSettingsSchema200, root.S1MgmtApi.SettingsSmtpSettingsTestSchema, root.S1MgmtApi.SettingsSsoSettingFields200, root.S1MgmtApi.SettingsSsoSettingsPutSchema, root.S1MgmtApi.SettingsSsoSpCertificate200, root.S1MgmtApi.SettingsSsoTestFields200, root.S1MgmtApi.SettingsSyslogSettingsPutSchema, root.S1MgmtApi.SettingsSyslogSettingsSchema200, root.S1MgmtApi.SettingsTestAdSettingsSchema200, root.S1MgmtApi.SettingsTestMicrosoftSettingsSchema200, root.S1MgmtApi.SettingsTestSmtpSettingsSchema200, root.S1MgmtApi.SettingsTestSyslogSettingsSchema200, root.S1MgmtApi.SuccessResponseSchema200);
  }
}(this, function(ApiClient, NoDataSchema400, NoDataSchema401, NoDataSchema403, NoDataSchema404, NotificationsSchemasCancelPendingEmailNotificationsPostSchema, NotificationsSchemasCancelPendingEmailNotificationsReturnSchema200, NotificationsSchemasNotificationSettingsPutSchema, NotificationsSchemasNotificationsSettingsSchema200, SettingsAdFqdnsPutSchema, SettingsAdFqdnsSchema200, SettingsAdSettingsPutSchema, SettingsAdSettingsSchema200, SettingsMicrosoftSettingsPutSchema, SettingsMicrosoftSettingsSchema200, SettingsNotificationRecipientSettingsPutSchema, SettingsNotificationRecipientSettingsSchema200, SettingsNotificationRecipientsListSchema200, SettingsSmsSettingsPutSchema, SettingsSmsSettingsSchema200, SettingsSmtpSettingsPutSchema, SettingsSmtpSettingsSchema200, SettingsSmtpSettingsTestSchema, SettingsSsoSettingFields200, SettingsSsoSettingsPutSchema, SettingsSsoSpCertificate200, SettingsSsoTestFields200, SettingsSyslogSettingsPutSchema, SettingsSyslogSettingsSchema200, SettingsTestAdSettingsSchema200, SettingsTestMicrosoftSettingsSchema200, SettingsTestSmtpSettingsSchema200, SettingsTestSyslogSettingsSchema200, SuccessResponseSchema200) {
  'use strict';

  /**
   * Settings service.
   * @module api/SettingsApi
   * @version 2.1
   */

  /**
   * Constructs a new SettingsApi. 
   * @alias module:api/SettingsApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the webApiSettingsActiveDirectoryGet operation.
     * @callback module:api/SettingsApi~webApiSettingsActiveDirectoryGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SettingsAdSettingsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get AD Settings
     * Get the Global Active Directory settings.
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/SettingsApi~webApiSettingsActiveDirectoryGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SettingsAdSettingsSchema200}
     */
    this.webApiSettingsActiveDirectoryGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = SettingsAdSettingsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/settings/active-directory', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSettingsActiveDirectoryPut operation.
     * @callback module:api/SettingsApi~webApiSettingsActiveDirectoryPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SettingsAdSettingsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Set AD Settings
     * Update the Global Active Directory settings.
     * @param {Object} opts Optional parameters
     * @param {module:model/SettingsAdSettingsPutSchema} opts.body 
     * @param {module:api/SettingsApi~webApiSettingsActiveDirectoryPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SettingsAdSettingsSchema200}
     */
    this.webApiSettingsActiveDirectoryPut = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SettingsAdSettingsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/settings/active-directory', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSettingsActiveDirectoryScopeMappingGet operation.
     * @callback module:api/SettingsApi~webApiSettingsActiveDirectoryScopeMappingGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SettingsAdFqdnsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get AD FQDNs
     * Get the map of Active Directory FQDNs to user roles of the given Sites (use \"sites\" to get IDs) or Accounts (\"accounts\").
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/SettingsApi~webApiSettingsActiveDirectoryScopeMappingGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SettingsAdFqdnsSchema200}
     */
    this.webApiSettingsActiveDirectoryScopeMappingGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = SettingsAdFqdnsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/settings/active-directory/scope-mapping', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSettingsActiveDirectoryScopeMappingPut operation.
     * @callback module:api/SettingsApi~webApiSettingsActiveDirectoryScopeMappingPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SettingsAdFqdnsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Set AD FQDNs
     * Update the Active Directory FQDNs of a Site or Account.
     * @param {Object} opts Optional parameters
     * @param {module:model/SettingsAdFqdnsPutSchema} opts.body 
     * @param {module:api/SettingsApi~webApiSettingsActiveDirectoryScopeMappingPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SettingsAdFqdnsSchema200}
     */
    this.webApiSettingsActiveDirectoryScopeMappingPut = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SettingsAdFqdnsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/settings/active-directory/scope-mapping', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSettingsActiveDirectoryTestPost operation.
     * @callback module:api/SettingsApi~webApiSettingsActiveDirectoryTestPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SettingsTestAdSettingsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Test AD Settings
     * Test Active Directory settings.
     * @param {Object} opts Optional parameters
     * @param {module:model/SettingsAdSettingsPutSchema} opts.body 
     * @param {module:api/SettingsApi~webApiSettingsActiveDirectoryTestPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SettingsTestAdSettingsSchema200}
     */
    this.webApiSettingsActiveDirectoryTestPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SettingsTestAdSettingsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/settings/active-directory/test', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSettingsMicrosoftGet operation.
     * @callback module:api/SettingsApi~webApiSettingsMicrosoftGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SettingsMicrosoftSettingsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Microsoft Settings
     * [DEPRECATED] Gets the Microsoft settings of the Sites or Accounts.
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/SettingsApi~webApiSettingsMicrosoftGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SettingsMicrosoftSettingsSchema200}
     */
    this.webApiSettingsMicrosoftGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = SettingsMicrosoftSettingsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/settings/microsoft', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSettingsMicrosoftPut operation.
     * @callback module:api/SettingsApi~webApiSettingsMicrosoftPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SettingsMicrosoftSettingsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Set Microsoft Settings
     * [DEPRECATED] Update Microsoft settings for the given Sites or Accounts.
     * @param {Object} opts Optional parameters
     * @param {module:model/SettingsMicrosoftSettingsPutSchema} opts.body 
     * @param {module:api/SettingsApi~webApiSettingsMicrosoftPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SettingsMicrosoftSettingsSchema200}
     */
    this.webApiSettingsMicrosoftPut = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SettingsMicrosoftSettingsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/settings/microsoft', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSettingsMicrosoftTestPost operation.
     * @callback module:api/SettingsApi~webApiSettingsMicrosoftTestPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SettingsTestMicrosoftSettingsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Test Microsoft Settings
     * [DEPRECATED] Test Microsoft settings.
     * @param {Object} opts Optional parameters
     * @param {module:model/SettingsMicrosoftSettingsPutSchema} opts.body 
     * @param {module:api/SettingsApi~webApiSettingsMicrosoftTestPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SettingsTestMicrosoftSettingsSchema200}
     */
    this.webApiSettingsMicrosoftTestPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SettingsTestMicrosoftSettingsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/settings/microsoft/test', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSettingsNotificationsCancelPendingEmailsPost operation.
     * @callback module:api/SettingsApi~webApiSettingsNotificationsCancelPendingEmailsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NotificationsSchemasCancelPendingEmailNotificationsReturnSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Clear Pending Emails
     * Clear (discard without sending) pending email notifications for the given Sites (to get the IDs, run \"sites\") or Accounts (\"accounts\"). <br>When you set email recipients to get notifications for activities in the system, you can set too many, or in other ways cause issues that demand that the queue be cleared.
     * @param {Object} opts Optional parameters
     * @param {module:model/NotificationsSchemasCancelPendingEmailNotificationsPostSchema} opts.body 
     * @param {module:api/SettingsApi~webApiSettingsNotificationsCancelPendingEmailsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NotificationsSchemasCancelPendingEmailNotificationsReturnSchema200}
     */
    this.webApiSettingsNotificationsCancelPendingEmailsPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = NotificationsSchemasCancelPendingEmailNotificationsReturnSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/settings/notifications/cancel-pending-emails', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSettingsNotificationsGet operation.
     * @callback module:api/SettingsApi~webApiSettingsNotificationsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NotificationsSchemasNotificationsSettingsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Notification Settings
     * Get the notification settings for the given Sites (to get the IDs, run \"settings\") or Accounts (\"accounts\"). <br>The response shows every possible notification and whether it is active and if so, for email or syslog or both. It also shows the ID string for each notification, which can be used in other commands. <br>Note: Each notification also shows \"sms\" which is deprecated.
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/SettingsApi~webApiSettingsNotificationsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NotificationsSchemasNotificationsSettingsSchema200}
     */
    this.webApiSettingsNotificationsGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = NotificationsSchemasNotificationsSettingsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/settings/notifications', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSettingsNotificationsPut operation.
     * @callback module:api/SettingsApi~webApiSettingsNotificationsPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NotificationsSchemasNotificationsSettingsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Set Notification Settings
     * Change the notifications for the given Sites (to get the IDs, run \"settings\") or Accounts (\"accounts\"). Best practice: Get the current settings (see Get Notification Settings) before you run this command.
     * @param {Object} opts Optional parameters
     * @param {module:model/NotificationsSchemasNotificationSettingsPutSchema} opts.body 
     * @param {module:api/SettingsApi~webApiSettingsNotificationsPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NotificationsSchemasNotificationsSettingsSchema200}
     */
    this.webApiSettingsNotificationsPut = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = NotificationsSchemasNotificationsSettingsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/settings/notifications', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSettingsRecipientsGet operation.
     * @callback module:api/SettingsApi~webApiSettingsRecipientsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SettingsNotificationRecipientsListSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Notification Recipients
     * Get the emails that are configured to receive notifications.
     * @param {Object} opts Optional parameters
     * @param {String} opts.name Name
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {String} opts.sms Sms
     * @param {String} opts.query Full text search for fields: name, email, sms
     * @param {String} opts.email Email
     * @param {module:api/SettingsApi~webApiSettingsRecipientsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SettingsNotificationRecipientsListSchema200}
     */
    this.webApiSettingsRecipientsGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'name': opts['name'],
        'sms': opts['sms'],
        'query': opts['query'],
        'email': opts['email'],
      };
      var collectionQueryParams = {
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = SettingsNotificationRecipientsListSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/settings/recipients', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSettingsRecipientsPut operation.
     * @callback module:api/SettingsApi~webApiSettingsRecipientsPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SettingsNotificationRecipientSettingsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Set Notification Recipients
     * Set the emails of recipients to get notifications.
     * @param {Object} opts Optional parameters
     * @param {module:model/SettingsNotificationRecipientSettingsPutSchema} opts.body 
     * @param {module:api/SettingsApi~webApiSettingsRecipientsPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SettingsNotificationRecipientSettingsSchema200}
     */
    this.webApiSettingsRecipientsPut = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SettingsNotificationRecipientSettingsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/settings/recipients', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSettingsRecipientsrecipientIdDelete operation.
     * @callback module:api/SettingsApi~webApiSettingsRecipientsrecipientIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SuccessResponseSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Notification Recipient
     * Delete a notification recipient by ID. To get the IDs of recipients, run \"recipients\" (see Get Notification Recipients). 
     * @param {String} recipientId Recipient ID. Example: \"225494730938493804\".
     * @param {module:api/SettingsApi~webApiSettingsRecipientsrecipientIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SuccessResponseSchema200}
     */
    this.webApiSettingsRecipientsrecipientIdDelete = function(recipientId, callback) {
      var postBody = null;

      // verify the required parameter 'recipientId' is set
      if (recipientId === undefined || recipientId === null) {
        throw new Error("Missing the required parameter 'recipientId' when calling webApiSettingsRecipientsrecipientIdDelete");
      }


      var pathParams = {
        'recipient_id': recipientId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = SuccessResponseSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/settings/recipients/{recipient_id}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSettingsSmsGet operation.
     * @callback module:api/SettingsApi~webApiSettingsSmsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SettingsSmsSettingsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get SMS Settings
     * [DEPRECATED] Gets the site's SMS settings.
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/SettingsApi~webApiSettingsSmsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SettingsSmsSettingsSchema200}
     */
    this.webApiSettingsSmsGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = SettingsSmsSettingsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/settings/sms', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSettingsSmsPut operation.
     * @callback module:api/SettingsApi~webApiSettingsSmsPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SettingsSmsSettingsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Set SMS Settings
     * [DEPRECATED] Set SMS settings.
     * @param {Object} opts Optional parameters
     * @param {module:model/SettingsSmsSettingsPutSchema} opts.body 
     * @param {module:api/SettingsApi~webApiSettingsSmsPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SettingsSmsSettingsSchema200}
     */
    this.webApiSettingsSmsPut = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SettingsSmsSettingsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/settings/sms', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSettingsSmtpGet operation.
     * @callback module:api/SettingsApi~webApiSettingsSmtpGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SettingsSmtpSettingsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get SMTP Settings
     * Get the SMTP server configuration of the given Sites (to get the IDs, run \"sites\") or Accounts (\"accounts\"). The SMTP integration is required to send notifications by email.
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/SettingsApi~webApiSettingsSmtpGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SettingsSmtpSettingsSchema200}
     */
    this.webApiSettingsSmtpGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = SettingsSmtpSettingsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/settings/smtp', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSettingsSmtpPut operation.
     * @callback module:api/SettingsApi~webApiSettingsSmtpPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SettingsSmtpSettingsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Set SMTP Settings
     * Change the SMTP server configuration for the given Sites or Accounts. Use this command to integrate a different SMTP server, which is required to send notifications by email.
     * @param {Object} opts Optional parameters
     * @param {module:model/SettingsSmtpSettingsPutSchema} opts.body 
     * @param {module:api/SettingsApi~webApiSettingsSmtpPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SettingsSmtpSettingsSchema200}
     */
    this.webApiSettingsSmtpPut = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SettingsSmtpSettingsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/settings/smtp', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSettingsSmtpTestPost operation.
     * @callback module:api/SettingsApi~webApiSettingsSmtpTestPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SettingsTestSmtpSettingsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Test SMTP Settings
     * Test SMTP settings between the Management and the SMTP server. This integration is required if you use email notifications.
     * @param {Object} opts Optional parameters
     * @param {module:model/SettingsSmtpSettingsTestSchema} opts.body 
     * @param {module:api/SettingsApi~webApiSettingsSmtpTestPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SettingsTestSmtpSettingsSchema200}
     */
    this.webApiSettingsSmtpTestPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SettingsTestSmtpSettingsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/settings/smtp/test', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSettingsSsoGet operation.
     * @callback module:api/SettingsApi~webApiSettingsSsoGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SettingsSsoSettingFields200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get SSO Settings
     * Get the Single Sign-On configuration for the given Sites (to get the IDs, run \"sites\") or Accounts (\"accounts\"). 
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/SettingsApi~webApiSettingsSsoGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SettingsSsoSettingFields200}
     */
    this.webApiSettingsSsoGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = SettingsSsoSettingFields200;

      return this.apiClient.callApi(
        '/web/api/v2.1/settings/sso', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSettingsSsoPut operation.
     * @callback module:api/SettingsApi~webApiSettingsSsoPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SettingsSsoSettingFields200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Set SSO Settings
     * Change the Single Sign-On configuration for the given Sites (to get the IDs, run \"sites\") or Accounts (\"accounts\"). <br>The Management supports SAML 2.0 and will integrate with SAML 2.0 compliant SSO providers. <br>SentinelOne Technical Support can help you with issues related to the provider we tested: Okta. To use a different ID provider, see the provider documentation and support. <br>For requirements and best practices of Okta integration, see https://support.sentinelone.com/hc/en-us/articles/360004195714.
     * @param {Object} opts Optional parameters
     * @param {module:model/SettingsSsoSettingsPutSchema} opts.body 
     * @param {module:api/SettingsApi~webApiSettingsSsoPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SettingsSsoSettingFields200}
     */
    this.webApiSettingsSsoPut = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SettingsSsoSettingFields200;

      return this.apiClient.callApi(
        '/web/api/v2.1/settings/sso', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSettingsSsoSpCertDownloadGet operation.
     * @callback module:api/SettingsApi~webApiSettingsSsoSpCertDownloadGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Download SSO Service Provider Certificate
     * Download the Service Provider Certificate for the Single Sign-On configuration for the given scope.
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/SettingsApi~webApiSettingsSsoSpCertDownloadGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.webApiSettingsSsoSpCertDownloadGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/web/api/v2.1/settings/sso/sp-cert/download', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSettingsSsoSpCertGet operation.
     * @callback module:api/SettingsApi~webApiSettingsSsoSpCertGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SettingsSsoSpCertificate200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get SSO Service Provider Certificate
     * Get the Service Provider Certificate for the Single Sign-On configuration for the given scope.
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/SettingsApi~webApiSettingsSsoSpCertGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SettingsSsoSpCertificate200}
     */
    this.webApiSettingsSsoSpCertGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = SettingsSsoSpCertificate200;

      return this.apiClient.callApi(
        '/web/api/v2.1/settings/sso/sp-cert', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSettingsSsoTestPost operation.
     * @callback module:api/SettingsApi~webApiSettingsSsoTestPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SettingsSsoTestFields200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Test SSO Settings
     * Test Single Sign-On settings. 
     * @param {Object} opts Optional parameters
     * @param {module:model/SettingsSsoSettingsPutSchema} opts.body 
     * @param {module:api/SettingsApi~webApiSettingsSsoTestPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SettingsSsoTestFields200}
     */
    this.webApiSettingsSsoTestPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SettingsSsoTestFields200;

      return this.apiClient.callApi(
        '/web/api/v2.1/settings/sso/test', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSettingsSyslogGet operation.
     * @callback module:api/SettingsApi~webApiSettingsSyslogGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SettingsSyslogSettingsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Syslog Settings
     * Get the configuration of the syslog server integrated with the given Sites (to get the IDs, run \"sites\") or Accounts (\"accounts\").
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/SettingsApi~webApiSettingsSyslogGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SettingsSyslogSettingsSchema200}
     */
    this.webApiSettingsSyslogGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = SettingsSyslogSettingsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/settings/syslog', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSettingsSyslogPut operation.
     * @callback module:api/SettingsApi~webApiSettingsSyslogPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SettingsSyslogSettingsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Set Syslog Settings
     * Change the configuration of the syslog server of the given Sites (to get the IDs, run \"sites\") or Accounts (\"accounts\"). Use this command to send notifications to a different syslog server. Best Practice: Get Syslog Settings before you run this command.
     * @param {Object} opts Optional parameters
     * @param {module:model/SettingsSyslogSettingsPutSchema} opts.body 
     * @param {module:api/SettingsApi~webApiSettingsSyslogPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SettingsSyslogSettingsSchema200}
     */
    this.webApiSettingsSyslogPut = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SettingsSyslogSettingsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/settings/syslog', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSettingsSyslogTestPost operation.
     * @callback module:api/SettingsApi~webApiSettingsSyslogTestPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SettingsTestSyslogSettingsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Test Syslog Settings
     * Test Syslog settings. The Management tests the connection to the Syslog server. 
     * @param {Object} opts Optional parameters
     * @param {module:model/SettingsSyslogSettingsPutSchema} opts.body 
     * @param {module:api/SettingsApi~webApiSettingsSyslogTestPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SettingsTestSyslogSettingsSchema200}
     */
    this.webApiSettingsSyslogTestPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SettingsTestSyslogSettingsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/settings/syslog/test', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
