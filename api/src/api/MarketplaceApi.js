/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AffectedResultsSchema200', 'model/NoDataSchema400', 'model/NoDataSchema401', 'model/NoDataSchema404', 'model/V21MarketplaceSchemaApplicationCatalogConfigResponseSchema200', 'model/V21MarketplaceSchemaApplicationConfigResponseSchema200', 'model/V21MarketplaceSchemaApplicationDeleteSchema', 'model/V21MarketplaceSchemaApplicationUpdateConfigSchema', 'model/V21MarketplaceSchemaApplicationViewSchemaMany200', 'model/V21MarketplaceSchemaApplicationsCatalogResponseSchemaMany200', 'model/V21MarketplaceSchemaAvailabilityResponseSchema200', 'model/V21MarketplaceSchemaEnableDisableApplicationSchema', 'model/V21MarketplaceSchemaPostApplicationSchema'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/AffectedResultsSchema200'), require('../model/NoDataSchema400'), require('../model/NoDataSchema401'), require('../model/NoDataSchema404'), require('../model/V21MarketplaceSchemaApplicationCatalogConfigResponseSchema200'), require('../model/V21MarketplaceSchemaApplicationConfigResponseSchema200'), require('../model/V21MarketplaceSchemaApplicationDeleteSchema'), require('../model/V21MarketplaceSchemaApplicationUpdateConfigSchema'), require('../model/V21MarketplaceSchemaApplicationViewSchemaMany200'), require('../model/V21MarketplaceSchemaApplicationsCatalogResponseSchemaMany200'), require('../model/V21MarketplaceSchemaAvailabilityResponseSchema200'), require('../model/V21MarketplaceSchemaEnableDisableApplicationSchema'), require('../model/V21MarketplaceSchemaPostApplicationSchema'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.MarketplaceApi = factory(root.S1MgmtApi.ApiClient, root.S1MgmtApi.AffectedResultsSchema200, root.S1MgmtApi.NoDataSchema400, root.S1MgmtApi.NoDataSchema401, root.S1MgmtApi.NoDataSchema404, root.S1MgmtApi.V21MarketplaceSchemaApplicationCatalogConfigResponseSchema200, root.S1MgmtApi.V21MarketplaceSchemaApplicationConfigResponseSchema200, root.S1MgmtApi.V21MarketplaceSchemaApplicationDeleteSchema, root.S1MgmtApi.V21MarketplaceSchemaApplicationUpdateConfigSchema, root.S1MgmtApi.V21MarketplaceSchemaApplicationViewSchemaMany200, root.S1MgmtApi.V21MarketplaceSchemaApplicationsCatalogResponseSchemaMany200, root.S1MgmtApi.V21MarketplaceSchemaAvailabilityResponseSchema200, root.S1MgmtApi.V21MarketplaceSchemaEnableDisableApplicationSchema, root.S1MgmtApi.V21MarketplaceSchemaPostApplicationSchema);
  }
}(this, function(ApiClient, AffectedResultsSchema200, NoDataSchema400, NoDataSchema401, NoDataSchema404, V21MarketplaceSchemaApplicationCatalogConfigResponseSchema200, V21MarketplaceSchemaApplicationConfigResponseSchema200, V21MarketplaceSchemaApplicationDeleteSchema, V21MarketplaceSchemaApplicationUpdateConfigSchema, V21MarketplaceSchemaApplicationViewSchemaMany200, V21MarketplaceSchemaApplicationsCatalogResponseSchemaMany200, V21MarketplaceSchemaAvailabilityResponseSchema200, V21MarketplaceSchemaEnableDisableApplicationSchema, V21MarketplaceSchemaPostApplicationSchema) {
  'use strict';

  /**
   * Marketplace service.
   * @module api/MarketplaceApi
   * @version 2.1
   */

  /**
   * Constructs a new MarketplaceApi. 
   * @alias module:api/MarketplaceApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the webApiPrivateSingularityMarketplaceAvailabilityGet operation.
     * @callback module:api/MarketplaceApi~webApiPrivateSingularityMarketplaceAvailabilityGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21MarketplaceSchemaAvailabilityResponseSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Singularity Marketplace availability
     * Returns Singularity Marketplace availability.
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Boolean} opts.tenant Indicates a tenant scope request
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<module:model/String>} opts.scopes Filter results by scope. Example: \"global\".
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/MarketplaceApi~webApiPrivateSingularityMarketplaceAvailabilityGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21MarketplaceSchemaAvailabilityResponseSchema200}
     */
    this.webApiPrivateSingularityMarketplaceAvailabilityGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'tenant': opts['tenant'],
      };
      var collectionQueryParams = {
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'scopes': {
          value: opts['scopes'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21MarketplaceSchemaAvailabilityResponseSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/private/singularity-marketplace/availability', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSingularityMarketplaceApplicationsCatalogGet operation.
     * @callback module:api/MarketplaceApi~webApiSingularityMarketplaceApplicationsCatalogGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21MarketplaceSchemaApplicationsCatalogResponseSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Applications Catalog
     * Get the Marketplace Application Catalog.
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.categoryContains Free-text filter by catalog application category (supports multiple values). Example: \"Service Pack 1\".
     * @param {Array.<String>} opts.descriptionContains Free-text filter by catalog application description (supports multiple values). Example: \"Service Pack 1\".
     * @param {Array.<String>} opts.query Free-text filter by S1 query (supports multiple values). Example: \"Service Pack 1\".
     * @param {Array.<String>} opts.nameContains Free-text filter by catalog application name (supports multiple values). Example: \"Service Pack 1\".
     * @param {Array.<String>} opts.id Filter results by application catalog id. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/MarketplaceApi~webApiSingularityMarketplaceApplicationsCatalogGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21MarketplaceSchemaApplicationsCatalogResponseSchemaMany200}
     */
    this.webApiSingularityMarketplaceApplicationsCatalogGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
        'category__contains': {
          value: opts['categoryContains'],
          collectionFormat: 'csv'
        },
        'description__contains': {
          value: opts['descriptionContains'],
          collectionFormat: 'csv'
        },
        'query': {
          value: opts['query'],
          collectionFormat: 'csv'
        },
        'name__contains': {
          value: opts['nameContains'],
          collectionFormat: 'csv'
        },
        'id': {
          value: opts['id'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21MarketplaceSchemaApplicationsCatalogResponseSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/singularity-marketplace/applications-catalog', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSingularityMarketplaceApplicationsCatalogapplicationCatalogIdConfigGet operation.
     * @callback module:api/MarketplaceApi~webApiSingularityMarketplaceApplicationsCatalogapplicationCatalogIdConfigGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21MarketplaceSchemaApplicationCatalogConfigResponseSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Configuration Fields
     * Get the Catalog Application Configuration Fields.
     * @param {String} applicationCatalogId Application Catalog ID. Example: \"225494730938493804\".
     * @param {module:api/MarketplaceApi~webApiSingularityMarketplaceApplicationsCatalogapplicationCatalogIdConfigGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21MarketplaceSchemaApplicationCatalogConfigResponseSchema200}
     */
    this.webApiSingularityMarketplaceApplicationsCatalogapplicationCatalogIdConfigGet = function(applicationCatalogId, callback) {
      var postBody = null;

      // verify the required parameter 'applicationCatalogId' is set
      if (applicationCatalogId === undefined || applicationCatalogId === null) {
        throw new Error("Missing the required parameter 'applicationCatalogId' when calling webApiSingularityMarketplaceApplicationsCatalogapplicationCatalogIdConfigGet");
      }


      var pathParams = {
        'application_catalog_id': applicationCatalogId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21MarketplaceSchemaApplicationCatalogConfigResponseSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/singularity-marketplace/applications-catalog/{application_catalog_id}/config', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSingularityMarketplaceApplicationsDelete operation.
     * @callback module:api/MarketplaceApi~webApiSingularityMarketplaceApplicationsDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Application
     * Delete application integration from your Marketplace.
     * @param {Object} opts Optional parameters
     * @param {module:model/V21MarketplaceSchemaApplicationDeleteSchema} opts.body 
     * @param {module:api/MarketplaceApi~webApiSingularityMarketplaceApplicationsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiSingularityMarketplaceApplicationsDelete = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/singularity-marketplace/applications', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSingularityMarketplaceApplicationsGet operation.
     * @callback module:api/MarketplaceApi~webApiSingularityMarketplaceApplicationsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21MarketplaceSchemaApplicationViewSchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Installed Applications
     * Get the installed Marketplace applications for a scope specified.
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.siteIds List of Site IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Boolean} opts.disablePagination If true, all installed applications for requested scope will be returned
     * @param {Number} opts.limit Limit number of returned items (1-1000). Example: \"10\". (default to 10)
     * @param {module:model/String} opts.sortOrder Sort direction. Example: \"asc\". (default to null)
     * @param {module:model/String} opts.sortBy The column to sort the results by. Example: \"id\". (default to null)
     * @param {Array.<String>} opts.applicationCatalogId A list of catalog applications IDs. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.query Free-text filter by S1 query (supports multiple values). Example: \"Service Pack 1\".
     * @param {String} opts.cursor Cursor position returned by the last request. Should be used for iterating over more than 1000 items. Example: \"YWdlbnRfaWQ6NTgwMjkzODE=\". (default to null)
     * @param {Number} opts.skip Skip first number of items (0-1000). For iterating over more than a 1000 items please use \"cursor\" instead. Example: \"150\".
     * @param {Array.<String>} opts.creatorContains Free-text filter by application creator (supports multiple values). Example: \"Service Pack 1\".
     * @param {Array.<String>} opts.nameContains Free-text filter by application name (supports multiple values). Example: \"Service Pack 1\".
     * @param {Array.<String>} opts.groupIds List of Group IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<module:model/String>} opts.scopes Filter results by scope. Example: \"global\".
     * @param {Boolean} opts.skipCount If true, total number of items will not be calculated, which speeds up execution time (default to null)
     * @param {Boolean} opts.countOnly If true, only total number of items will be returned, without any of the actual objects. (default to false)
     * @param {Array.<String>} opts.id A list of applications IDs. Example: \"225494730938493804,225494730938493915\".
     * @param {Array.<String>} opts.accountIds List of Account IDs to filter by. Example: \"225494730938493804,225494730938493915\".
     * @param {module:api/MarketplaceApi~webApiSingularityMarketplaceApplicationsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21MarketplaceSchemaApplicationViewSchemaMany200}
     */
    this.webApiSingularityMarketplaceApplicationsGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'disablePagination': opts['disablePagination'],
        'limit': opts['limit'],
        'sortOrder': opts['sortOrder'],
        'sortBy': opts['sortBy'],
        'cursor': opts['cursor'],
        'skip': opts['skip'],
        'skipCount': opts['skipCount'],
        'countOnly': opts['countOnly'],
      };
      var collectionQueryParams = {
        'siteIds': {
          value: opts['siteIds'],
          collectionFormat: 'csv'
        },
        'application_catalog_id': {
          value: opts['applicationCatalogId'],
          collectionFormat: 'csv'
        },
        'query': {
          value: opts['query'],
          collectionFormat: 'csv'
        },
        'creator__contains': {
          value: opts['creatorContains'],
          collectionFormat: 'csv'
        },
        'name__contains': {
          value: opts['nameContains'],
          collectionFormat: 'csv'
        },
        'groupIds': {
          value: opts['groupIds'],
          collectionFormat: 'csv'
        },
        'scopes': {
          value: opts['scopes'],
          collectionFormat: 'csv'
        },
        'id': {
          value: opts['id'],
          collectionFormat: 'csv'
        },
        'accountIds': {
          value: opts['accountIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21MarketplaceSchemaApplicationViewSchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/singularity-marketplace/applications', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSingularityMarketplaceApplicationsPost operation.
     * @callback module:api/MarketplaceApi~webApiSingularityMarketplaceApplicationsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Install Applications
     * Install application from the Application Catalog.
     * @param {Object} opts Optional parameters
     * @param {module:model/V21MarketplaceSchemaPostApplicationSchema} opts.body 
     * @param {module:api/MarketplaceApi~webApiSingularityMarketplaceApplicationsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiSingularityMarketplaceApplicationsPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/singularity-marketplace/applications', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSingularityMarketplaceApplicationsPut operation.
     * @callback module:api/MarketplaceApi~webApiSingularityMarketplaceApplicationsPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Application Configuration
     * Update installed application configuration.
     * @param {Object} opts Optional parameters
     * @param {module:model/V21MarketplaceSchemaApplicationUpdateConfigSchema} opts.body 
     * @param {module:api/MarketplaceApi~webApiSingularityMarketplaceApplicationsPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiSingularityMarketplaceApplicationsPut = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/singularity-marketplace/applications', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSingularityMarketplaceApplicationsapplicationIdConfigGet operation.
     * @callback module:api/MarketplaceApi~webApiSingularityMarketplaceApplicationsapplicationIdConfigGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21MarketplaceSchemaApplicationConfigResponseSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Configuration fields for Catalog Application
     * Returns The configuration schema for a requested Application Catalog.
     * @param {String} applicationId Application ID. Example: \"225494730938493804\".
     * @param {module:api/MarketplaceApi~webApiSingularityMarketplaceApplicationsapplicationIdConfigGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21MarketplaceSchemaApplicationConfigResponseSchema200}
     */
    this.webApiSingularityMarketplaceApplicationsapplicationIdConfigGet = function(applicationId, callback) {
      var postBody = null;

      // verify the required parameter 'applicationId' is set
      if (applicationId === undefined || applicationId === null) {
        throw new Error("Missing the required parameter 'applicationId' when calling webApiSingularityMarketplaceApplicationsapplicationIdConfigGet");
      }


      var pathParams = {
        'application_id': applicationId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = V21MarketplaceSchemaApplicationConfigResponseSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/singularity-marketplace/applications/{application_id}/config', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiSingularityMarketplaceApplicationsmodePost operation.
     * @callback module:api/MarketplaceApi~webApiSingularityMarketplaceApplicationsmodePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Enable or Disable application
     * Use this command to enable or disable application integrations that match the filter.
     * @param {String} mode Mode
     * @param {Object} opts Optional parameters
     * @param {module:model/V21MarketplaceSchemaEnableDisableApplicationSchema} opts.body 
     * @param {module:api/MarketplaceApi~webApiSingularityMarketplaceApplicationsmodePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiSingularityMarketplaceApplicationsmodePost = function(mode, opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];

      // verify the required parameter 'mode' is set
      if (mode === undefined || mode === null) {
        throw new Error("Missing the required parameter 'mode' when calling webApiSingularityMarketplaceApplicationsmodePost");
      }


      var pathParams = {
        'mode': mode
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/singularity-marketplace/applications/{mode}', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
