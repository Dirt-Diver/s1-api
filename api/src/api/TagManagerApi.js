/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AffectedResultsSchema200', 'model/NoDataSchema400', 'model/NoDataSchema401', 'model/V21MgmtTagManagerSchemasPostTagSchema', 'model/V21MgmtTagManagerSchemasPutTagSchema', 'model/V21MgmtTagManagerSchemasTagsDeleteSchema', 'model/V21MgmtTagManagerSchemasTagsViewSchema200'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/AffectedResultsSchema200'), require('../model/NoDataSchema400'), require('../model/NoDataSchema401'), require('../model/V21MgmtTagManagerSchemasPostTagSchema'), require('../model/V21MgmtTagManagerSchemasPutTagSchema'), require('../model/V21MgmtTagManagerSchemasTagsDeleteSchema'), require('../model/V21MgmtTagManagerSchemasTagsViewSchema200'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.TagManagerApi = factory(root.S1MgmtApi.ApiClient, root.S1MgmtApi.AffectedResultsSchema200, root.S1MgmtApi.NoDataSchema400, root.S1MgmtApi.NoDataSchema401, root.S1MgmtApi.V21MgmtTagManagerSchemasPostTagSchema, root.S1MgmtApi.V21MgmtTagManagerSchemasPutTagSchema, root.S1MgmtApi.V21MgmtTagManagerSchemasTagsDeleteSchema, root.S1MgmtApi.V21MgmtTagManagerSchemasTagsViewSchema200);
  }
}(this, function(ApiClient, AffectedResultsSchema200, NoDataSchema400, NoDataSchema401, V21MgmtTagManagerSchemasPostTagSchema, V21MgmtTagManagerSchemasPutTagSchema, V21MgmtTagManagerSchemasTagsDeleteSchema, V21MgmtTagManagerSchemasTagsViewSchema200) {
  'use strict';

  /**
   * TagManager service.
   * @module api/TagManagerApi
   * @version 2.1
   */

  /**
   * Constructs a new TagManagerApi. 
   * @alias module:api/TagManagerApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the webApiTagManagerDelete operation.
     * @callback module:api/TagManagerApi~webApiTagManagerDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AffectedResultsSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete tags
     * Delete all tags that match the filters.
     * @param {Object} opts Optional parameters
     * @param {module:model/V21MgmtTagManagerSchemasTagsDeleteSchema} opts.body 
     * @param {module:api/TagManagerApi~webApiTagManagerDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AffectedResultsSchema200}
     */
    this.webApiTagManagerDelete = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AffectedResultsSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/tag-manager', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiTagManagerPost operation.
     * @callback module:api/TagManagerApi~webApiTagManagerPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21MgmtTagManagerSchemasTagsViewSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new endpoint tag
     * Each tag must contain a type (endpoints) and key, Value is optional but recommended. A description is optional.
     * @param {Object} opts Optional parameters
     * @param {module:model/V21MgmtTagManagerSchemasPostTagSchema} opts.body 
     * @param {module:api/TagManagerApi~webApiTagManagerPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21MgmtTagManagerSchemasTagsViewSchema200}
     */
    this.webApiTagManagerPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = V21MgmtTagManagerSchemasTagsViewSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/tag-manager', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webApiTagManagertagIdPut operation.
     * @callback module:api/TagManagerApi~webApiTagManagertagIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V21MgmtTagManagerSchemasTagsViewSchema200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Edit an existing tag
     * Change the key, value, or description of a tag.
     * @param {String} tagId Tag ID. You can get the ID from the Get Tag-Manager command. Example: \"225494730938493804\".
     * @param {Object} opts Optional parameters
     * @param {module:model/V21MgmtTagManagerSchemasPutTagSchema} opts.body 
     * @param {module:api/TagManagerApi~webApiTagManagertagIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V21MgmtTagManagerSchemasTagsViewSchema200}
     */
    this.webApiTagManagertagIdPut = function(tagId, opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];

      // verify the required parameter 'tagId' is set
      if (tagId === undefined || tagId === null) {
        throw new Error("Missing the required parameter 'tagId' when calling webApiTagManagertagIdPut");
      }


      var pathParams = {
        'tag_id': tagId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = V21MgmtTagManagerSchemasTagsViewSchema200;

      return this.apiClient.callApi(
        '/web/api/v2.1/tag-manager/{tag_id}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
