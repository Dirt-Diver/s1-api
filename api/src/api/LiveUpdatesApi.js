/*
 * S1 MGMT API
 * SentinelOne Management Console API specification.
 *
 * OpenAPI spec version: 2.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.39
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/GlobalAssetsInventorySchemasAgentGlobalAssetsInventorySchemaMany200', 'model/NoDataSchema400', 'model/NoDataSchema401'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/GlobalAssetsInventorySchemasAgentGlobalAssetsInventorySchemaMany200'), require('../model/NoDataSchema400'), require('../model/NoDataSchema401'));
  } else {
    // Browser globals (root is window)
    if (!root.S1MgmtApi) {
      root.S1MgmtApi = {};
    }
    root.S1MgmtApi.LiveUpdatesApi = factory(root.S1MgmtApi.ApiClient, root.S1MgmtApi.GlobalAssetsInventorySchemasAgentGlobalAssetsInventorySchemaMany200, root.S1MgmtApi.NoDataSchema400, root.S1MgmtApi.NoDataSchema401);
  }
}(this, function(ApiClient, GlobalAssetsInventorySchemasAgentGlobalAssetsInventorySchemaMany200, NoDataSchema400, NoDataSchema401) {
  'use strict';

  /**
   * LiveUpdates service.
   * @module api/LiveUpdatesApi
   * @version 2.1
   */

  /**
   * Constructs a new LiveUpdatesApi. 
   * @alias module:api/LiveUpdatesApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the webApiContentUpdatesInventoryGet operation.
     * @callback module:api/LiveUpdatesApi~webApiContentUpdatesInventoryGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GlobalAssetsInventorySchemasAgentGlobalAssetsInventorySchemaMany200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Agent Merged Updates
     * Get Agent's merged updates.
     * @param {String} agentId The ID of the Agent. Example: \"225494730938493804\".
     * @param {Object} opts Optional parameters
     * @param {String} opts.cursor Cursor position returned by the last request. Use to iterate over more than 1000 items. Example: \"YWdlbnRfaWQ6NTgwMjkzODE=\". (default to null)
     * @param {Number} opts.skip Skip first number of items (0-1000). To iterate over more than 1000 items,  use \"cursor\". Example: \"150\".
     * @param {Boolean} opts.skipCount If true, total number of items will not be calculated, which speeds up execution time. (default to null)
     * @param {module:model/String} opts.sortOrder Sort direction. Example: \"asc\". (default to null)
     * @param {module:model/String} opts.sortBy The column to sort the results by. Example: \"id\". (default to null)
     * @param {Boolean} opts.countOnly If true, only total number of items will be returned, without any of the actual objects. (default to false)
     * @param {Number} opts.limit Limit number of returned items (1-1000). Example: \"10\". (default to 10)
     * @param {module:api/LiveUpdatesApi~webApiContentUpdatesInventoryGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GlobalAssetsInventorySchemasAgentGlobalAssetsInventorySchemaMany200}
     */
    this.webApiContentUpdatesInventoryGet = function(agentId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'agentId' is set
      if (agentId === undefined || agentId === null) {
        throw new Error("Missing the required parameter 'agentId' when calling webApiContentUpdatesInventoryGet");
      }


      var pathParams = {
      };
      var queryParams = {
        'cursor': opts['cursor'],
        'skip': opts['skip'],
        'skipCount': opts['skipCount'],
        'sortOrder': opts['sortOrder'],
        'sortBy': opts['sortBy'],
        'agentId': agentId,
        'countOnly': opts['countOnly'],
        'limit': opts['limit'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['ApiTokenAuth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = GlobalAssetsInventorySchemasAgentGlobalAssetsInventorySchemaMany200;

      return this.apiClient.callApi(
        '/web/api/v2.1/content-updates-inventory', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
